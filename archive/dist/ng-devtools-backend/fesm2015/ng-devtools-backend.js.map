{"version":3,"file":"ng-devtools-backend.js","sources":["../../../projects/ng-devtools-backend/src/lib/utils.ts","../../../projects/ng-devtools-backend/src/lib/highlighter.ts","../../../projects/ng-devtools-backend/src/lib/version.ts","../../../projects/ng-devtools-backend/src/lib/lview-transform.ts","../../../projects/ng-devtools-backend/src/lib/state-serializer/serialized-descriptor-factory.ts","../../../projects/ng-devtools-backend/src/lib/state-serializer/state-serializer.ts","../../../projects/ng-devtools-backend/src/lib/component-tree.ts","../../../projects/ng-devtools-backend/src/lib/router-tree.ts","../../../projects/ng-devtools-backend/src/lib/hooks/identity-tracker.ts","../../../projects/ng-devtools-backend/src/lib/hooks/hooks.ts","../../../projects/ng-devtools-backend/src/lib/hooks/index.ts","../../../projects/ng-devtools-backend/src/lib/hooks/capture.ts","../../../projects/ng-devtools-backend/src/lib/component-inspector/component-inspector.ts","../../../projects/ng-devtools-backend/src/lib/set-console-reference.ts","../../../projects/ng-devtools-backend/src/lib/angular-check.ts","../../../projects/ng-devtools-backend/src/lib/client-event-subscribers.ts","../../../projects/ng-devtools-backend/src/lib/index.ts","../../../projects/ng-devtools-backend/src/public-api.ts","../../../projects/ng-devtools-backend/src/ng-devtools-backend.ts"],"sourcesContent":["export const runOutsideAngular = (f: () => any): void => {\n  const w = window as any;\n  if (!w.Zone || !w.Zone.current) {\n    f();\n    return;\n  }\n  if (w.Zone.current._name !== 'angular') {\n    w.Zone.current.run(f);\n    return;\n  }\n  w.Zone.current._parent.run(f);\n};\n\nexport const componentMetadata = (instance: any) => instance.constructor.Éµcmp;\n\nexport const isCustomElement = (node: Node) => {\n  if (typeof customElements === 'undefined') {\n    return false;\n  }\n  if (!(node instanceof HTMLElement)) {\n    return false;\n  }\n  const tagName = node.tagName.toLowerCase();\n  return !!customElements.get(tagName);\n};\n","import { Type } from '@angular/core';\n\nlet overlay: any;\nlet overlayContent: any;\n\ndeclare const ng: any;\n\nexport const DEV_TOOLS_HIGHLIGHT_NODE_ID = '____ngDevToolsHighlight';\n\nfunction init(): void {\n  if (overlay) {\n    return;\n  }\n  overlay = document.createElement('div');\n  overlay.style.backgroundColor = 'rgba(104, 182, 255, 0.35)';\n  overlay.style.position = 'fixed';\n  overlay.style.zIndex = '2147483647';\n  overlay.style.pointerEvents = 'none';\n  overlay.style.display = 'flex';\n  overlay.style.borderRadius = '3px';\n  overlay.setAttribute('id', DEV_TOOLS_HIGHLIGHT_NODE_ID);\n  overlayContent = document.createElement('div');\n  overlayContent.style.backgroundColor = 'rgba(104, 182, 255, 0.9)';\n  overlayContent.style.position = 'absolute';\n  overlayContent.style.bottom = '-23px';\n  overlayContent.style.right = '0px';\n  overlayContent.style.fontFamily = 'monospace';\n  overlayContent.style.fontSize = '11px';\n  overlayContent.style.padding = '2px 3px';\n  overlayContent.style.borderRadius = '3px';\n  overlayContent.style.color = 'white';\n  overlay.appendChild(overlayContent);\n}\n\nexport const findComponentAndHost = (el: Node | undefined): { component: any; host: HTMLElement | null } => {\n  if (!el) {\n    return { component: null, host: null };\n  }\n  while (el) {\n    const component = el instanceof HTMLElement && ng.getComponent(el);\n    if (component) {\n      return { component, host: el as HTMLElement };\n    }\n    if (!el.parentElement) {\n      break;\n    }\n    el = el.parentElement;\n  }\n  return { component: null, host: null };\n};\n\n// Todo(aleksanderbodurri): this should not be part of the highlighter, move this somewhere else\nexport const getDirectiveName = (dir: Type<unknown> | undefined | null): string => {\n  if (dir) {\n    return dir.constructor.name;\n  }\n  return 'unknown';\n};\n\nexport const highlight = (el: HTMLElement): void => {\n  const cmp = findComponentAndHost(el).component;\n  const rect = getComponentRect(el);\n\n  init();\n  if (rect) {\n    const content: Node[] = [];\n    const name = getDirectiveName(cmp);\n    if (name) {\n      const pre = document.createElement('span');\n      pre.style.opacity = '0.6';\n      pre.innerText = '<';\n      const text = document.createTextNode(name);\n      const post = document.createElement('span');\n      post.style.opacity = '0.6';\n      post.innerText = '>';\n      content.push(pre, text, post);\n    }\n    showOverlay(rect, content);\n  }\n};\n\nexport function unHighlight(): void {\n  if (overlay && overlay.parentNode) {\n    document.body.removeChild(overlay);\n  }\n}\n\nexport function inDoc(node: any): boolean {\n  if (!node) {\n    return false;\n  }\n  const doc = node.ownerDocument.documentElement;\n  const parent = node.parentNode;\n  return doc === node || doc === parent || !!(parent && parent.nodeType === 1 && doc.contains(parent));\n}\n\nexport function getComponentRect(el: Node): DOMRect | ClientRect | undefined {\n  if (!(el instanceof HTMLElement)) {\n    return;\n  }\n  if (!inDoc(el)) {\n    return;\n  }\n  return el.getBoundingClientRect();\n}\n\ninterface OverlayDimensionsAndPosition {\n  width: number;\n  height: number;\n  top: number;\n  left: number;\n}\n\nfunction showOverlay(\n  { width = 0, height = 0, top = 0, left = 0 }: OverlayDimensionsAndPosition,\n  content: any[] = []\n): void {\n  overlay.style.width = ~~width + 'px';\n  overlay.style.height = ~~height + 'px';\n  overlay.style.top = ~~top + 'px';\n  overlay.style.left = ~~left + 'px';\n\n  overlayContent.innerHTML = '';\n  content.forEach((child) => overlayContent.appendChild(child));\n\n  document.body.appendChild(overlay);\n}\n","const versionElement = document.querySelector('[ng-version]');\nconst versionRe = /(\\d+\\.\\d+\\.\\d+(-(next|rc)\\.\\d+)?)/;\n\nconst defaultVersion = '0.0.0';\nlet version = defaultVersion;\nif (versionElement) {\n  version = versionElement.getAttribute('ng-version') ?? defaultVersion;\n  version = (version.match(versionRe) ?? [''])[0] ?? defaultVersion;\n}\n\nexport const VERSION = version;\n","import { ComponentTreeNode, ComponentInstanceType, DirectiveInstanceType } from './component-tree';\nimport { isCustomElement } from './utils';\nimport { getDirectiveName } from './highlighter';\nimport { SemVerDSL } from 'semver-dsl';\nimport { VERSION } from './version';\n\nlet HEADER_OFFSET = 19;\n\nconst latest = () => {\n  HEADER_OFFSET = 20;\n};\n\nSemVerDSL(VERSION).gte('10.0.0-next.4', latest);\n\n// In g3 everyone has version 0.0.0, using HEAD from master.\nSemVerDSL(VERSION).eq('0.0.0', latest);\n\nconst TYPE = 1;\nconst ELEMENT = 0;\nconst LVIEW_TVIEW = 1;\nexport const METADATA_PROPERTY_NAME = '__ngContext__';\n\nconst isLContainer = (value: any): boolean => {\n  return Array.isArray(value) && value[TYPE] === true;\n};\n\nconst isLView = (value: any): boolean => {\n  return Array.isArray(value) && typeof value[TYPE] === 'object';\n};\n\nexport const getLViewFromDirectiveOrElementInstance = (dir: any): null | {} => {\n  if (!dir) {\n    return null;\n  }\n  const context = dir[METADATA_PROPERTY_NAME];\n  if (!context) {\n    return null;\n  }\n  if (isLView(context)) {\n    return context;\n  }\n  return context.lView;\n};\n\nexport const getDirectiveHostElement = (dir: any) => {\n  const ctx = dir[METADATA_PROPERTY_NAME];\n  if (ctx[0] !== null) {\n    return ctx[0];\n  }\n  const components = ctx[LVIEW_TVIEW].components;\n  if (!components || components.length !== 1) {\n    return false;\n  }\n  return ctx[components[0]][0];\n};\n\nconst getNode = (lView: any, data: any, idx: number): ComponentTreeNode => {\n  const directives: DirectiveInstanceType[] = [];\n  let component: ComponentInstanceType | null = null;\n  const tNode = data[idx];\n  const node = lView[idx][ELEMENT];\n  const elementName = (node.tagName || node.nodeName).toLowerCase();\n  for (let i = tNode.directiveStart; i < tNode.directiveEnd; i++) {\n    const dir = lView[i];\n    const dirMeta = data[i];\n    if (dirMeta && dirMeta.template) {\n      component = {\n        name: elementName,\n        instance: dir,\n        isElement: isCustomElement(node),\n      };\n    } else if (dirMeta) {\n      directives.push({\n        name: getDirectiveName(dir),\n        instance: dir,\n      });\n    }\n  }\n  return {\n    element: elementName,\n    nativeElement: lView[idx][ELEMENT],\n    directives,\n    component,\n    children: [],\n  };\n};\n\nconst extractNodes = (lViewOrLContainer: any, nodes: ComponentTreeNode[] = []): ComponentTreeNode[] => {\n  if (isLContainer(lViewOrLContainer)) {\n    for (let i = 9; i < lViewOrLContainer.length; i++) {\n      if (lViewOrLContainer[i]) {\n        extractNodes(lViewOrLContainer[i], nodes);\n      }\n    }\n    return nodes;\n  }\n  const lView = lViewOrLContainer;\n  const tView = lView[LVIEW_TVIEW];\n  for (let i = HEADER_OFFSET; i < lView.length; i++) {\n    if (lView[i] && tView.data && lView[i][ELEMENT] instanceof Node) {\n      const node = getNode(lView, tView.data, i);\n\n      // TODO(mgechev): verify if this won't make us skip projected content.\n      if (node.component || node.directives.length) {\n        nodes.push(node);\n        extractNodes(lView[i], node.children);\n      }\n    }\n  }\n  return nodes;\n};\n\nexport const buildDirectiveTree = (lView: any) => extractNodes(lView);\n","import { Descriptor, NestedProp, PropType } from 'protocol';\nimport { METADATA_PROPERTY_NAME } from '../lview-transform';\n\nexport interface CompositeType {\n  type: Extract<PropType, PropType.Array | PropType.Object>;\n  prop: any;\n}\n\nexport interface TerminalType {\n  type: Exclude<PropType, PropType.Array | PropType.Object>;\n  prop: any;\n}\n\nexport type PropertyData = TerminalType | CompositeType;\n\nexport type Formatter<Result> = {\n  [key in PropType]: (data: any) => Result;\n};\n\ninterface LevelOptions {\n  currentLevel: number;\n  level?: number;\n}\n\nconst serializable: { [key in PropType]: boolean } = {\n  [PropType.Boolean]: true,\n  [PropType.String]: true,\n  [PropType.Null]: true,\n  [PropType.Number]: true,\n  [PropType.Object]: true,\n  [PropType.Undefined]: true,\n  [PropType.Unknown]: true,\n  [PropType.Array]: false,\n  [PropType.BigInt]: false,\n  [PropType.Function]: false,\n  [PropType.HTMLNode]: false,\n  [PropType.Symbol]: false,\n  [PropType.Date]: false,\n};\n\nconst typeToDescriptorPreview: Formatter<string> = {\n  [PropType.Array]: (prop: any) => `Array(${prop.length})`,\n  [PropType.BigInt]: (prop: any) => truncate(prop.toString()),\n  [PropType.Boolean]: (prop: any) => truncate(prop.toString()),\n  [PropType.String]: (prop: any) => `\"${prop}\"`,\n  [PropType.Function]: (prop: any) => `${prop.name}(...)`,\n  [PropType.HTMLNode]: (prop: any) => prop.constructor.name,\n  [PropType.Null]: (_: any) => 'null',\n  [PropType.Number]: (prop: any) => parseInt(prop, 10).toString(),\n  [PropType.Object]: (prop: any) => (Object.keys(prop).length > 0 ? '{...}' : '{}'),\n  [PropType.Symbol]: (_: any) => 'Symbol()',\n  [PropType.Undefined]: (_: any) => 'undefined',\n  [PropType.Date]: (_: any) => 'Date()',\n  [PropType.Unknown]: (_: any) => 'unknown',\n};\n\nconst ignoreList = new Set([METADATA_PROPERTY_NAME, '__ngSimpleChanges__']);\n\nconst shallowPropTypeToTreeMetaData = {\n  [PropType.String]: {\n    editable: true,\n    expandable: false,\n  },\n  [PropType.BigInt]: {\n    editable: false,\n    expandable: false,\n  },\n  [PropType.Boolean]: {\n    editable: true,\n    expandable: false,\n  },\n  [PropType.Number]: {\n    editable: true,\n    expandable: false,\n  },\n  [PropType.Date]: {\n    editable: true,\n    expandable: false,\n  },\n  [PropType.Null]: {\n    editable: true,\n    expandable: false,\n  },\n  [PropType.Undefined]: {\n    editable: true,\n    expandable: false,\n  },\n  [PropType.Symbol]: {\n    editable: false,\n    expandable: false,\n  },\n  [PropType.Function]: {\n    editable: false,\n    expandable: false,\n  },\n  [PropType.HTMLNode]: {\n    editable: false,\n    expandable: false,\n  },\n  [PropType.Unknown]: {\n    editable: false,\n    expandable: false,\n  },\n};\n\nexport const createShallowSerializedDescriptor = (propData: TerminalType): Descriptor => {\n  const { type } = propData;\n\n  const shallowSerializedDescriptor: Descriptor = {\n    type,\n    expandable: shallowPropTypeToTreeMetaData[type].expandable,\n    editable: shallowPropTypeToTreeMetaData[type].editable,\n    preview: typeToDescriptorPreview[propData.type](propData.prop),\n  };\n\n  if (propData.prop !== undefined && serializable[type]) {\n    shallowSerializedDescriptor.value = propData.prop;\n  }\n\n  return shallowSerializedDescriptor;\n};\n\nexport const createLevelSerializedDescriptor = (\n  propData: CompositeType,\n  levelOptions: LevelOptions,\n  continuation: any\n): Descriptor => {\n  const { type, prop } = propData;\n\n  const levelSerializedDescriptor: Descriptor = {\n    type,\n    editable: false,\n    expandable: Object.keys(prop).length > 0,\n    preview: typeToDescriptorPreview[propData.type](propData.prop),\n  };\n\n  if (levelOptions.level !== undefined && levelOptions.currentLevel < levelOptions.level) {\n    const value = getLevelDescriptorValue(propData, levelOptions, continuation);\n    if (value !== undefined) {\n      levelSerializedDescriptor.value = value;\n    }\n  }\n\n  return levelSerializedDescriptor;\n};\n\nexport const createNestedSerializedDescriptor = (\n  propData: CompositeType,\n  levelOptions: LevelOptions,\n  nodes: NestedProp[],\n  nestedSerializer: any\n): Descriptor => {\n  const { type, prop } = propData;\n\n  const nestedSerializedDescriptor: Descriptor = {\n    type,\n    editable: false,\n    expandable: Object.keys(prop).length > 0,\n    preview: typeToDescriptorPreview[propData.type](propData.prop),\n  };\n\n  if (nodes && nodes.length) {\n    const value = getNestedDescriptorValue(propData, levelOptions, nodes, nestedSerializer);\n    if (value !== undefined) {\n      nestedSerializedDescriptor.value = value;\n    }\n  }\n  return nestedSerializedDescriptor;\n};\n\nconst getNestedDescriptorValue = (\n  propData: CompositeType,\n  levelOptions: LevelOptions,\n  nodes: NestedProp[],\n  nestedSerializer: any\n) => {\n  const { type, prop } = propData;\n  const { currentLevel } = levelOptions;\n\n  switch (type) {\n    case PropType.Array:\n      return nodes.map(nestedProp => nestedSerializer(prop[nestedProp.name], nestedProp.children, currentLevel + 1));\n    case PropType.Object:\n      return nodes.reduce((accumulator, nestedProp) => {\n        if (\n          prop.hasOwnProperty(nestedProp.name) &&\n          typeof nestedProp.name === 'string' &&\n          !ignoreList.has(nestedProp.name)\n        ) {\n          accumulator[nestedProp.name] = nestedSerializer(prop[nestedProp.name], nestedProp.children, currentLevel + 1);\n        }\n        return accumulator;\n      }, {});\n  }\n};\n\nconst getLevelDescriptorValue = (propData: CompositeType, levelOptions: LevelOptions, continuation: any) => {\n  const { type, prop } = propData;\n  const { currentLevel, level } = levelOptions;\n\n  switch (type) {\n    case PropType.Array:\n      return prop.map((nested: any, idx: number) => continuation(nested, idx, currentLevel + 1, level));\n    case PropType.Object:\n      return Object.keys(prop).reduce((accumulator, propName) => {\n        if (typeof propName === 'string' && !ignoreList.has(propName)) {\n          accumulator[propName] = continuation(prop[propName], propName, currentLevel + 1, level);\n        }\n        return accumulator;\n      }, {});\n  }\n};\n\nconst truncate = (str: string, max = 20): string => {\n  if (str.length > max) {\n    return str.substr(0, max) + '...';\n  }\n  return str;\n};\n","import { Descriptor, NestedProp, PropType } from 'protocol';\nimport {\n  createLevelSerializedDescriptor,\n  createNestedSerializedDescriptor,\n  createShallowSerializedDescriptor,\n  PropertyData,\n} from './serialized-descriptor-factory';\nimport { METADATA_PROPERTY_NAME } from '../lview-transform';\n\nconst ignoreList = new Set([METADATA_PROPERTY_NAME, '__ngSimpleChanges__']);\n\nconst commonTypes = {\n  boolean: PropType.Boolean,\n  bigint: PropType.BigInt,\n  function: PropType.Function,\n  number: PropType.Number,\n  string: PropType.String,\n  symbol: PropType.Symbol,\n};\n\nconst MAX_LEVEL = 1;\n\nconst getPropType = (prop: any): PropType => {\n  if (prop === undefined) {\n    return PropType.Undefined;\n  }\n  if (prop === null) {\n    return PropType.Null;\n  }\n  if (prop instanceof HTMLElement) {\n    return PropType.HTMLNode;\n  }\n  const type = typeof prop;\n  if (commonTypes[type] !== undefined) {\n    return commonTypes[type];\n  }\n  if (type === 'object') {\n    if (Array.isArray(prop)) {\n      return PropType.Array;\n    } else if (Object.prototype.toString.call(prop) === '[object Date]') {\n      return PropType.Date;\n    } else if (prop instanceof Node) {\n      return PropType.HTMLNode;\n    } else {\n      return PropType.Object;\n    }\n  }\n  return PropType.Unknown;\n};\n\nexport const nestedSerializer = (\n  serializableInstance: any,\n  nodes: NestedProp[],\n  currentLevel = 0,\n  level = MAX_LEVEL\n): Descriptor => {\n  const propData: PropertyData = { prop: serializableInstance, type: getPropType(serializableInstance) };\n  const levelOptions = { level, currentLevel };\n\n  if (currentLevel < level) {\n    return levelSerializer(\n      serializableInstance,\n      undefined,\n      currentLevel,\n      level,\n      nestedSerializerContinuation(nodes, level)\n    );\n  }\n\n  switch (propData.type) {\n    case PropType.Array:\n    case PropType.Object:\n      return createNestedSerializedDescriptor(propData, levelOptions, nodes, nestedSerializer);\n    default:\n      return createShallowSerializedDescriptor(propData);\n  }\n};\n\nconst nestedSerializerContinuation = (nodes: NestedProp[], level: number) => (\n  nestedProp: any,\n  propName: string | number | undefined,\n  nestedLevel: number\n) => {\n  const idx = nodes.findIndex(v => v.name === propName);\n  if (idx < 0) {\n    // The property is not specified in the query.\n    return nestedSerializer(nestedProp, [], nestedLevel, level);\n  }\n  return nestedSerializer(nestedProp, nodes[idx].children, nestedLevel, level);\n};\n\nexport const levelSerializer = (\n  serializableInstance: any,\n  _: string | number | undefined = undefined,\n  currentLevel = 0,\n  level = MAX_LEVEL,\n  continuation = levelSerializer\n): Descriptor => {\n  const propData: PropertyData = { prop: serializableInstance, type: getPropType(serializableInstance) };\n  const levelOptions = { level, currentLevel };\n\n  switch (propData.type) {\n    case PropType.Array:\n    case PropType.Object:\n      return createLevelSerializedDescriptor(propData, levelOptions, continuation);\n    default:\n      return createShallowSerializedDescriptor(propData);\n  }\n};\n\nexport const serializeDirectiveState = (instance: object, levels = MAX_LEVEL): { [key: string]: Descriptor } => {\n  const result = {};\n  for (const prop in instance) {\n    if (instance.hasOwnProperty(prop) && !ignoreList.has(prop)) {\n      result[prop] = levelSerializer(instance[prop], null, 0, levels);\n    }\n  }\n  return result;\n};\n\nexport const deeplySerializeSelectedProperties = (\n  instance: any,\n  props: NestedProp[]\n): { [name: string]: Descriptor } => {\n  const result = {};\n  Object.keys(instance).forEach(propName => {\n    if (ignoreList.has(propName)) {\n      return;\n    }\n    const idx = props.findIndex(v => v.name === propName);\n    if (idx < 0) {\n      result[propName] = levelSerializer(instance[propName]);\n    } else {\n      result[propName] = nestedSerializer(instance[propName], props[idx].children);\n    }\n  });\n  return result;\n};\n","import { deeplySerializeSelectedProperties, serializeDirectiveState } from './state-serializer/state-serializer';\n\nimport {\n  ComponentExplorerViewQuery,\n  DevToolsNode,\n  DirectiveMetadata,\n  DirectivesProperties,\n  ElementPosition,\n  PropertyQueryTypes,\n  UpdatedStateData,\n} from 'protocol';\nimport { buildDirectiveTree, getLViewFromDirectiveOrElementInstance } from './lview-transform';\n\nconst ngDebug = () => (window as any).ng;\n\nexport interface DirectiveInstanceType {\n  instance: any;\n  name: string;\n}\n\nexport interface ComponentInstanceType {\n  instance: any;\n  name: string;\n  isElement: boolean;\n}\n\nexport interface ComponentTreeNode extends DevToolsNode<DirectiveInstanceType, ComponentInstanceType> {\n  children: ComponentTreeNode[];\n}\n\nexport const getLatestComponentState = (\n  query: ComponentExplorerViewQuery,\n  directiveForest?: ComponentTreeNode[]\n): DirectivesProperties | undefined => {\n  // if a directive forest is passed in we don't have to build the forest again.\n  directiveForest = directiveForest ?? buildDirectiveForest();\n\n  const node = queryDirectiveForest(query.selectedElement, directiveForest);\n  if (!node) {\n    return;\n  }\n\n  const result: DirectivesProperties = {};\n\n  const populateResultSet = (dir: DirectiveInstanceType | ComponentInstanceType) => {\n    if (query.propertyQuery.type === PropertyQueryTypes.All) {\n      result[dir.name] = {\n        props: serializeDirectiveState(dir.instance),\n        metadata: getDirectiveMetadata(dir.instance),\n      };\n    }\n    if (query.propertyQuery.type === PropertyQueryTypes.Specified) {\n      result[dir.name] = {\n        props: deeplySerializeSelectedProperties(dir.instance, query.propertyQuery.properties[dir.name] || []),\n        metadata: getDirectiveMetadata(dir.instance),\n      };\n    }\n  };\n\n  node.directives.forEach(populateResultSet);\n  if (node.component) {\n    populateResultSet(node.component);\n  }\n\n  return result;\n};\n\nconst enum DirectiveMetadataKey {\n  INPUTS = 'inputs',\n  OUTPUTS = 'outputs',\n  ENCAPSULATION = 'encapsulation',\n  ON_PUSH = 'onPush',\n}\n\nexport const getDirectiveMetadata = (dir: any): DirectiveMetadata => {\n  const safelyGrabMetadata = (key: DirectiveMetadataKey) => {\n    try {\n      return dir.constructor.Éµcmp ? dir.constructor.Éµcmp[key] : dir.constructor.Éµdir[key];\n    } catch {\n      console.warn(`Could not find metadata for key: ${key} in directive:`, dir);\n      return undefined;\n    }\n  };\n\n  return {\n    inputs: safelyGrabMetadata(DirectiveMetadataKey.INPUTS),\n    outputs: safelyGrabMetadata(DirectiveMetadataKey.OUTPUTS),\n    encapsulation: safelyGrabMetadata(DirectiveMetadataKey.ENCAPSULATION),\n    onPush: safelyGrabMetadata(DirectiveMetadataKey.ON_PUSH),\n  };\n};\n\nconst getRootLViewsHelper = (element: Element, rootLViews = new Set<any>()): Set<any> => {\n  if (!(element instanceof HTMLElement)) {\n    return rootLViews;\n  }\n  const lView = getLViewFromDirectiveOrElementInstance(element);\n  if (lView) {\n    rootLViews.add(lView);\n    return rootLViews;\n  }\n  // tslint:disable-next-line: prefer-for-of\n  for (let i = 0; i < element.children.length; i++) {\n    getRootLViewsHelper(element.children[i], rootLViews);\n  }\n  return rootLViews;\n};\n\n// To get all roots, we first get all elements with ng-version attribute.\n// This includes all app roots plus Angular Elements.\n// We may also have overlays which are on the same level as the top-level\n// app. We get these by traversing the DOM starting from the root DOM\n// element and stopping once we hit a node which is not HTMLElement or\n// has lView data associated with it.\nconst getRootLViews = (element: Element): Set<any> => {\n  const roots = element.querySelectorAll('[ng-version]');\n  return getRootLViewsHelper(element, new Set(Array.from(roots).map(getLViewFromDirectiveOrElementInstance)));\n};\n\nexport const buildDirectiveForest = (): ComponentTreeNode[] => {\n  const roots = getRootLViews(document.documentElement);\n  return Array.prototype.concat.apply([], [...roots].map(buildDirectiveTree));\n};\n\n// Based on an ElementID we return a specific component node.\n// If we can't find any, we return null.\nexport const queryDirectiveForest = (\n  position: ElementPosition,\n  forest: ComponentTreeNode[]\n): ComponentTreeNode | null => {\n  if (!position.length) {\n    return null;\n  }\n  let node: null | ComponentTreeNode = null;\n  for (const i of position) {\n    node = forest[i];\n    if (!node) {\n      return null;\n    }\n    forest = node.children;\n  }\n  return node;\n};\n\nexport const findNodeInForest = (position: ElementPosition, forest: ComponentTreeNode[]): HTMLElement | null => {\n  const foundComponent: ComponentTreeNode | null = queryDirectiveForest(position, forest);\n  return foundComponent ? (foundComponent.nativeElement as HTMLElement) : null;\n};\n\nexport const findNodeFromSerializedPosition = (serializedPosition: string): ComponentTreeNode | null => {\n  const position: number[] = serializedPosition.split(',').map((index) => parseInt(index, 10));\n  return queryDirectiveForest(position, buildDirectiveForest());\n};\n\nexport const updateState = (updatedStateData: UpdatedStateData): void => {\n  const ngd = ngDebug();\n  const node = queryDirectiveForest(updatedStateData.directiveId.element, buildDirectiveForest());\n  if (!node) {\n    console.warn('Could not update the state of component', updatedStateData, 'because the component was not found');\n    return;\n  }\n  if (updatedStateData.directiveId.directive !== undefined) {\n    const directive = node.directives[updatedStateData.directiveId.directive].instance;\n    mutateComponentOrDirective(updatedStateData, directive);\n    ngd.applyChanges(ngd.getOwningComponent(directive));\n    return;\n  }\n  if (node.component) {\n    const comp = node.component.instance;\n    mutateComponentOrDirective(updatedStateData, comp);\n    ngd.applyChanges(comp);\n    return;\n  }\n};\n\nconst mutateComponentOrDirective = (updatedStateData: UpdatedStateData, compOrDirective: any) => {\n  const valueKey = updatedStateData.keyPath.pop();\n  if (valueKey === undefined) {\n    return;\n  }\n\n  let parentObjectOfValueToUpdate = compOrDirective;\n  updatedStateData.keyPath.forEach((key) => {\n    parentObjectOfValueToUpdate = parentObjectOfValueToUpdate[key];\n  });\n\n  parentObjectOfValueToUpdate[valueKey] = updatedStateData.newValue;\n};\n","import { Route } from 'protocol';\nimport { Router, Routes, Route as AngularRoute } from '@angular/router';\n\nexport function parseRoutes(router: Router): Route {\n  const rootName = (router as any).rootComponentType?.name || 'no-name';\n  const rootChildren = router.config;\n\n  const root: Route = {\n    handler: rootName,\n    name: rootName,\n    path: '/',\n    children: rootChildren ? assignChildrenToParent(null, rootChildren) : [],\n    isAux: false,\n    specificity: null,\n    data: null,\n    hash: null,\n  };\n\n  return root;\n}\n\nfunction assignChildrenToParent(parentPath: string | null, children: Routes): Route[] {\n  return children.map((child: AngularRoute) => {\n    const childName = childRouteName(child);\n    const childDescendents: [any] = (child as any)._loadedConfig?.routes || child.children;\n\n    // only found in aux routes, otherwise property will be undefined\n    const isAuxRoute = !!child.outlet;\n\n    const pathFragment = child.outlet ? `(${child.outlet}:${child.path})` : child.path;\n\n    const routeConfig: Route = {\n      handler: childName,\n      data: [],\n      hash: null,\n      specificity: null,\n      name: childName,\n      path: `${parentPath ? parentPath : ''}/${pathFragment}`.split('//').join('/'),\n      isAux: isAuxRoute,\n      children: [],\n    };\n\n    if (childDescendents) {\n      routeConfig.children = assignChildrenToParent(routeConfig.path, childDescendents);\n    }\n\n    if (child.data) {\n      for (const el in child.data) {\n        if (child.data.hasOwnProperty(el)) {\n          routeConfig.data.push({\n            key: el,\n            value: child.data[el],\n          });\n        }\n      }\n    }\n\n    return routeConfig;\n  });\n}\n\nfunction childRouteName(child: AngularRoute): string {\n  if (child.component) {\n    return child.component.name;\n  } else if (child.loadChildren) {\n    return `${child.path} [Lazy]`;\n  } else if (child.redirectTo) {\n    return `${child.path} -> redirecting to -> \"${child.redirectTo}\"`;\n  } else {\n    return 'no-name-route';\n  }\n}\n","import { ComponentTreeNode } from './../component-tree';\nimport { ElementPosition, DevToolsNode } from 'protocol';\nimport { buildDirectiveForest, DirectiveInstanceType, ComponentInstanceType } from '../component-tree';\nimport { Type } from '@angular/core';\n\ninterface TreeNode {\n  parent: TreeNode;\n  directive?: Type<any>;\n  children: TreeNode[];\n}\n\ntype NodeArray = {\n  directive: any;\n  isComponent: boolean;\n}[];\n\nexport class IdentityTracker {\n  private _directiveIdCounter = 0;\n  private _currentDirectivePosition = new Map<any, ElementPosition>();\n  private _currentDirectiveId = new Map<any, number>();\n  private _isComponent = new Map<any, boolean>();\n\n  getDirectivePosition(dir: any): ElementPosition | undefined {\n    return this._currentDirectivePosition.get(dir);\n  }\n\n  getDirectiveId(dir: any): number | undefined {\n    return this._currentDirectiveId.get(dir);\n  }\n\n  hasDirective(dir: any): boolean {\n    return this._currentDirectiveId.has(dir);\n  }\n\n  index(): {\n    newNodes: NodeArray;\n    removedNodes: NodeArray;\n    indexedForest: IndexedNode[];\n    directiveForest: ComponentTreeNode[];\n  } {\n    const directiveForest = buildDirectiveForest();\n    const indexedForest = indexForest(directiveForest);\n    const newNodes: NodeArray = [];\n    const removedNodes: NodeArray = [];\n    const allNodes = new Set<any>();\n    indexedForest.forEach((root) => this._index(root, null, newNodes, allNodes));\n    this._currentDirectiveId.forEach((_: number, dir: any) => {\n      if (!allNodes.has(dir)) {\n        removedNodes.push({ directive: dir, isComponent: !!this._isComponent.get(dir) });\n        // We can't clean these up because during profiling\n        // they might be requested for removed components\n        // this._currentDirectiveId.delete(dir);\n        // this._currentDirectivePosition.delete(dir);\n      }\n    });\n    return { newNodes, removedNodes, indexedForest, directiveForest };\n  }\n\n  private _index(\n    node: IndexedNode,\n    parent: TreeNode | null,\n    newNodes: { directive: any; isComponent: boolean }[],\n    allNodes: Set<any>\n  ): void {\n    if (node.component) {\n      allNodes.add(node.component.instance);\n      this._isComponent.set(node.component.instance, true);\n      this._indexNode(node.component.instance, node.position, newNodes);\n    }\n    (node.directives || []).forEach((dir) => {\n      allNodes.add(dir.instance);\n      this._isComponent.set(dir.instance, false);\n      this._indexNode(dir.instance, node.position, newNodes);\n    });\n    node.children.forEach((child) => this._index(child, parent, newNodes, allNodes));\n  }\n\n  private _indexNode(directive: any, position: ElementPosition, newNodes: NodeArray): void {\n    this._currentDirectivePosition.set(directive, position);\n    if (!this._currentDirectiveId.has(directive)) {\n      newNodes.push({ directive, isComponent: !!this._isComponent.get(directive) });\n      this._currentDirectiveId.set(directive, this._directiveIdCounter++);\n    }\n  }\n\n  destroy(): void {\n    this._currentDirectivePosition = new Map<any, ElementPosition>();\n    this._currentDirectiveId = new Map<any, number>();\n  }\n}\n\nexport interface IndexedNode extends DevToolsNode<DirectiveInstanceType, ComponentInstanceType> {\n  position: ElementPosition;\n  children: IndexedNode[];\n}\n\nconst indexTree = <T extends DevToolsNode<DirectiveInstanceType, ComponentInstanceType>>(\n  node: T,\n  idx: number,\n  parentPosition: number[] = []\n): IndexedNode => {\n  const position = parentPosition.concat([idx]);\n  return {\n    position,\n    element: node.element,\n    component: node.component,\n    directives: node.directives.map((d) => ({ position, ...d })),\n    children: node.children.map((n, i) => indexTree(n, i, position)),\n    nativeElement: node.nativeElement,\n  } as IndexedNode;\n};\n\nexport const indexForest = <T extends DevToolsNode<DirectiveInstanceType, ComponentInstanceType>>(\n  forest: T[]\n): IndexedNode[] => forest.map((n, i) => indexTree(n, i));\n","import { ComponentTreeNode } from './../component-tree';\nimport { ElementPosition, LifecycleProfile } from 'protocol';\nimport { componentMetadata, runOutsideAngular } from '../utils';\nimport { IdentityTracker, IndexedNode } from './identity-tracker';\nimport {\n  getLViewFromDirectiveOrElementInstance,\n  getDirectiveHostElement,\n  METADATA_PROPERTY_NAME,\n} from '../lview-transform';\nimport { Subject } from 'rxjs';\n\nexport type CreationHook = (\n  componentOrDirective: any,\n  node: Node,\n  id: number,\n  isComponent: boolean,\n  position: ElementPosition\n) => void;\n\nexport type LifecycleStartHook = (\n  componentOrDirective: any,\n  hook: keyof LifecycleProfile | 'unknown',\n  node: Node,\n  id: number,\n  isComponent: boolean\n) => void;\n\nexport type LifecycleEndHook = (\n  componentOrDirective: any,\n  hook: keyof LifecycleProfile | 'unknown',\n  node: Node,\n  id: number,\n  isComponent: boolean\n) => void;\n\nexport type ChangeDetectionStartHook = (component: any, node: Node, id: number, position: ElementPosition) => void;\n\nexport type ChangeDetectionEndHook = (component: any, node: Node, id: number, position: ElementPosition) => void;\n\nexport type DestroyHook = (\n  componentOrDirective: any,\n  node: Node,\n  id: number,\n  isComponent: boolean,\n  position: ElementPosition\n) => void;\n\nexport interface Hooks {\n  onCreate: CreationHook;\n  onDestroy: DestroyHook;\n  onChangeDetectionStart: ChangeDetectionStartHook;\n  onChangeDetectionEnd: ChangeDetectionEndHook;\n  onLifecycleHookStart: LifecycleStartHook;\n  onLifecycleHookEnd: LifecycleEndHook;\n}\n\nconst hookNames = [\n  'OnInit',\n  'OnDestroy',\n  'OnChanges',\n  'DoCheck',\n  'AfterContentInit',\n  'AfterContentChecked',\n  'AfterViewInit',\n  'AfterViewChecked',\n];\n\nconst hookMethodNames = new Set(hookNames.map((hook) => `ng${hook}`));\n\nconst hookTViewProperties = [\n  'preOrderHooks',\n  'preOrderCheckHooks',\n  'contentHooks',\n  'contentCheckHooks',\n  'viewHooks',\n  'viewCheckHooks',\n  'destroyHooks',\n];\n\nconst getLifeCycleName = (obj: {}, fn: any): keyof LifecycleProfile | 'unknown' => {\n  const proto = Object.getPrototypeOf(obj);\n  const keys = Object.getOwnPropertyNames(proto);\n  for (const propName of keys) {\n    // We don't want to touch random get accessors.\n    if (!hookMethodNames.has(propName)) {\n      continue;\n    }\n    if (proto[propName] === fn) {\n      return propName as keyof LifecycleProfile;\n    }\n  }\n  const fnName = fn.name;\n  if (typeof fnName !== 'string') {\n    return 'unknown';\n  }\n  for (const hookName of hookNames) {\n    if (fnName.indexOf(hookName) >= 0) {\n      return `ng${hookName}` as keyof LifecycleProfile;\n    }\n  }\n  return 'unknown';\n};\n\n/**\n * This is a temporal \"polyfill\" until we receive\n * more comprehensive framework debugging APIs.\n */\nexport class DirectiveForestHooks {\n  private _patched = new Map<any, () => void>();\n  private _undoLifecyclePatch: (() => void)[] = [];\n  private _lastChangeDetection = new Map<any, number>();\n  private _tracker = new IdentityTracker();\n  private _forest: ComponentTreeNode[] = [];\n  private _indexedForest: IndexedNode[] = [];\n  private _inChangeDetection = false;\n  private _changeDetection$ = new Subject<void>();\n\n  private _hooks: Partial<Hooks>[] = [];\n\n  constructor(config: Partial<Hooks>) {\n    this._hooks.push(config);\n  }\n\n  get changeDetection$(): Subject<void> {\n    return this._changeDetection$;\n  }\n\n  getDirectivePosition(dir: any): ElementPosition | undefined {\n    const result = this._tracker.getDirectivePosition(dir);\n    if (result === undefined) {\n      console.warn('Unable to find position of', dir);\n    }\n    return result;\n  }\n\n  getDirectiveId(dir: any): number | undefined {\n    const result = this._tracker.getDirectiveId(dir);\n    if (result === undefined) {\n      console.warn('Unable to find ID of', result);\n    }\n    return result;\n  }\n\n  getIndexedDirectiveForest(): IndexedNode[] {\n    return this._indexedForest;\n  }\n\n  getDirectiveForest(): ComponentTreeNode[] {\n    return this._forest;\n  }\n\n  initialize(): void {\n    this.indexForest();\n  }\n\n  destroy(): void {\n    this._lastChangeDetection = new Map<any, number>();\n    this._tracker.destroy();\n\n    for (const [cmp, template] of this._patched) {\n      const meta = componentMetadata(cmp);\n      meta.template = template;\n      meta.tView.template = template;\n    }\n\n    this._patched = new Map<any, () => void>();\n    this._undoLifecyclePatch.forEach((p) => p());\n    this._undoLifecyclePatch = [];\n  }\n\n  indexForest(): void {\n    const { newNodes, removedNodes, indexedForest, directiveForest } = this._tracker.index();\n    this._indexedForest = indexedForest;\n    this._forest = directiveForest;\n    newNodes.forEach((node) => {\n      this._observeLifecycle(node.directive, node.isComponent);\n      this._observeComponent(node.directive);\n      this._fireCreationCallback(node.directive, node.isComponent);\n    });\n    removedNodes.forEach((node) => {\n      this._patched.delete(node.directive);\n      this._fireDestroyCallback(node.directive, node.isComponent);\n    });\n  }\n\n  subscribe(config: Partial<Hooks>): void {\n    this._hooks.push(config);\n  }\n\n  unsubscribe(config: Partial<Hooks>): void {\n    this._hooks.splice(this._hooks.indexOf(config), 1);\n  }\n\n  private _fireCreationCallback(component: any, isComponent: boolean): void {\n    const position = this._tracker.getDirectivePosition(component);\n    const id = this._tracker.getDirectiveId(component);\n    this._onCreate(component, getDirectiveHostElement(component), id, isComponent, position);\n  }\n\n  private _fireDestroyCallback(component: any, isComponent: boolean): void {\n    const position = this._tracker.getDirectivePosition(component);\n    const id = this._tracker.getDirectiveId(component);\n    this._onDestroy(component, getDirectiveHostElement(component), id, isComponent, position);\n  }\n\n  private _observeComponent(cmp: any): void {\n    const declarations = componentMetadata(cmp);\n    if (!declarations) {\n      return;\n    }\n    const original = declarations.template;\n    const self = this;\n    if (original.patched) {\n      return;\n    }\n    declarations.tView.template = function (_: any, component: any): void {\n      if (!self._inChangeDetection) {\n        self._inChangeDetection = true;\n        runOutsideAngular(() => {\n          Promise.resolve().then(() => {\n            self._changeDetection$.next();\n            self._inChangeDetection = false;\n          });\n        });\n      }\n      const position = self._tracker.getDirectivePosition(component);\n      const start = performance.now();\n      const id = self._tracker.getDirectiveId(component);\n\n      self._onChangeDetectionStart(component, getDirectiveHostElement(component), id, position);\n      original.apply(this, arguments);\n      if (self._tracker.hasDirective(component) && id !== undefined && position !== undefined) {\n        self._onChangeDetectionEnd(component, getDirectiveHostElement(component), id, position);\n      } else {\n        self._lastChangeDetection.set(component, performance.now() - start);\n      }\n    };\n    declarations.tView.template.patched = true;\n    this._patched.set(cmp, original);\n  }\n\n  private _observeLifecycle(directive: any, isComponent: boolean): void {\n    const ctx = getLViewFromDirectiveOrElementInstance(directive);\n    if (!ctx) {\n      return;\n    }\n    const tview = ctx[1];\n    hookTViewProperties.forEach((hook) => {\n      const current = tview[hook];\n      if (!Array.isArray(current)) {\n        return;\n      }\n      current.forEach((el: any, idx: number) => {\n        if (el.patched) {\n          return;\n        }\n        if (typeof el === 'function') {\n          const self = this;\n          current[idx] = function (): any {\n            // We currently don't want to notify the consumer\n            // for execution of lifecycle hooks of services and pipes.\n            // These two abstractions don't have `__ngContext__`, and\n            // currently we won't be able to extract the required\n            // metadata by the UI.\n            if (!this[METADATA_PROPERTY_NAME]) {\n              return;\n            }\n            const id = self._tracker.getDirectiveId(this);\n            const lifecycleHookName = getLifeCycleName(this, el);\n            const element = getDirectiveHostElement(this);\n            self._onLifecycleHookStart(this, lifecycleHookName, element, id, isComponent);\n            const result = el.apply(this, arguments);\n            self._onLifecycleHookEnd(this, lifecycleHookName, element, id, isComponent);\n            return result;\n          };\n          current[idx].patched = true;\n          this._undoLifecyclePatch.push(() => {\n            current[idx] = el;\n          });\n        }\n      });\n    });\n  }\n\n  private _onCreate(\n    _: any,\n    __: Node,\n    id: number | undefined,\n    ___: boolean,\n    position: ElementPosition | undefined\n  ): void {\n    if (id === undefined || position === undefined) {\n      return;\n    }\n    this._invokeCallback('onCreate', arguments);\n  }\n\n  private _onDestroy(\n    _: any,\n    __: Node,\n    id: number | undefined,\n    ___: boolean,\n    position: ElementPosition | undefined\n  ): void {\n    if (id === undefined || position === undefined) {\n      return;\n    }\n    this._invokeCallback('onDestroy', arguments);\n  }\n\n  private _onChangeDetectionStart(\n    _: any,\n    __: Node,\n    id: number | undefined,\n    position: ElementPosition | undefined\n  ): void {\n    if (id === undefined || position === undefined) {\n      return;\n    }\n    this._invokeCallback('onChangeDetectionStart', arguments);\n  }\n\n  private _onChangeDetectionEnd(_: any, __: Node, id: number | undefined, position: ElementPosition | undefined): void {\n    if (id === undefined || position === undefined) {\n      return;\n    }\n    this._invokeCallback('onChangeDetectionEnd', arguments);\n  }\n\n  private _onLifecycleHookStart(\n    _: any,\n    __: keyof LifecycleProfile | 'unknown',\n    ___: Node,\n    id: number | undefined,\n    ____: boolean\n  ): void {\n    if (id === undefined) {\n      return;\n    }\n    this._invokeCallback('onLifecycleHookStart', arguments);\n  }\n\n  private _onLifecycleHookEnd(\n    _: any,\n    __: keyof LifecycleProfile | 'unknown',\n    ___: Node,\n    id: number | undefined,\n    ____: boolean\n  ): void {\n    if (id === undefined) {\n      return;\n    }\n    this._invokeCallback('onLifecycleHookEnd', arguments);\n  }\n\n  private _invokeCallback(name: keyof Hooks, args: IArguments): void {\n    this._hooks.forEach((config) => {\n      const cb = config[name];\n      if (cb) {\n        cb.apply(null, args);\n      }\n    });\n  }\n}\n","import { getDirectiveName } from '../highlighter';\nimport { DirectiveForestHooks } from './hooks';\nimport { LifecycleProfile } from 'protocol';\n\nconst markName = (s: string, method: Method) => `ð°ï¸ ${s}#${method}`;\n\nconst supportsPerformance = globalThis.performance && typeof globalThis.performance.getEntriesByName === 'function';\n\ntype Method = keyof LifecycleProfile | 'changeDetection';\n\nconst recordMark = (s: string, method: Method) => {\n  if (supportsPerformance) {\n    performance.mark(`${markName(s, method)}_start`);\n  }\n};\n\nconst endMark = (nodeName: string, method: Method) => {\n  if (supportsPerformance) {\n    const name = markName(nodeName, method);\n    const start = `${name}_start`;\n    const end = `${name}_end`;\n    if (performance.getEntriesByName(start).length > 0) {\n      performance.mark(end);\n      performance.measure(name, start, end);\n    }\n    performance.clearMarks(start);\n    performance.clearMarks(end);\n    performance.clearMeasures(name);\n  }\n};\n\nlet timingAPIFlag = false;\n\nexport const enableTimingAPI = () => (timingAPIFlag = true);\nexport const disableTimingAPI = () => (timingAPIFlag = false);\n\nconst timingAPIEnabled = () => timingAPIFlag;\n\nexport let directiveForestHooks: DirectiveForestHooks;\nexport const initializeOrGetDirectiveForestHooks = () => {\n  if (directiveForestHooks) {\n    return directiveForestHooks;\n  }\n  directiveForestHooks = new DirectiveForestHooks({\n    onChangeDetectionStart(component: any): void {\n      if (!timingAPIEnabled()) {\n        return;\n      }\n      recordMark(getDirectiveName(component), 'changeDetection');\n    },\n    onChangeDetectionEnd(component: any): void {\n      if (!timingAPIEnabled()) {\n        return;\n      }\n      endMark(getDirectiveName(component), 'changeDetection');\n    },\n    onLifecycleHookStart(component: any, lifecyle: keyof LifecycleProfile): void {\n      if (!timingAPIEnabled()) {\n        return;\n      }\n      recordMark(getDirectiveName(component), lifecyle);\n    },\n    onLifecycleHookEnd(component: any, lifecyle: keyof LifecycleProfile): void {\n      if (!timingAPIEnabled()) {\n        return;\n      }\n      endMark(getDirectiveName(component), lifecyle);\n    },\n  });\n  directiveForestHooks.initialize();\n  return directiveForestHooks;\n};\n","import { DirectiveForestHooks, Hooks } from './hooks';\nimport { ElementPosition, ProfilerFrame, ElementProfile, DirectiveProfile, LifecycleProfile } from 'protocol';\nimport { runOutsideAngular, isCustomElement } from '../utils';\nimport { getDirectiveName } from '../highlighter';\nimport { ComponentTreeNode } from '../component-tree';\nimport { initializeOrGetDirectiveForestHooks } from '.';\n\nlet inProgress = false;\nlet inChangeDetection = false;\nlet eventMap: Map<any, DirectiveProfile>;\nlet frameDuration = 0;\nlet hooks: Partial<Hooks> = {};\n\nexport const start = (onFrame: (frame: ProfilerFrame) => void): void => {\n  if (inProgress) {\n    throw new Error('Recording already in progress');\n  }\n  eventMap = new Map<any, DirectiveProfile>();\n  inProgress = true;\n  hooks = getHooks(onFrame);\n  initializeOrGetDirectiveForestHooks().subscribe(hooks);\n};\n\nexport const stop = (): ProfilerFrame => {\n  const directiveForestHooks = initializeOrGetDirectiveForestHooks();\n  const result = flushBuffer(directiveForestHooks);\n  initializeOrGetDirectiveForestHooks().unsubscribe(hooks);\n  hooks = {};\n  inProgress = false;\n  return result;\n};\n\nconst startEvent = (map: { [key: string]: number }, directive: any, label: string) => {\n  const name = getDirectiveName(directive);\n  const key = `${name}#${label}`;\n  map[key] = performance.now();\n};\n\nconst getEventStart = (map: { [key: string]: number }, directive: any, label: string) => {\n  const name = getDirectiveName(directive);\n  const key = `${name}#${label}`;\n  return map[key];\n};\n\nconst getHooks = (onFrame: (frame: ProfilerFrame) => void) => {\n  const timeStartMap: { [key: string]: number } = {};\n  return {\n    // We flush here because it's possible the current node to overwrite\n    // an existing removed node.\n    onCreate(directive: any, node: Node, _: number, isComponent: boolean, position: ElementPosition): void {\n      eventMap.set(directive, {\n        isElement: isCustomElement(node),\n        name: getDirectiveName(directive),\n        isComponent,\n        lifecycle: {},\n      });\n    },\n    onChangeDetectionStart(component: any, node: Node): void {\n      startEvent(timeStartMap, component, 'changeDetection');\n      if (!inChangeDetection) {\n        inChangeDetection = true;\n        const source = getChangeDetectionSource();\n        runOutsideAngular(() => {\n          Promise.resolve().then(() => {\n            inChangeDetection = false;\n            onFrame(flushBuffer(initializeOrGetDirectiveForestHooks(), source));\n          });\n        });\n      }\n      if (!eventMap.has(component)) {\n        eventMap.set(component, {\n          isElement: isCustomElement(node),\n          name: getDirectiveName(component),\n          isComponent: true,\n          changeDetection: 0,\n          lifecycle: {},\n        });\n      }\n    },\n    onChangeDetectionEnd(component: any): void {\n      const profile = eventMap.get(component);\n      if (profile) {\n        let current = profile.changeDetection;\n        if (current === undefined) {\n          current = 0;\n        }\n        const startTimestamp = getEventStart(timeStartMap, component, 'changeDetection');\n        if (startTimestamp === undefined) {\n          return;\n        }\n        const duration = performance.now() - startTimestamp;\n        profile.changeDetection = current + duration;\n        frameDuration += duration;\n      } else {\n        console.warn('Could not find profile for', component);\n      }\n    },\n    onDestroy(directive: any, node: Node, _: number, isComponent: boolean, __: ElementPosition): void {\n      // Make sure we reflect such directives in the report.\n      if (!eventMap.has(directive)) {\n        eventMap.set(directive, {\n          isElement: isComponent && isCustomElement(node),\n          name: getDirectiveName(directive),\n          isComponent,\n          lifecycle: {},\n        });\n      }\n    },\n    onLifecycleHookStart(\n      directive: any,\n      hookName: keyof LifecycleProfile,\n      node: Node,\n      __: number,\n      isComponent: boolean\n    ): void {\n      startEvent(timeStartMap, directive, hookName);\n      if (!eventMap.has(directive)) {\n        eventMap.set(directive, {\n          isElement: isCustomElement(node),\n          name: getDirectiveName(directive),\n          isComponent,\n          lifecycle: {},\n        });\n      }\n    },\n    onLifecycleHookEnd(directive: any, hookName: keyof LifecycleProfile, _: Node, __: number, ___: boolean): void {\n      const dir = eventMap.get(directive);\n      const startTimestamp = getEventStart(timeStartMap, directive, hookName);\n      if (startTimestamp === undefined) {\n        return;\n      }\n      if (!dir) {\n        console.warn('Could not find directive in onLifecycleHook callback', directive, hookName);\n        return;\n      }\n      const duration = performance.now() - startTimestamp;\n      dir.lifecycle[hookName] = (dir.lifecycle[hookName] || 0) + duration;\n      frameDuration += duration;\n    },\n  };\n};\n\nconst insertOrMerge = (lastFrame: ElementProfile, profile: DirectiveProfile) => {\n  let exists = false;\n  lastFrame.directives.forEach((d) => {\n    if (d.name === profile.name) {\n      exists = true;\n      let current = d.changeDetection;\n      if (current === undefined) {\n        current = 0;\n      }\n      d.changeDetection = current + (profile.changeDetection ?? 0);\n      for (const key of Object.keys(profile.lifecycle)) {\n        if (!d.lifecycle[key]) {\n          d.lifecycle[key] = 0;\n        }\n        d.lifecycle[key] += profile.lifecycle[key];\n      }\n    }\n  });\n  if (!exists) {\n    lastFrame.directives.push(profile);\n  }\n};\n\nconst insertElementProfile = (frames: ElementProfile[], position: ElementPosition, profile?: DirectiveProfile) => {\n  if (!profile) {\n    return;\n  }\n  const original = frames;\n  for (let i = 0; i < position.length - 1; i++) {\n    const pos = position[i];\n    if (!frames[pos]) {\n      // TODO(mgechev): consider how to ensure we don't hit this case\n      console.warn('Unable to find parent node for', profile, original);\n      return;\n    }\n    frames = frames[pos].children;\n  }\n  const lastIdx = position[position.length - 1];\n  let lastFrame: ElementProfile = {\n    children: [],\n    directives: [],\n  };\n  if (frames[lastIdx]) {\n    lastFrame = frames[lastIdx];\n  } else {\n    frames[lastIdx] = lastFrame;\n  }\n  insertOrMerge(lastFrame, profile);\n};\n\nconst prepareInitialFrame = (source: string, duration: number) => {\n  const frame: ProfilerFrame = {\n    source,\n    duration,\n    directives: [],\n  };\n  const directiveForestHooks = initializeOrGetDirectiveForestHooks();\n  const directiveForest = directiveForestHooks.getIndexedDirectiveForest();\n  const traverse = (node: ComponentTreeNode, children = frame.directives) => {\n    let position: ElementPosition | undefined;\n    if (node.component) {\n      position = directiveForestHooks.getDirectivePosition(node.component.instance);\n    } else {\n      position = directiveForestHooks.getDirectivePosition(node.directives[0].instance);\n    }\n    if (position === undefined) {\n      return;\n    }\n    const directives = node.directives.map((d) => {\n      return {\n        isComponent: false,\n        isElement: false,\n        name: getDirectiveName(d.instance),\n        lifecycle: {},\n      };\n    });\n    if (node.component) {\n      directives.push({\n        isElement: node.component.isElement,\n        isComponent: true,\n        lifecycle: {},\n        name: getDirectiveName(node.component.instance),\n      });\n    }\n    const result = {\n      children: [],\n      directives,\n    };\n    children[position[position.length - 1]] = result;\n    node.children.forEach((n) => traverse(n, result.children));\n  };\n  directiveForest.forEach((n) => traverse(n));\n  return frame;\n};\n\nconst flushBuffer = (directiveForestHooks: DirectiveForestHooks, source: string = '') => {\n  const items = Array.from(eventMap.keys());\n  const positions: ElementPosition[] = [];\n  const positionDirective = new Map<ElementPosition, any>();\n  items.forEach((dir) => {\n    const position = directiveForestHooks.getDirectivePosition(dir);\n    if (position === undefined) {\n      return;\n    }\n    positions.push(position);\n    positionDirective.set(position, dir);\n  });\n  positions.sort(lexicographicOrder);\n\n  const result = prepareInitialFrame(source, frameDuration);\n  frameDuration = 0;\n\n  positions.forEach((position) => {\n    const dir = positionDirective.get(position);\n    insertElementProfile(result.directives, position, eventMap.get(dir));\n  });\n  eventMap = new Map<any, DirectiveProfile>();\n  return result;\n};\n\nconst getChangeDetectionSource = () => {\n  const zone = (window as any).Zone;\n  if (!zone || !zone.currentTask) {\n    return '';\n  }\n  return zone.currentTask.source;\n};\n\nconst lexicographicOrder = (a: ElementPosition, b: ElementPosition) => {\n  if (a.length < b.length) {\n    return -1;\n  }\n  if (a.length > b.length) {\n    return 1;\n  }\n  for (let i = 0; i < a.length; i++) {\n    if (a[i] < b[i]) {\n      return -1;\n    }\n    if (a[i] > b[i]) {\n      return 1;\n    }\n  }\n  return 0;\n};\n","import { unHighlight, highlight, findComponentAndHost } from '../highlighter';\nimport { Type } from '@angular/core';\nimport { ComponentTreeNode, findNodeInForest } from '../component-tree';\nimport { ElementPosition } from 'protocol';\nimport { initializeOrGetDirectiveForestHooks } from '../hooks';\n\nexport interface ComponentInspectorOptions {\n  onComponentEnter: (id: number) => void;\n  onComponentSelect: (id: number) => void;\n  onComponentLeave: () => void;\n}\n\nexport class ComponentInspector {\n  private _selectedComponent: { component: Type<unknown>; host: HTMLElement | null };\n  private readonly _onComponentEnter;\n  private readonly _onComponentSelect;\n  private readonly _onComponentLeave;\n\n  constructor(\n    componentOptions: ComponentInspectorOptions = {\n      onComponentEnter: () => {},\n      onComponentLeave: () => {},\n      onComponentSelect: () => {},\n    }\n  ) {\n    this.bindMethods();\n    this._onComponentEnter = componentOptions.onComponentEnter;\n    this._onComponentSelect = componentOptions.onComponentSelect;\n    this._onComponentLeave = componentOptions.onComponentLeave;\n  }\n\n  startInspecting(): void {\n    window.addEventListener('mouseover', this.elementMouseOver, true);\n    window.addEventListener('click', this.elementClick, true);\n    window.addEventListener('mouseout', this.cancelEvent, true);\n  }\n\n  stopInspecting(): void {\n    window.removeEventListener('mouseover', this.elementMouseOver, true);\n    window.removeEventListener('click', this.elementClick, true);\n    window.removeEventListener('mouseout', this.cancelEvent, true);\n  }\n\n  elementClick(e: MouseEvent): void {\n    e.stopImmediatePropagation();\n    e.preventDefault();\n\n    if (this._selectedComponent.component && this._selectedComponent.host) {\n      this._onComponentSelect(initializeOrGetDirectiveForestHooks().getDirectiveId(this._selectedComponent.component));\n    }\n  }\n\n  elementMouseOver(e: MouseEvent): void {\n    this.cancelEvent(e);\n\n    const el = e.target as HTMLElement;\n    if (el) {\n      this._selectedComponent = findComponentAndHost(el);\n    }\n\n    unHighlight();\n    if (this._selectedComponent.component && this._selectedComponent.host) {\n      highlight(this._selectedComponent.host);\n      this._onComponentEnter(initializeOrGetDirectiveForestHooks().getDirectiveId(this._selectedComponent.component));\n    }\n  }\n\n  cancelEvent(e: MouseEvent): void {\n    e.stopImmediatePropagation();\n    e.preventDefault();\n    this._onComponentLeave();\n  }\n\n  bindMethods(): void {\n    this.startInspecting = this.startInspecting.bind(this);\n    this.stopInspecting = this.stopInspecting.bind(this);\n    this.elementMouseOver = this.elementMouseOver.bind(this);\n    this.elementClick = this.elementClick.bind(this);\n    this.cancelEvent = this.cancelEvent.bind(this);\n  }\n\n  highlightByPosition(position: ElementPosition): void {\n    const forest: ComponentTreeNode[] = initializeOrGetDirectiveForestHooks().getDirectiveForest();\n    const elementToHighlight: HTMLElement | null = findNodeInForest(position, forest);\n    if (elementToHighlight) {\n      highlight(elementToHighlight);\n    }\n  }\n}\n","import { arrayEquals } from 'shared-utils';\nimport { ElementPosition } from 'protocol';\nimport { ComponentTreeNode } from './component-tree';\n\ninterface ConsoleReferenceNode {\n  node: ComponentTreeNode | null;\n  position: ElementPosition;\n}\n\nconst CONSOLE_REFERENCE_PREFIX = '$ng';\nconst CAPACITY = 5;\n\nconst nodesForConsoleReference: ConsoleReferenceNode[] = [];\n\nexport const setConsoleReference = (referenceNode: ConsoleReferenceNode) => {\n  if (referenceNode.node === null) {\n    return;\n  }\n  _setConsoleReference(referenceNode);\n};\n\nconst _setConsoleReference = (referenceNode: ConsoleReferenceNode) => {\n  prepareCurrentReferencesForInsertion(referenceNode);\n  nodesForConsoleReference.unshift(referenceNode);\n  assignConsoleReferencesFrom(nodesForConsoleReference);\n};\n\nconst prepareCurrentReferencesForInsertion = (referenceNode: ConsoleReferenceNode) => {\n  const foundIndex = nodesForConsoleReference.findIndex((nodeToLookFor) =>\n    arrayEquals(nodeToLookFor.position, referenceNode.position)\n  );\n  if (foundIndex !== -1) {\n    nodesForConsoleReference.splice(foundIndex, 1);\n  } else if (nodesForConsoleReference.length === CAPACITY) {\n    nodesForConsoleReference.pop();\n  }\n};\n\nconst assignConsoleReferencesFrom = (referenceNodes: ConsoleReferenceNode[]) => {\n  referenceNodes.forEach((referenceNode, index) =>\n    setDirectiveKey(referenceNode.node, getConsoleReferenceWithIndexOf(index))\n  );\n};\n\nconst setDirectiveKey = (node: ComponentTreeNode | null, key: string) => {\n  Object.defineProperty(window, key, {\n    get: () => {\n      if (node?.component) {\n        return node.component.instance;\n      }\n      if (node?.nativeElement) {\n        return node.nativeElement;\n      }\n      return node;\n    },\n    configurable: true,\n  });\n};\n\nconst getConsoleReferenceWithIndexOf = (consoleReferenceIndex: number) =>\n  `${CONSOLE_REFERENCE_PREFIX}${consoleReferenceIndex}`;\n","declare const ng: any;\n\nexport const appIsAngularInDevMode = (): boolean => {\n  return appIsAngular() && appHasGlobalNgDebugObject();\n};\n\nexport const appIsAngularIvy = (): boolean => {\n  return !!(window as any).getAllAngularRootElements?.()?.[0]?.__ngContext__;\n};\n\nexport const appIsAngular = (): boolean => {\n  return !!getAngularVersion();\n};\n\nexport const appIsSupportedAngularVersion = (): boolean => {\n  const version = getAngularVersion();\n  if (!version) {\n    return false;\n  }\n  const major = parseInt(version.toString().split('.')[0], 10);\n  return appIsAngular() && (major >= 9 || major === 0);\n};\n\nconst appHasGlobalNgDebugObject = (): boolean => {\n  return typeof ng !== 'undefined';\n};\n\nexport const getAngularVersion = (): string | null => {\n  const el = document.querySelector('[ng-version]');\n  if (!el) {\n    return null;\n  }\n  return el.getAttribute('ng-version');\n};\n","import {\n  DirectivePosition,\n  ElementPosition,\n  Events,\n  MessageBus,\n  DevToolsNode,\n  DirectiveType,\n  ComponentType,\n  ProfilerFrame,\n  ComponentExplorerViewQuery,\n  Route,\n} from 'protocol';\nimport { ComponentTreeNode, getLatestComponentState, queryDirectiveForest, updateState } from './component-tree';\nimport { parseRoutes } from './router-tree';\nimport { start as startProfiling, stop as stopProfiling } from './hooks/capture';\nimport { serializeDirectiveState } from './state-serializer/state-serializer';\nimport { ComponentInspector } from './component-inspector/component-inspector';\nimport { setConsoleReference } from './set-console-reference';\nimport { unHighlight } from './highlighter';\nimport {\n  getAngularVersion,\n  appIsAngularInDevMode,\n  appIsSupportedAngularVersion,\n  appIsAngularIvy,\n} from './angular-check';\nimport { debounceTime } from 'rxjs/operators';\nimport { disableTimingAPI, enableTimingAPI, initializeOrGetDirectiveForestHooks } from './hooks';\nimport { runOutsideAngular } from './utils';\n\nexport const subscribeToClientEvents = (messageBus: MessageBus<Events>): void => {\n  messageBus.on('shutdown', shutdownCallback(messageBus));\n\n  messageBus.on('getLatestComponentExplorerView', getLatestComponentExplorerViewCallback(messageBus));\n\n  messageBus.on('queryNgAvailability', checkForAngularCallback(messageBus));\n\n  messageBus.on('startProfiling', startProfilingCallback(messageBus));\n  messageBus.on('stopProfiling', stopProfilingCallback(messageBus));\n\n  messageBus.on('setSelectedComponent', selectedComponentCallback);\n\n  messageBus.on('getNestedProperties', getNestedPropertiesCallback(messageBus));\n  messageBus.on('getRoutes', getRoutesCallback(messageBus));\n\n  messageBus.on('updateState', updateState);\n\n  messageBus.on('enableTimingAPI', enableTimingAPI);\n  messageBus.on('disableTimingAPI', disableTimingAPI);\n\n  if (appIsAngularInDevMode() && appIsSupportedAngularVersion() && appIsAngularIvy()) {\n    setupInspector(messageBus);\n    // Often websites have `scroll` event listener which triggers\n    // Angular's change detection. We don't want to constantly send\n    // update requests, instead we want to request an update at most\n    // every 250ms\n    runOutsideAngular(() => {\n      initializeOrGetDirectiveForestHooks()\n        .changeDetection$.pipe(debounceTime(250))\n        .subscribe(() => messageBus.emit('componentTreeDirty'));\n    });\n  }\n};\n\n//\n// Callback Definitions\n//\n\nconst shutdownCallback = (messageBus: MessageBus<Events>) => () => {\n  messageBus.destroy();\n};\n\nconst getLatestComponentExplorerViewCallback = (messageBus: MessageBus<Events>) => (\n  query?: ComponentExplorerViewQuery\n) => {\n  // We want to force re-indexing of the component tree.\n  // Pressing the refresh button means the user saw stuck UI.\n\n  initializeOrGetDirectiveForestHooks().indexForest();\n\n  if (!query) {\n    messageBus.emit('latestComponentExplorerView', [\n      {\n        forest: prepareForestForSerialization(initializeOrGetDirectiveForestHooks().getIndexedDirectiveForest()),\n      },\n    ]);\n    return;\n  }\n  messageBus.emit('latestComponentExplorerView', [\n    {\n      forest: prepareForestForSerialization(initializeOrGetDirectiveForestHooks().getIndexedDirectiveForest()),\n      properties: getLatestComponentState(query, initializeOrGetDirectiveForestHooks().getDirectiveForest()),\n    },\n  ]);\n};\n\nconst checkForAngularCallback = (messageBus: MessageBus<Events>) => () => checkForAngular(messageBus);\nconst getRoutesCallback = (messageBus: MessageBus<Events>) => () => getRoutes(messageBus);\n\nconst startProfilingCallback = (messageBus: MessageBus<Events>) => () =>\n  startProfiling((frame: ProfilerFrame) => {\n    messageBus.emit('sendProfilerChunk', [frame]);\n  });\n\nconst stopProfilingCallback = (messageBus: MessageBus<Events>) => () => {\n  messageBus.emit('profilerResults', [stopProfiling()]);\n};\n\nconst selectedComponentCallback = (position: ElementPosition) => {\n  const node = queryDirectiveForest(position, initializeOrGetDirectiveForestHooks().getIndexedDirectiveForest());\n  setConsoleReference({ node, position });\n};\n\nconst getNestedPropertiesCallback = (messageBus: MessageBus<Events>) => (\n  position: DirectivePosition,\n  propPath: string[]\n) => {\n  const emitEmpty = () => messageBus.emit('nestedProperties', [position, { props: {} }, propPath]);\n  const node = queryDirectiveForest(\n    position.element,\n    initializeOrGetDirectiveForestHooks().getIndexedDirectiveForest()\n  );\n  if (!node) {\n    return emitEmpty();\n  }\n  const current = position.directive === undefined ? node.component : node.directives[position.directive];\n  if (!current) {\n    return emitEmpty();\n  }\n  let data = current.instance;\n  for (const prop of propPath) {\n    data = data[prop];\n    if (!data) {\n      console.error('Cannot access the properties', propPath, 'of', node);\n    }\n  }\n  messageBus.emit('nestedProperties', [position, { props: serializeDirectiveState(data) }, propPath]);\n};\n\n//\n// Subscribe Helpers\n//\nconst getRoutes = (messageBus: MessageBus<Events>) => {\n  const node = queryDirectiveForest([0], initializeOrGetDirectiveForestHooks().getIndexedDirectiveForest());\n  let routes: Route[] = [];\n  if (node?.component?.instance.router) {\n    routes = [parseRoutes(node?.component?.instance.router)];\n  }\n  messageBus.emit('updateRouterTree', [routes]);\n};\n\nconst checkForAngular = (messageBus: MessageBus<Events>): void => {\n  const ngVersion = getAngularVersion();\n  const appIsIvy = appIsAngularIvy();\n  if (!ngVersion) {\n    setTimeout(() => checkForAngular(messageBus), 500);\n    return;\n  }\n  if (appIsIvy) {\n    initializeOrGetDirectiveForestHooks();\n  }\n  messageBus.emit('ngAvailability', [\n    { version: ngVersion.toString(), devMode: appIsAngularInDevMode(), ivy: appIsIvy },\n  ]);\n};\n\nconst setupInspector = (messageBus: MessageBus<Events>) => {\n  const inspector = new ComponentInspector({\n    onComponentEnter: (id: number) => {\n      messageBus.emit('highlightComponent', [id]);\n    },\n    onComponentLeave: () => {\n      messageBus.emit('removeComponentHighlight');\n    },\n    onComponentSelect: (id: number) => {\n      messageBus.emit('selectComponent', [id]);\n    },\n  });\n\n  messageBus.on('inspectorStart', inspector.startInspecting);\n  messageBus.on('inspectorEnd', inspector.stopInspecting);\n\n  messageBus.on('createHighlightOverlay', (position: ElementPosition) => {\n    inspector.highlightByPosition(position);\n  });\n  messageBus.on('removeHighlightOverlay', unHighlight);\n};\n\nexport interface SerializableDirectiveInstanceType extends DirectiveType {\n  id: number;\n}\n\nexport interface SerializableComponentInstanceType extends ComponentType {\n  id: number;\n}\n\nexport interface SerializableComponentTreeNode\n  extends DevToolsNode<SerializableDirectiveInstanceType, SerializableComponentInstanceType> {\n  children: SerializableComponentTreeNode[];\n}\n\n// Here we drop properties to prepare the tree for serialization.\n// We don't need the component instance, so we just traverse the tree\n// and leave the component name.\nexport const prepareForestForSerialization = (roots: ComponentTreeNode[]): SerializableComponentTreeNode[] => {\n  return roots.map((node) => {\n    return {\n      element: node.element,\n      component: node.component\n        ? {\n            name: node.component.name,\n            isElement: node.component.isElement,\n            id: initializeOrGetDirectiveForestHooks().getDirectiveId(node.component.instance),\n          }\n        : null,\n      directives: node.directives.map((d) => ({\n        name: d.name,\n        id: initializeOrGetDirectiveForestHooks().getDirectiveId(d.instance),\n      })),\n      children: prepareForestForSerialization(node.children),\n    } as SerializableComponentTreeNode;\n  });\n};\n","import { MessageBus, Events } from 'protocol';\nimport { subscribeToClientEvents } from './client-event-subscribers';\n\nexport const initializeMessageBus = (messageBus: MessageBus<Events>) => {\n  subscribeToClientEvents(messageBus);\n};\n","/*\n * Public API Surface of ng-devtools-backend\n */\n\nexport * from './lib';\nexport { findNodeFromSerializedPosition } from './lib/component-tree';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["ignoreList","startProfiling","stopProfiling"],"mappings":"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"}