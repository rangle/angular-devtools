const indexTree = (node, idx, parentPosition = []) => {
    const position = parentPosition.concat([idx]);
    return {
        position,
        element: node.element,
        component: node.component,
        directives: node.directives.map((d, i) => ({ name: d.name, id: d.id })),
        children: node.children.map((n, i) => indexTree(n, i, position)),
    };
};
export const indexForest = (forest) => forest.map((n, i) => indexTree(n, i));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXgtZm9yZXN0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbmctZGV2dG9vbHMvc3JjL2xpYi9kZXZ0b29scy10YWJzL2RpcmVjdGl2ZS1leHBsb3Jlci9kaXJlY3RpdmUtZm9yZXN0L2luZGV4LWZvcmVzdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFPQSxNQUFNLFNBQVMsR0FBRyxDQUFDLElBQWtCLEVBQUUsR0FBVyxFQUFFLGlCQUFrQyxFQUFFLEVBQWUsRUFBRTtJQUN2RyxNQUFNLFFBQVEsR0FBRyxjQUFjLENBQUMsTUFBTSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztJQUM5QyxPQUFPO1FBQ0wsUUFBUTtRQUNSLE9BQU8sRUFBRSxJQUFJLENBQUMsT0FBTztRQUNyQixTQUFTLEVBQUUsSUFBSSxDQUFDLFNBQVM7UUFDekIsVUFBVSxFQUFFLElBQUksQ0FBQyxVQUFVLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxFQUFFLElBQUksRUFBRSxDQUFDLENBQUMsSUFBSSxFQUFFLEVBQUUsRUFBRSxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQztRQUN2RSxRQUFRLEVBQUUsSUFBSSxDQUFDLFFBQVEsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxTQUFTLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxRQUFRLENBQUMsQ0FBQztLQUNsRCxDQUFDO0FBQ25CLENBQUMsQ0FBQztBQUVGLE1BQU0sQ0FBQyxNQUFNLFdBQVcsR0FBRyxDQUFDLE1BQXNCLEVBQUUsRUFBRSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxTQUFTLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEZXZUb29sc05vZGUsIEVsZW1lbnRQb3NpdGlvbiB9IGZyb20gJ3Byb3RvY29sJztcblxuZXhwb3J0IGludGVyZmFjZSBJbmRleGVkTm9kZSBleHRlbmRzIERldlRvb2xzTm9kZSB7XG4gIHBvc2l0aW9uOiBFbGVtZW50UG9zaXRpb247XG4gIGNoaWxkcmVuOiBJbmRleGVkTm9kZVtdO1xufVxuXG5jb25zdCBpbmRleFRyZWUgPSAobm9kZTogRGV2VG9vbHNOb2RlLCBpZHg6IG51bWJlciwgcGFyZW50UG9zaXRpb246IEVsZW1lbnRQb3NpdGlvbiA9IFtdKTogSW5kZXhlZE5vZGUgPT4ge1xuICBjb25zdCBwb3NpdGlvbiA9IHBhcmVudFBvc2l0aW9uLmNvbmNhdChbaWR4XSk7XG4gIHJldHVybiB7XG4gICAgcG9zaXRpb24sXG4gICAgZWxlbWVudDogbm9kZS5lbGVtZW50LFxuICAgIGNvbXBvbmVudDogbm9kZS5jb21wb25lbnQsXG4gICAgZGlyZWN0aXZlczogbm9kZS5kaXJlY3RpdmVzLm1hcCgoZCwgaSkgPT4gKHsgbmFtZTogZC5uYW1lLCBpZDogZC5pZCB9KSksXG4gICAgY2hpbGRyZW46IG5vZGUuY2hpbGRyZW4ubWFwKChuLCBpKSA9PiBpbmRleFRyZWUobiwgaSwgcG9zaXRpb24pKSxcbiAgfSBhcyBJbmRleGVkTm9kZTtcbn07XG5cbmV4cG9ydCBjb25zdCBpbmRleEZvcmVzdCA9IChmb3Jlc3Q6IERldlRvb2xzTm9kZVtdKSA9PiBmb3Jlc3QubWFwKChuLCBpKSA9PiBpbmRleFRyZWUobiwgaSkpO1xuIl19