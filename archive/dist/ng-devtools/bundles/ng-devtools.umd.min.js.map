{"version":3,"sources":["../../../projects/ng-devtools/src/lib/theme-service.ts","../../../node_modules/tslib/tslib.es6.js","../../../projects/ng-devtools/src/lib/devtools-tabs/diffing/index.ts","../../../projects/ng-devtools/src/lib/devtools-tabs/directive-explorer/property-resolver/arrayify-props.ts","../../../projects/ng-devtools/src/lib/devtools-tabs/directive-explorer/property-resolver/property-data-source.ts","../../../projects/ng-devtools/src/lib/devtools-tabs/directive-explorer/property-resolver/property-expanded-directive-properties.ts","../../../projects/ng-devtools/src/lib/devtools-tabs/directive-explorer/property-resolver/directive-property-resolver.ts","../../../projects/ng-devtools/src/lib/devtools-tabs/directive-explorer/property-resolver/element-property-resolver.ts","../../../projects/ng-devtools/src/lib/devtools-tabs/directive-explorer/directive-forest/index-forest.ts","../../../projects/ng-devtools/src/lib/devtools-tabs/directive-explorer/directive-forest/component-data-source.ts","../../../projects/ng-devtools/src/lib/devtools-tabs/directive-explorer/directive-forest/directive-forest-utils.ts","../../../projects/ng-devtools/src/lib/devtools-tabs/tab-update.ts","../../../projects/ng-devtools/src/lib/devtools-tabs/directive-explorer/directive-forest/filter/filter.component.html","../../../projects/ng-devtools/src/lib/devtools-tabs/directive-explorer/directive-forest/filter/filter.component.ts","../../../projects/ng-devtools/src/lib/devtools-tabs/directive-explorer/directive-forest/directive-forest.component.html","../../../projects/ng-devtools/src/lib/devtools-tabs/directive-explorer/directive-forest/directive-forest.component.ts","../../../projects/ng-devtools/src/lib/devtools-tabs/directive-explorer/breadcrumbs/breadcrumbs.component.html","../../../projects/ng-devtools/src/lib/devtools-tabs/directive-explorer/breadcrumbs/breadcrumbs.component.ts","../../../projects/ng-devtools/src/lib/vendor/angular-split/lib/utils.ts","../../../projects/ng-devtools/src/lib/vendor/angular-split/lib/component/split.component.ts","../../../projects/ng-devtools/src/lib/vendor/angular-split/lib/directive/splitArea.directive.ts","../../../projects/ng-devtools/src/lib/vendor/angular-split/lib/module.ts","../../../projects/ng-devtools/src/lib/application-operations.ts","../../../projects/ng-devtools/src/lib/devtools-tabs/directive-explorer/property-tab/property-tab-header/component-metadata/component-metadata.component.html","../../../projects/ng-devtools/src/lib/devtools-tabs/directive-explorer/property-tab/property-tab-header/component-metadata/component-metadata.component.ts","../../../projects/ng-devtools/src/lib/devtools-tabs/directive-explorer/property-tab/property-tab-header/property-tab-header.component.html","../../../projects/ng-devtools/src/lib/devtools-tabs/directive-explorer/property-tab/property-tab-header/property-tab-header.component.ts","../../../projects/ng-devtools/src/lib/devtools-tabs/directive-explorer/property-tab/property-tab-body/property-view/property-view-header/property-view-header.component.ts","../../../projects/ng-devtools/src/lib/devtools-tabs/directive-explorer/property-tab/property-tab-body/property-view/property-view-header/property-view-header.component.html","../../../projects/ng-devtools/src/lib/devtools-tabs/directive-explorer/property-tab/property-tab-body/property-view/property-view-body/property-view-tree/property-preview/property-preview.component.ts","../../../projects/ng-devtools/src/lib/devtools-tabs/directive-explorer/property-tab/property-tab-body/property-view/property-view-body/property-view-tree/property-editor/property-editor.component.ts","../../../projects/ng-devtools/src/lib/devtools-tabs/directive-explorer/property-tab/property-tab-body/property-view/property-view-body/property-view-tree/property-editor/property-editor.component.html","../../../projects/ng-devtools/src/lib/devtools-tabs/directive-explorer/property-tab/property-tab-body/property-view/property-view-body/property-view-tree/property-preview/property-preview.component.html","../../../projects/ng-devtools/src/lib/devtools-tabs/directive-explorer/property-tab/property-tab-body/property-view/property-view-body/property-view-tree/property-view-tree.component.html","../../../projects/ng-devtools/src/lib/devtools-tabs/directive-explorer/property-tab/property-tab-body/property-view/property-view-body/property-view-tree/property-view-tree.component.ts","../../../projects/ng-devtools/src/lib/devtools-tabs/directive-explorer/property-tab/property-tab-body/property-view/property-view-body/property-view-body.component.html","../../../projects/ng-devtools/src/lib/devtools-tabs/directive-explorer/property-tab/property-tab-body/property-view/property-view-body/property-view-body.component.ts","../../../projects/ng-devtools/src/lib/devtools-tabs/directive-explorer/property-tab/property-tab-body/property-view/property-view.component.ts","../../../projects/ng-devtools/src/lib/devtools-tabs/directive-explorer/property-tab/property-tab-body/property-tab-body.component.html","../../../projects/ng-devtools/src/lib/devtools-tabs/directive-explorer/property-tab/property-tab-body/property-view/property-view.component.html","../../../projects/ng-devtools/src/lib/devtools-tabs/directive-explorer/property-tab/property-tab-body/property-tab-body.component.ts","../../../projects/ng-devtools/src/lib/devtools-tabs/directive-explorer/property-tab/property-tab.component.ts","../../../projects/ng-devtools/src/lib/devtools-tabs/directive-explorer/property-tab/property-tab.component.html","../../../projects/ng-devtools/src/lib/devtools-tabs/directive-explorer/directive-explorer.component.html","../../../projects/ng-devtools/src/lib/devtools-tabs/directive-explorer/directive-explorer.component.ts","../../../projects/ng-devtools/src/lib/application-environment.ts","../../../projects/ng-devtools/src/lib/devtools-tabs/profiler/profiler-import-dialog/profiler-import-dialog.component.html","../../../projects/ng-devtools/src/lib/devtools-tabs/profiler/profiler-import-dialog/profiler-import-dialog.component.ts","../../../projects/ng-devtools/src/lib/vendor/chromium/date-utilities.ts","../../../projects/ng-devtools/src/lib/file-api-service.ts","../../../projects/ng-devtools/src/lib/devtools-tabs/profiler/recording/timeline/record-formatter/frame-merger.ts","../../../projects/ng-devtools/src/lib/devtools-tabs/profiler/recording/timeline/timeline.component.ts","../../../projects/ng-devtools/src/lib/devtools-tabs/profiler/recording/timeline/timeline.component.html","../../../projects/ng-devtools/src/lib/devtools-tabs/profiler/profiler.component.html","../../../projects/ng-devtools/src/lib/devtools-tabs/profiler/profiler.component.ts","../../../projects/ng-devtools/src/lib/devtools-tabs/router-tree/router-tree.component.ts","../../../projects/ng-devtools/src/lib/devtools-tabs/router-tree/router-tree.component.html","../../../projects/ng-devtools/src/lib/devtools-tabs/devtools-tabs.component.html","../../../projects/ng-devtools/src/lib/devtools-tabs/devtools-tabs.component.ts","../../../projects/ng-devtools/src/lib/devtools.component.html","../../../projects/ng-devtools/src/lib/devtools.component.ts","../../../projects/ng-devtools/src/lib/devtools-tabs/directive-explorer/property-tab/property-tab-body/property-view/property-view.module.ts","../../../projects/ng-devtools/src/lib/devtools-tabs/directive-explorer/property-tab/property-tab.module.ts","../../../projects/ng-devtools/src/lib/devtools-tabs/directive-explorer/directive-forest/directive-forest.module.ts","../../../projects/ng-devtools/src/lib/devtools-tabs/directive-explorer/directive-explorer.module.ts","../../../projects/ng-devtools/src/lib/devtools-tabs/profiler/recording/timeline/record-formatter/record-formatter.ts","../../../projects/ng-devtools/src/lib/devtools-tabs/profiler/recording/timeline/record-formatter/flamegraph-formatter/flamegraph-formatter.ts","../../../projects/ng-devtools/src/lib/devtools-tabs/profiler/recording/timeline/recording-visualizer/flamegraph-visualizer/flamegraph-visualizer.component.ts","../../../projects/ng-devtools/src/lib/devtools-tabs/profiler/recording/timeline/recording-visualizer/flamegraph-visualizer/flamegraph-visualizer.component.html","../../../projects/ng-devtools/src/lib/devtools-tabs/profiler/recording/timeline/record-formatter/bargraph-formatter/bargraph-formatter.ts","../../../projects/ng-devtools/src/lib/devtools-tabs/profiler/recording/timeline/recording-visualizer/bar-chart/bar-chart.component.html","../../../projects/ng-devtools/src/lib/devtools-tabs/profiler/recording/timeline/recording-visualizer/bar-chart/bar-chart.component.ts","../../../projects/ng-devtools/src/lib/devtools-tabs/profiler/recording/timeline/recording-visualizer/bargraph-visualizer/bargraph-visualizer.component.ts","../../../projects/ng-devtools/src/lib/devtools-tabs/profiler/recording/timeline/recording-visualizer/bargraph-visualizer/bargraph-visualizer.component.html","../../../projects/ng-devtools/src/lib/devtools-tabs/profiler/recording/timeline/record-formatter/tree-map-formatter/tree-map-formatter.ts","../../../projects/ng-devtools/src/lib/devtools-tabs/profiler/recording/timeline/recording-visualizer/tree-map-visualizer/tree-map-visualizer.component.ts","../../../projects/ng-devtools/src/lib/devtools-tabs/profiler/recording/timeline/recording-visualizer/timeline-visualizer.component.html","../../../projects/ng-devtools/src/lib/devtools-tabs/profiler/recording/timeline/recording-visualizer/tree-map-visualizer/tree-map-visualizer.component.html","../../../projects/ng-devtools/src/lib/devtools-tabs/profiler/recording/timeline/recording-visualizer/timeline-visualizer.component.ts","../../../projects/ng-devtools/src/lib/devtools-tabs/profiler/recording/timeline/recording-visualizer/execution-details/execution-details.component.html","../../../projects/ng-devtools/src/lib/devtools-tabs/profiler/recording/timeline/recording-visualizer/execution-details/execution-details.component.ts","../../../projects/ng-devtools/src/lib/devtools-tabs/profiler/recording/timeline/recording-visualizer/recording-visualizer.module.ts","../../../projects/ng-devtools/src/lib/devtools-tabs/profiler/recording/timeline/frame-selector/frame-selector.component.html","../../../projects/ng-devtools/src/lib/devtools-tabs/profiler/recording/timeline/frame-selector/frame-selector.component.ts","../../../projects/ng-devtools/src/lib/devtools-tabs/profiler/recording/timeline/timeline-controls/timeline-controls.component.html","../../../projects/ng-devtools/src/lib/devtools-tabs/profiler/recording/timeline/timeline-controls/timeline-controls.component.ts","../../../projects/ng-devtools/src/lib/devtools-tabs/profiler/recording/timeline/recording-modal/recording-dialog/recording-dialog.component.ts","../../../projects/ng-devtools/src/lib/devtools-tabs/profiler/recording/timeline/recording-modal/recording-dialog/recording-dialog.component.html","../../../projects/ng-devtools/src/lib/devtools-tabs/profiler/recording/timeline/recording-modal/recording-modal.component.ts","../../../projects/ng-devtools/src/lib/devtools-tabs/profiler/recording/timeline/recording-modal/recording-modal.component.html","../../../projects/ng-devtools/src/lib/devtools-tabs/profiler/recording/timeline/timeline.module.ts","../../../projects/ng-devtools/src/lib/devtools-tabs/profiler/profiler.module.ts","../../../projects/ng-devtools/src/lib/devtools-tabs/router-tree/router-tree.module.ts","../../../projects/ng-devtools/src/lib/devtools-tabs/devtools-tabs.module.ts","../../../projects/ng-devtools/src/lib/devtools.module.ts"],"names":["ThemeService","_rendererFactory","this","currentTheme","ReplaySubject","renderer","createRenderer","toggleDarkMode","_prefersDarkMode","prototype","isDark","removeClass","addClass","document","body","next","initializeThemeWatcher","_this","window","matchMedia","addEventListener","e","Object","defineProperty","matches","i0__namespace","ɵɵinject","RendererFactory2","factory","ɵfac","providedIn","Injectable","extendStatics","d","b","setPrototypeOf","__proto__","Array","p","hasOwnProperty","call","__extends","TypeError","String","__","constructor","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","__values","o","s","Symbol","iterator","m","value","done","__read","n","ar","push","error","__spreadArray","to","from","il","j","diff","differ","a","alreadySet","movedItems","forEachMovedItem","record","currentIndex","previousIndex","keys","forEach","prop","newItems","removedItems","forEachAddedItem","item","forEachRemovedItem","splice","arrayifyProps","props","parent","map","name","descriptor","sort","parsedA","parseInt","parsedB","isNaN","trackBy","_","level","PropertyDataSource","_super","_treeFlattener","_treeControl","_entityPosition","_messageBus","_data","BehaviorSubject","_subscriptions","_expandedData","_differ","DefaultIterableDiffer","flattenNodes","update","newData","data","connect","collectionViewer","changed","expansionModel","Error","subscribe","change","added","node","_toggleNode","removed","reverse","changes","viewChange","merge","apply","pipe","expandFlattenedNodes","disconnect","unsubscribe","expand","index","indexOf","expandable","parentPath","current","emit","once","position","_path","flatNodes","f","_a","DataSource","getExpandedDirectiveProperties","getChildren","type","PropType","k","children","parents","data_1","data_1_1","getDirectiveControls","dataSource","treeControl","constructPathOfKeysToPropertyValue","nodePropToGetKeysFor","unshift","parentNodeProp","DirectivePropertyResolver","_props","_directivePosition","MatTreeFlattener","_getChildren","FlatTreeControl","_initDataSources","_inputsDataSource","_outputsDataSource","_stateDataSource","metadata","encapsulation","onPush","getExpandedProperties","updateProperties","newProps","_c","_classifyProperties","inputProps","outputProps","stateProps","updateValue","newValue","directiveId","keyPath","Observable","console","_createDataSourceFromProps","inputLabels","Set","inputs","outputLabels","_b","outputs","directiveProperties","propName","has","ElementPropertyResolver","_directivePropertiesController","Map","clearProperties","setProperties","indexedNode","_flushDeletedProperties","controller","get","element","directive","undefined","component","directives","findIndex","set","currentProps","incomingProps","currentProps_1","currentProps_1_1","delete","result","getDirectiveController","i2__namespace","MessageBus","indexTree","idx","parentPosition","concat","id","getId","prefix","toString","join","ComponentDataSource","_flattenedData","_nodeToFlat","WeakMap","flatNode","original","getFlatNodeFromIndexedNode","forest","indexedForest","indexForest","flattenedCollection","newItem","expandedNodes","isExpanded","dataNodes","isChildOf","childPosition","parentCollapsed","nodeIdx","all","TabUpdate","_tabUpdate","Subject","tabUpdate$","asObservable","share","notify","i0","FilterComponent","filter","EventEmitter","nextMatched","prevMatched","hasMatched","emitFilter","event","emitNextMatched","emitPrevMatched","toggle","node_r1","selectors","decls","vars","consts","template","rf","ctx","$event","Component","selector","templateUrl","styleUrls","Output","Input","ɵɵrestoreView","_r12_1","$implicit","ɵɵnextContext","handleSelectDomElement","highlightNode","removeHighlight","DirectiveForestComponent","_cdr","selectNode","selectDomElement","setParents","highlightComponent","removeComponentHighlight","toggleInspector","filterRegex","RegExp","currentlyMatchedIndex","selectedNode","_highlightIDinTreeFromElement","itemHeight","_initialized","_updateForest","currentSelectedElement","_reselectNodeOnUpdate","markForCheck","ngOnInit","subscribeToInspectorEvents","_tabUpdateSubscription","viewport","setTimeout","scrollToIndex","checkViewportSize","ngOnDestroy","on","selectNodeByComponentId","highlightIDinTreeFromElement","foundNode","find","handleSelect","matchedNode","selectAndEnsureVisible","select","scrollParent","elementRef","nativeElement","top","scrollTop","parentHeight","offsetHeight","bottom","expandedDataValues","el","itemTop","scrollTo","populateParents","clearSelectedNode","nodeThatStillExists","expandAll","reduce","nodes","nodePosition","warn","navigateUp","isEditingDirectiveState","preventDefault","prevIdx","prevNode","currentNode","navigateDown","collapseCurrent","collapse","expandCurrent","tagName","isSelected","isMatched","test","toLowerCase","handleFilter","filterText","_findMatchedNodes","indexesOfMatchedNodes","indexToSelect","nodeToSelect","isHighlighted","isElement","ɵɵdirectiveInject","ChangeDetectorRef","viewQuery","CdkVirtualScrollViewport","ɵɵresolveDocument","changeDetection","ChangeDetectionStrategy","OnPush","ViewChild","HostListener","mouseOverNode","node_r2","_r5_1","mouseLeaveNode","BreadcrumbsComponent","showScrollLeftButton","showScrollRightButton","updateScrollButtonVisibility$","debounceTime","updateScrollButtonVisibility","ngAfterViewInit","ngOnChanges","onResize","scroll","pixels","breadcrumbsScrollContent","scrollLeft","clientWidth","scrollWidth","getPointFromEvent","changedTouches","x","clientX","y","clientY","getElementPixelSize","elRef","direction","rect","getBoundingClientRect","width","height","getInputBoolean","v","getInputPositiveNumber","defaultValue","Number","isUserSizesValid","unit","sizes","total","every","getAreaMinSize","size","lockSize","minSize","getAreaMaxSize","maxSize","getGutterSideAbsorptionCapacity","sideAreas","allAreasSizePixel","acc","area","res","areaSnapshot","pixelAbsorb","percentAfterAbsorption","sizePercentAtStart","pixelRemain","sizePixelAtStart","tempPercentSize","maxSizePixel","minSizePixel","getAreaAbsorptionCapacityPercent","containerSizePixel","tempPixelSize","getAreaAbsorptionCapacityPixel","getAreaAbsorptionCapacity","remain","list","updateAreaSize","ɵɵresolveWindow","index_r1","_r7_1","startDragging","clickGutter","SplitComponent","ngZone","cdRef","_direction","_unit","_gutterSize","_gutterStep","_restrictMove","_useTransition","_disabled","_dir","_gutterDblClickDuration","dragStart","dragEnd","gutterClick","gutterDblClick","dragProgressSubject","dragProgress$","isDragging","dragListeners","snapshot","startPoint","endPoint","displayedAreas","hidedAreas","_clickTimeout","build","setAttribute","subscriber","transitionEndSubscriber","runOutsideAngular","getNbGutters","addArea","newArea","order","visible","removeArea","some","updateArea","resetOrders","resetSizes","showArea","areas","hideArea","comp","getVisibleAreaSizes","setVisibleAreaSizes","formatedSizes","_size","stopDragging","setStyleOrder","useUserSizes_1","defaultSize_1","wildcardSizeAreas","alreadyGotOne_1","refreshStyleSizes","setStyleFlex","sumGutterSize_1","gutterSize","gutterNum","tempPoint","clearTimeout","gutterDblClickDuration","gutterOrder","stopPropagation","disabled","lastSteppedOffset","allInvolvedAreasSizePercent","areasBeforeGutter","areasAfterGutter","restrictMove","t","listen","bind","dragEvent","lockEvents","gutterEls","toArray","offset","dir","steppedOffset","Math","round","gutterStep","areasBefore","areasAfter","abs","areaToReset_1","unlockEvents","fct","pop","run","NgZone","ElementRef","Renderer2","exportAs","useTransition","transitionEnd","ViewChildren","SplitAreaDirective","split","_order","_minSize","_maxSize","_lockSize","_visible","lockListeners","transitionListener","propertyName","setStyle","grow","shrink","basis","isMin","isMax","Directive","AngularSplitModule","forRoot","ngModule","providers","forChild","CommonModule","NgModule","imports","declarations","exports","ComponentMetadataComponent","_nestedProps","viewEncapsulationModes","currentSelectedComponent","encapsulationIndex","directiveViewEncapsulation","directiveHasOnPushStrategy","_r4","PropertyTabHeaderComponent","viewSource","handleViewSource","currentDirectives","_r1","PropertyViewHeaderComponent","PropertyEditorState","PropertyPreviewComponent","inspect","Function","HTMLNode","_r4_1","valueToSubmit","accept","reject","onBlur","PropertyEditorComponent","_cd","_elementRef","readState","Read","writeState","Write","currentPropertyState","initialValue","ngAfterViewChecked","editor","focus","parsed","JSON","parse","parseValue","_transition","onClick","querySelector","state","detectChanges","node_r3","preview","_r5","ctx_r0","PropertyViewTreeComponent","hasChild","handleUpdate","handleInspect","ctx_r3","panels","index_r2","controls","PropertyViewBodyComponent","categoryOrder","title","hidden","directiveInputControls","directiveOutputControls","directiveStateControls","drop","moveItemInArray","directivePosition","PropertyViewComponent","PropertyTabBodyComponent","getCurrentDirectives","PropertyTabComponent","_r3_1","highlight","sameDirectives","aDirectives","DirectiveExplorerComponent","_appOperations","_propResolver","_ngZone","splitDirection","_resizeObserver","ResizeObserver","entries","resizedEntry","splitElementRef","contentRect","breadcrumbs","_clickedElement","_refreshRetryTimeout","subscribeToBackendEvents","refresh","observe","directiveForestSplitArea","unobserve","handleNodeSelection","view","properties","_constructViewQuery","unhighlight","selectedElement","propertyQuery","_getPropertyQuery","PropertyQueryTypes","Specified","All","directiveForest","handleSetParents","objectPath","ApplicationOperations","provide","useClass","static","read","ProfilerImportDialogComponent","dialogRef","i1__namespace$3","MatDialogRef","MAT_DIALOG_DATA","Inject","FileApiService","uploadedData","publishFileUpload","parentEvent","reader","FileReader","onload","readAsText","files","saveObjectAsJSON","object","downloadLink","createElement","download","date","leadZero","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","toISO8601Compact","Date","href","URL","createObjectURL","Blob","stringify","click","revokeObjectURL","VisualizationMode","mergeProperty","mergeInProp","mergeDirectives","mergeIn","second","mergeInDirective","lifecycle","hook","mergeDirective","frame","TimelineComponent","exportProfile","visualizationMode","BarGraph","_maxDuration","Infinity","_allRecords","_graphDataSubject","visualizing","graphData$","_subscription","frames","_processFrames","complete","selectFrames","indexes","first","duration","source","mergeFrames","estimateFrameRate","timeSpent","multiplier","max","ceil","floor","pow","getColorByFrameRate","framerate","regenerate","frames_1","frames_1_1","_generateBars","multiplicationFactor","parseFloat","toFixed","_getBarStyles","slice","maxValue","colorPercentage","style","background-image","cursor","min-width","toolTip","stream","hasFrames","SUPPORTED_VERSIONS","ProfilerComponent","_fileApiService","dialog","_buffer","startRecording","stopRecording","remainingRecords","chunkOfRecords","_fileUploadSubscription","importedFile","open","status","errorMessage","includes","version","buffer","importedVersion","profilerVersion","afterClosed","exportProfilerResults","fileToExport","importProfilerResults","discardRecording","MatDialog","RouterTreeComponent","_routes","routes","render","g","tooltip","remove","d3","selectAll","tree","svg","svgContainer","attr","nodeSize","root","hierarchy","append","descendants","enter","content","path","isAux","specificity","handler","transition","html","pageX","pageY","depth","text","label","svgRect","gElRect","left","svgPadding","DevToolsTabsComponent","tabUpdate","themeService","_applicationEnvironment","angularVersion","activeTab","inspectorRunning","routerTreeEnabled","_currentThemeSubscription","theme","alwaysShown","navbar","disablePagination","environment","process","env","LATEST_SHA","changeTab","tab","toggleInspectorState","emitInspectorEvent","directiveExplorer","toggleTimingAPI","checked","_r7","_r10","ApplicationEnvironment","ɵɵpureFunction1","_c2","DevToolsComponent","_themeService","angularExists","angularIsInDevMode","_interval$","interval","attempt","devMode","ivy","majorAngularVersion","trigger","opacity","animate","animations","PropertyViewModule","MatToolbarModule","MatIconModule","MatTreeModule","MatExpansionModule","DragDropModule","FormsModule","PropertyTabModule","MatButtonModule","DirectiveForestModule","MatCardModule","DirectiveExplorerModule","ScrollingModule","MatSnackBarModule","RecordFormatter","getLabel","isComponent","attributes","getValue","getDirectiveValue","ROOT_LEVEL_ELEMENT_LABEL","FlamegraphFormatter","formatFrame","showChangeDetection","instances","changeDetected","color","CHANGE_DETECTION_COLOR_DARK","CHANGE_DETECTION_COLOR_LIGHT","addFrame","elements","didRunChangeDetection","CHANGE_DETECTION_COLOR","NO_CHANGE_DETECTION_COLOR","profile","components","FlamegraphVisualizerComponent","profilerBars","_formatter","_showChangeDetection","nodeSelect","_frame","_selectFrame","colors","hue","saturation","lightness","selectFrame","flameGraphNode","directiveData","formatEntryData","entry","selectedDirectives","graphData","method","BarGraphFormatter","innerNode","barClick","originalData","i_r2","bar_r1","memo","cache","BarChartComponent","internalData","nodes_1","nodes_1_1","query","stagger","animateChild","BargraphVisualizerComponent","profileRecords","barColor","bargraphNode","parentHierarchy","TreeMapFormatter","accum","curr","prev","nodeVal","TreeMapVisualizerComponent","resize$","treeMapRecords","_renderTree","_throttledResizeSubscription","_removeTree","_createTree","child","treemap","padding","caption","showNode","TimelineVisualizerComponent","cmpVisualizationModes","selectedEntry","mode","_visualizationMode","handleNodeSelect","ExecutionDetailsComponent","RecordingVisualizerModule","NgxFlamegraphModule","MatTooltipModule","i1__namespace$1","NgSwitch","NgSwitchCase","NgIf","i1__namespace","MatCard","i1__namespace$2","MatToolbar","NgForOf","DecimalPipe","FrameSelectorComponent","startFrameIndex","endFrameIndex","selectedFrameIndexes","_graphData$","_graphDataSubscription","items","frameCount","_smartJoinIndexLabels","indexArray","sortedIndexes","groups","sortedIndexes_1","sortedIndexes_1_1","group","move","newVal","_selectFrames","_ensureVisible","handleFrameSelection","shiftKey","ctrlKey","metaKey","min","start_1","end","add","right","offsetWidth","itemLeft","itemWidth","changeVisualizationMode","ctx_r9","toggleChangeDetection","barContainer","TimelineControlsComponent","flameGraphMode","FlameGraph","treeMapMode","TreeMap","barGraphMode","estimatedFrameRate","frameColor","empty","RecordingDialogComponent","RecordingModalComponent","TimelineModule","MatCheckboxModule","MatDialogModule","MatProgressBarModule","MatSelectModule","ProfilerModule","entryComponents","RouterTreeModule","DevToolsTabModule","MatTabsModule","MatMenuModule","MatSlideToggleModule","DevToolsModule","MatProgressSpinnerModule"],"mappings":"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","sourcesContent":["import { ReplaySubject, Subject } from 'rxjs';\nimport { Injectable, RendererFactory2, Renderer2 } from '@angular/core';\n\nexport type Theme = 'dark-theme' | 'light-theme';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ThemeService {\n  private renderer: Renderer2;\n  currentTheme: Subject<Theme> = new ReplaySubject();\n\n  constructor(private _rendererFactory: RendererFactory2) {\n    this.renderer = this._rendererFactory.createRenderer(null, null);\n    this.toggleDarkMode(this._prefersDarkMode);\n  }\n\n  toggleDarkMode(isDark: boolean): void {\n    const removeClass = isDark ? 'light-theme' : 'dark-theme';\n    const addClass = !isDark ? 'light-theme' : 'dark-theme';\n    this.renderer.removeClass(document.body, removeClass);\n    this.renderer.addClass(document.body, addClass);\n    this.currentTheme.next(addClass);\n  }\n\n  initializeThemeWatcher(): void {\n    window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', (e) => {\n      this.toggleDarkMode(this._prefersDarkMode);\n    });\n  }\n\n  private get _prefersDarkMode(): boolean {\n    return window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;\n  }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","import { DefaultIterableDiffer } from '@angular/core';\n\nexport interface MovedRecord {\n  currentIndex: number;\n  previousIndex: number;\n}\n\nexport const diff = <T>(\n  differ: DefaultIterableDiffer<T>,\n  a: T[],\n  b: T[]\n): {\n  newItems: T[];\n  removedItems: T[];\n  movedItems: T[];\n} => {\n  differ.diff(a);\n  differ.diff(b);\n\n  const alreadySet: boolean[] = [];\n  const movedItems: T[] = [];\n\n  // We first have to set the moved items to their correct positions.\n  // Keep in mind that the track by function may not guarantee\n  // that we haven't changed any of the items' props.\n  differ.forEachMovedItem(record => {\n    if (record.currentIndex === null) {\n      return;\n    }\n    if (record.previousIndex === null) {\n      return;\n    }\n    // We want to preserve the reference so that a default\n    // track by function used by the CDK, for instance, can\n    // recognize that this item's identity hasn't changed.\n    // At the same time, since we don't have the guarantee\n    // that we haven't already set the previousIndex while\n    // iterating, we need to check that. If we have, we assign\n    // this array item to a new object. We don't want to risk\n    // changing the properties of an object we'll use in the future.\n    if (!alreadySet[record.previousIndex]) {\n      a[record.currentIndex] = a[record.previousIndex];\n    } else {\n      a[record.currentIndex] = {} as T;\n    }\n    Object.keys(b[record.currentIndex]).forEach(prop => {\n      // TypeScript's type inference didn't follow the check from above.\n      if (record.currentIndex === null) {\n        return;\n      }\n      a[record.currentIndex][prop] = b[record.currentIndex][prop];\n    });\n    if (!alreadySet[record.previousIndex]) {\n      // tslint:disable-next-line: no-non-null-assertion\n      a[record.previousIndex] = null!;\n    }\n    alreadySet[record.currentIndex] = true;\n    movedItems.push(a[record.currentIndex]);\n  });\n\n  // Now we can set the new items and remove the deleted ones.\n  const newItems: T[] = [];\n  const removedItems: T[] = [];\n  differ.forEachAddedItem(record => {\n    if (record.currentIndex !== null && record.previousIndex === null) {\n      a[record.currentIndex] = record.item;\n      alreadySet[record.currentIndex] = true;\n      newItems.push(record.item);\n    }\n  });\n\n  differ.forEachRemovedItem(record => {\n    if (record.previousIndex === null) {\n      return;\n    }\n    if (record.currentIndex === null && !alreadySet[record.previousIndex]) {\n      // tslint:disable-next-line: no-non-null-assertion\n      a[record.previousIndex] = null!;\n    }\n    removedItems.push(record.item);\n  });\n\n  for (let i = a.length - 1; i >= 0; i--) {\n    if (a[i] === null) {\n      a.splice(i, 1);\n    }\n  }\n\n  return { newItems, removedItems, movedItems };\n};\n","import { Descriptor } from 'protocol';\nimport { Property } from './element-property-resolver';\n\nexport const arrayifyProps = (\n  props: { [prop: string]: Descriptor } | Descriptor[],\n  parent: Property | null = null\n): Property[] =>\n  Object.keys(props)\n    .map((name) => ({ name, descriptor: props[name], parent }))\n    .sort((a, b) => {\n      const parsedA = parseInt(a.name, 10);\n      const parsedB = parseInt(b.name, 10);\n\n      if (isNaN(parsedA) || isNaN(parsedB)) {\n        return a.name > b.name ? 1 : -1;\n      }\n\n      return parsedA - parsedB;\n    });\n","import { Descriptor, DirectivePosition, Events, MessageBus, Properties } from 'protocol';\nimport { CollectionViewer, DataSource, SelectionChange } from '@angular/cdk/collections';\nimport { BehaviorSubject, merge, Observable, Subscription } from 'rxjs';\nimport { MatTreeFlattener } from '@angular/material/tree';\nimport { FlatTreeControl } from '@angular/cdk/tree';\nimport { map } from 'rxjs/operators';\nimport { DefaultIterableDiffer } from '@angular/core';\nimport { diff } from '../../diffing';\nimport { FlatNode, Property } from './element-property-resolver';\nimport { arrayifyProps } from './arrayify-props';\n\nconst trackBy = (_: number, item: FlatNode) => {\n  return `#${item.prop.name}#${item.level}`;\n};\n\nexport class PropertyDataSource extends DataSource<FlatNode> {\n  private _data = new BehaviorSubject<FlatNode[]>([]);\n  private _subscriptions: Subscription[] = [];\n  private _expandedData = new BehaviorSubject<FlatNode[]>([]);\n  private _differ = new DefaultIterableDiffer(trackBy);\n\n  constructor(\n    props: { [prop: string]: Descriptor },\n    private _treeFlattener: MatTreeFlattener<Property, FlatNode>,\n    private _treeControl: FlatTreeControl<FlatNode>,\n    private _entityPosition: DirectivePosition,\n    private _messageBus: MessageBus<Events>\n  ) {\n    super();\n    this._data.next(this._treeFlattener.flattenNodes(arrayifyProps(props)));\n  }\n\n  get data(): FlatNode[] {\n    return this._data.value;\n  }\n\n  get treeControl(): FlatTreeControl<FlatNode> {\n    return this._treeControl;\n  }\n\n  update(props: { [prop: string]: Descriptor }): void {\n    const newData = this._treeFlattener.flattenNodes(arrayifyProps(props));\n    diff(this._differ, this.data, newData);\n    this._data.next(this.data);\n  }\n\n  connect(collectionViewer: CollectionViewer): Observable<FlatNode[]> {\n    const changed = this._treeControl.expansionModel.changed;\n    if (!changed) {\n      throw new Error('Unable to subscribe to the expansion model change');\n    }\n    const s = changed.subscribe((change: SelectionChange<FlatNode>) => {\n      if (change.added) {\n        change.added.forEach((node) => this._toggleNode(node, true));\n      }\n      if (change.removed) {\n        change.removed.reverse().forEach((node) => this._toggleNode(node, false));\n      }\n    });\n    this._subscriptions.push(s);\n\n    const changes = [collectionViewer.viewChange, this._treeControl.expansionModel.changed, this._data];\n\n    return merge(...changes).pipe(\n      map(() => {\n        this._expandedData.next(this._treeFlattener.expandFlattenedNodes(this.data, this._treeControl));\n        return this._expandedData.value;\n      })\n    );\n  }\n\n  disconnect(): void {\n    this._subscriptions.forEach((s) => s.unsubscribe());\n    this._subscriptions = [];\n  }\n\n  private _toggleNode(node: FlatNode, expand: boolean): void {\n    const index = this.data.indexOf(node);\n    // If we cannot find the current node, or the current node is not expandable\n    // or...if it's expandable but it does have a value, or we're collapsing\n    // we're not interested in fetching its children.\n    if (index < 0 || !node.expandable || node.prop.descriptor.value || !expand) {\n      return;\n    }\n\n    let parentPath: string[] = [];\n    let current = node.prop;\n    while (current) {\n      parentPath.push(current.name);\n      if (!current.parent) {\n        break;\n      }\n      current = current.parent;\n    }\n    parentPath = parentPath.reverse();\n\n    this._messageBus.emit('getNestedProperties', [this._entityPosition, parentPath]);\n\n    this._messageBus.once('nestedProperties', (position: DirectivePosition, data: Properties, _path: string[]) => {\n      node.prop.descriptor.value = data.props;\n      this._treeControl.expand(node);\n      const props = arrayifyProps(data.props, node.prop);\n      const flatNodes = this._treeFlattener.flattenNodes(props);\n      flatNodes.forEach((f) => (f.level += node.level + 1));\n      this.data.splice(index + 1, 0, ...flatNodes);\n      this._data.next(this.data);\n    });\n  }\n}\n","import { Descriptor, NestedProp, PropType } from 'protocol';\nimport { FlatNode } from './element-property-resolver';\n\nexport const getExpandedDirectiveProperties = (data: FlatNode[]): NestedProp[] => {\n  const getChildren = (prop: Descriptor) => {\n    if ((prop.type === PropType.Object || prop.type === PropType.Array) && prop.value) {\n      return Object.keys(prop.value).map(k => {\n        return {\n          name: prop.type === PropType.Array ? parseInt(k, 10) : k,\n          children: getChildren(prop.value[k]),\n        };\n      });\n    }\n    return [];\n  };\n\n  const getExpandedProperties = (props: { [name: string]: Descriptor }) => {\n    return Object.keys(props).map(name => {\n      return {\n        name,\n        children: getChildren(props[name]),\n      };\n    });\n  };\n\n  const parents: { [name: string]: Descriptor } = {};\n\n  for (const node of data) {\n    let prop = node.prop;\n    while (prop.parent) {\n      prop = prop.parent;\n    }\n    parents[prop.name] = prop.descriptor;\n  }\n\n  return getExpandedProperties(parents);\n};\n","import { Descriptor, PropType, MessageBus, Events, Properties, DirectivePosition, NestedProp } from 'protocol';\nimport { MatTreeFlattener } from '@angular/material/tree';\nimport { PropertyDataSource } from './property-data-source';\nimport { FlatTreeControl } from '@angular/cdk/tree';\nimport { getExpandedDirectiveProperties } from './property-expanded-directive-properties';\nimport { Observable } from 'rxjs';\nimport { Property, FlatNode } from './element-property-resolver';\nimport { ViewEncapsulation } from '@angular/core';\nimport { arrayifyProps } from './arrayify-props';\n\nexport interface DirectiveTreeData {\n  dataSource: PropertyDataSource;\n  treeControl: FlatTreeControl<FlatNode>;\n}\n\nconst expandable = (prop: Descriptor) => {\n  if (!prop) {\n    return false;\n  }\n  if (!prop.expandable) {\n    return false;\n  }\n  return !(prop.type !== PropType.Object && prop.type !== PropType.Array);\n};\n\nconst getDirectiveControls = (\n  dataSource: PropertyDataSource\n): { dataSource: PropertyDataSource; treeControl: FlatTreeControl<FlatNode> } => {\n  const treeControl = dataSource.treeControl;\n  return {\n    dataSource,\n    treeControl,\n  };\n};\n\nexport const constructPathOfKeysToPropertyValue = (nodePropToGetKeysFor: Property, keys: string[] = []): string[] => {\n  keys.unshift(nodePropToGetKeysFor.name);\n  const parentNodeProp = nodePropToGetKeysFor.parent;\n  if (parentNodeProp) {\n    constructPathOfKeysToPropertyValue(parentNodeProp, keys);\n  }\n  return keys;\n};\n\nexport class DirectivePropertyResolver {\n  private _treeFlattener = new MatTreeFlattener(\n    (node: Property, level: number): FlatNode => {\n      return {\n        expandable: expandable(node.descriptor),\n        prop: node,\n        level,\n      };\n    },\n    (node) => node.level,\n    (node) => node.expandable,\n    (node) => this._getChildren(node)\n  );\n\n  private _treeControl = new FlatTreeControl<FlatNode>(\n    (node) => node.level,\n    (node) => node.expandable\n  );\n\n  private _inputsDataSource: PropertyDataSource;\n  private _outputsDataSource: PropertyDataSource;\n  private _stateDataSource: PropertyDataSource;\n\n  constructor(\n    private _messageBus: MessageBus<Events>,\n    private _props: Properties,\n    private _directivePosition: DirectivePosition\n  ) {\n    this._initDataSources();\n  }\n\n  get directiveInputControls(): DirectiveTreeData {\n    return getDirectiveControls(this._inputsDataSource);\n  }\n\n  get directiveOutputControls(): DirectiveTreeData {\n    return getDirectiveControls(this._outputsDataSource);\n  }\n\n  get directiveStateControls(): DirectiveTreeData {\n    return getDirectiveControls(this._stateDataSource);\n  }\n\n  get directiveProperties(): { [name: string]: Descriptor } {\n    return this._props.props;\n  }\n\n  get directivePosition(): DirectivePosition {\n    return this._directivePosition;\n  }\n\n  get directiveViewEncapsulation(): ViewEncapsulation | undefined {\n    return this._props.metadata?.encapsulation;\n  }\n\n  get directiveHasOnPushStrategy(): boolean | undefined {\n    return this._props.metadata?.onPush;\n  }\n\n  getExpandedProperties(): NestedProp[] {\n    return [\n      ...getExpandedDirectiveProperties(this._inputsDataSource.data),\n      ...getExpandedDirectiveProperties(this._outputsDataSource.data),\n      ...getExpandedDirectiveProperties(this._stateDataSource.data),\n    ];\n  }\n\n  updateProperties(newProps: Properties): void {\n    this._props = newProps;\n    const { inputProps, outputProps, stateProps } = this._classifyProperties();\n\n    this._inputsDataSource.update(inputProps);\n    this._outputsDataSource.update(outputProps);\n    this._stateDataSource.update(stateProps);\n  }\n\n  updateValue(node: FlatNode, newValue: any): void {\n    const directiveId = this._directivePosition;\n    const keyPath = constructPathOfKeysToPropertyValue(node.prop);\n    this._messageBus.emit('updateState', [{ directiveId, keyPath, newValue }]);\n    node.prop.descriptor.value = newValue;\n  }\n\n  private _getChildren(prop: Property): Property[] | undefined {\n    const descriptor = prop.descriptor;\n    if (\n      (descriptor.type === PropType.Object || descriptor.type === PropType.Array) &&\n      !(descriptor.value instanceof Observable)\n    ) {\n      return arrayifyProps(descriptor.value || {}, prop);\n    } else {\n      console.error('Unexpected data type', descriptor, 'in property', prop);\n    }\n  }\n\n  private _initDataSources(): void {\n    const { inputProps, outputProps, stateProps } = this._classifyProperties();\n\n    this._inputsDataSource = this._createDataSourceFromProps(inputProps);\n    this._outputsDataSource = this._createDataSourceFromProps(outputProps);\n    this._stateDataSource = this._createDataSourceFromProps(stateProps);\n  }\n\n  private _createDataSourceFromProps(props: { [name: string]: Descriptor }): PropertyDataSource {\n    return new PropertyDataSource(\n      props,\n      this._treeFlattener,\n      this._treeControl,\n      this._directivePosition,\n      this._messageBus\n    );\n  }\n\n  private _classifyProperties(): {\n    inputProps: { [name: string]: Descriptor };\n    outputProps: { [name: string]: Descriptor };\n    stateProps: { [name: string]: Descriptor };\n  } {\n    const inputLabels: Set<string> = new Set(Object.keys(this._props.metadata?.inputs || {}));\n    const outputLabels: Set<string> = new Set(Object.keys(this._props.metadata?.outputs || {}));\n\n    const inputProps = {};\n    const outputProps = {};\n    const stateProps = {};\n    let propPointer: { [name: string]: Descriptor };\n\n    Object.keys(this.directiveProperties).forEach((propName) => {\n      propPointer = inputLabels.has(propName) ? inputProps : outputLabels.has(propName) ? outputProps : stateProps;\n      propPointer[propName] = this.directiveProperties[propName];\n    });\n\n    return {\n      inputProps,\n      outputProps,\n      stateProps,\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  DirectivesProperties,\n  ComponentExplorerViewProperties,\n  Descriptor,\n  MessageBus,\n  Events,\n  DirectivePosition,\n} from 'protocol';\nimport { IndexedNode } from '../directive-forest/index-forest';\nimport { DirectivePropertyResolver } from './directive-property-resolver';\n\nexport interface FlatNode {\n  expandable: boolean;\n  prop: Property;\n  level: number;\n}\n\nexport interface Property {\n  name: string;\n  descriptor: Descriptor;\n  parent: Property | null;\n}\n\n@Injectable()\nexport class ElementPropertyResolver {\n  private _directivePropertiesController = new Map<string, DirectivePropertyResolver>();\n\n  constructor(private _messageBus: MessageBus<Events>) {}\n\n  clearProperties(): void {\n    this._directivePropertiesController = new Map();\n  }\n\n  setProperties(indexedNode: IndexedNode, data: DirectivesProperties): void {\n    this._flushDeletedProperties(data);\n\n    Object.keys(data).forEach((key) => {\n      const controller = this._directivePropertiesController.get(key);\n      if (controller) {\n        controller.updateProperties(data[key]);\n        return;\n      }\n      const position: DirectivePosition = {\n        element: indexedNode.position,\n        directive: undefined,\n      };\n      if (!indexedNode.component || indexedNode.component.name !== key) {\n        position.directive = indexedNode.directives.findIndex((d) => d.name === key);\n      }\n      this._directivePropertiesController.set(\n        key,\n        new DirectivePropertyResolver(this._messageBus, data[key], position)\n      );\n    });\n  }\n\n  private _flushDeletedProperties(data: DirectivesProperties): void {\n    const currentProps = [...this._directivePropertiesController.keys()];\n    const incomingProps = new Set(Object.keys(data));\n    for (const prop of currentProps) {\n      if (!incomingProps.has(prop)) {\n        this._directivePropertiesController.delete(prop);\n      }\n    }\n  }\n\n  getExpandedProperties(): ComponentExplorerViewProperties {\n    const result: ComponentExplorerViewProperties = {};\n    for (const [directive] of this._directivePropertiesController) {\n      const controller = this._directivePropertiesController.get(directive);\n      if (!controller) {\n        console.error('Unable to find nested properties controller for', directive);\n        continue;\n      }\n      result[directive] = controller.getExpandedProperties();\n    }\n    return result;\n  }\n\n  getDirectiveController(directive: string): DirectivePropertyResolver | undefined {\n    return this._directivePropertiesController.get(directive);\n  }\n}\n","import { DevToolsNode, ElementPosition } from 'protocol';\n\nexport interface IndexedNode extends DevToolsNode {\n  position: ElementPosition;\n  children: IndexedNode[];\n}\n\nconst indexTree = (node: DevToolsNode, idx: number, parentPosition: ElementPosition = []): IndexedNode => {\n  const position = parentPosition.concat([idx]);\n  return {\n    position,\n    element: node.element,\n    component: node.component,\n    directives: node.directives.map((d, i) => ({ name: d.name, id: d.id })),\n    children: node.children.map((n, i) => indexTree(n, i, position)),\n  } as IndexedNode;\n};\n\nexport const indexForest = (forest: DevToolsNode[]) => forest.map((n, i) => indexTree(n, i));\n","import { DevToolsNode } from 'protocol';\nimport { CollectionViewer, DataSource } from '@angular/cdk/collections';\nimport { BehaviorSubject, merge, Observable } from 'rxjs';\nimport { MatTreeFlattener } from '@angular/material/tree';\nimport { FlatTreeControl } from '@angular/cdk/tree';\nimport { map } from 'rxjs/operators';\nimport { DefaultIterableDiffer } from '@angular/core';\nimport { IndexedNode, indexForest } from './index-forest';\nimport { diff } from '../../diffing';\n\n/** Flat node with expandable and level information */\nexport interface FlatNode {\n  id: string;\n  expandable: boolean;\n  name: string;\n  directives: string;\n  position: number[];\n  level: number;\n  original: IndexedNode;\n  newItem?: boolean;\n}\n\nconst expandable = (node: IndexedNode) => !!node.children && node.children.length > 0;\n\nconst trackBy = (_: number, item: FlatNode) => `${item.id}#${item.expandable}`;\n\nconst getId = (node: IndexedNode) => {\n  let prefix = '';\n  if (node.component) {\n    prefix = node.component.id.toString();\n  }\n  const dirIds = node.directives\n    .map((d) => d.id)\n    .sort((a, b) => {\n      return a - b;\n    });\n  return prefix + '-' + dirIds.join('-');\n};\n\nexport class ComponentDataSource extends DataSource<FlatNode> {\n  private _differ = new DefaultIterableDiffer(trackBy);\n  private _expandedData = new BehaviorSubject<FlatNode[]>([]);\n  private _flattenedData = new BehaviorSubject<FlatNode[]>([]);\n  private _nodeToFlat = new WeakMap<IndexedNode, FlatNode>();\n\n  private _treeFlattener = new MatTreeFlattener(\n    (node: IndexedNode, level: number) => {\n      if (this._nodeToFlat.has(node)) {\n        return this._nodeToFlat.get(node);\n      }\n      const flatNode: FlatNode = {\n        expandable: expandable(node),\n        id: getId(node),\n        // We can compare the nodes in the navigation functions above\n        // based on this identifier directly, since it's a reference type\n        // and the reference is preserved after transformation.\n        position: node.position,\n        name: node.component ? node.component.name : node.element,\n        directives: node.directives.map((d) => d.name).join(', '),\n        original: node,\n        level,\n      };\n      this._nodeToFlat.set(node, flatNode);\n      return flatNode;\n    },\n    (node) => (node ? node.level : -1),\n    (node) => (node ? node.expandable : false),\n    (node) => (node ? node.children : [])\n  );\n\n  constructor(private _treeControl: FlatTreeControl<FlatNode>) {\n    super();\n  }\n\n  get data(): FlatNode[] {\n    return this._flattenedData.value;\n  }\n\n  get expandedDataValues(): FlatNode[] {\n    return this._expandedData.value;\n  }\n\n  getFlatNodeFromIndexedNode(indexedNode: IndexedNode): FlatNode | undefined {\n    return this._nodeToFlat.get(indexedNode);\n  }\n\n  update(forest: DevToolsNode[]): { newItems: FlatNode[]; movedItems: FlatNode[]; removedItems: FlatNode[] } {\n    if (!forest) {\n      return { newItems: [], movedItems: [], removedItems: [] };\n    }\n\n    const indexedForest = indexForest(forest);\n    const flattenedCollection = this._treeFlattener.flattenNodes(indexedForest) as FlatNode[];\n\n    this.data.forEach((i) => (i.newItem = false));\n\n    const expandedNodes = {};\n    this.data.forEach((item) => {\n      expandedNodes[item.id] = this._treeControl.isExpanded(item);\n    });\n\n    const { newItems, movedItems, removedItems } = diff<FlatNode>(this._differ, this.data, flattenedCollection);\n    this._treeControl.dataNodes = this.data;\n    this._flattenedData.next(this.data);\n\n    movedItems.forEach((i) => {\n      this._nodeToFlat.set(i.original, i);\n      if (expandedNodes[i.id]) {\n        this._treeControl.expand(i);\n      }\n    });\n    newItems.forEach((i) => (i.newItem = true));\n    removedItems.forEach((i) => this._nodeToFlat.delete(i.original));\n\n    return { newItems, movedItems, removedItems };\n  }\n\n  connect(collectionViewer: CollectionViewer): Observable<FlatNode[]> {\n    const changes = [collectionViewer.viewChange, this._treeControl.expansionModel.changed, this._flattenedData];\n    return merge(...changes).pipe(\n      map(() => {\n        this._expandedData.next(this._treeFlattener.expandFlattenedNodes(this.data, this._treeControl) as FlatNode[]);\n        return this._expandedData.value;\n      })\n    );\n  }\n\n  disconnect(): void {}\n}\n","import { FlatNode } from './component-data-source';\nimport { FlatTreeControl } from '@angular/cdk/tree';\n\nexport const isChildOf = (childPosition: number[], parentPosition: number[]) => {\n  if (childPosition.length <= parentPosition.length) {\n    return false;\n  }\n  for (let i = 0; i < parentPosition.length; i++) {\n    if (childPosition[i] !== parentPosition[i]) {\n      return false;\n    }\n  }\n  return true;\n};\n\nexport const parentCollapsed = (nodeIdx: number, all: FlatNode[], treeControl: FlatTreeControl<FlatNode>) => {\n  const node = all[nodeIdx];\n  for (let i = nodeIdx - 1; i >= 0; i--) {\n    if (isChildOf(node.position, all[i].position) && !treeControl.isExpanded(all[i])) {\n      return true;\n    }\n  }\n  return false;\n};\n","import { Subject } from 'rxjs';\nimport { share } from 'rxjs/operators';\n\n// This service is used to notify the CDK virtual scroll parents\n// when the tab has changed. Alternatively, we risk to have broken\n// layout since the virtual scroll is nested inside of a TabGroup\n// which doesn't have consistent dimensions when collapsed and expanded.\nexport class TabUpdate {\n  private _tabUpdate = new Subject();\n\n  tabUpdate$ = this._tabUpdate.asObservable().pipe(share());\n\n  notify(): void {\n    this._tabUpdate.next();\n  }\n}\n","<mat-card class=\"filter\">\n  <div class=\"icon-outer\">\n    <mat-icon color=\"primary\">search</mat-icon>\n  </div>\n  <input\n    matInput\n    #filterInput\n    (input)=\"emitFilter($event)\"\n    (keydown.enter)=\"emitNextMatched()\"\n    (keydown.shift.enter)=\"emitPrevMatched()\"\n    class=\"filter-input\"\n    placeholder=\"Filter components\"\n  />\n  <div class=\"up-down-buttons\" *ngIf=\"hasMatched\">\n    <button mat-icon-button (click)=\"emitPrevMatched()\">\n      <mat-icon class=\"mat-icon-rtl-mirror\">\n        expand_less\n      </mat-icon>\n    </button>\n    <button mat-icon-button (click)=\"emitNextMatched()\">\n      <mat-icon class=\"\">\n        expand_more\n      </mat-icon>\n    </button>\n  </div>\n</mat-card>\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'ng-filter',\n  templateUrl: './filter.component.html',\n  styleUrls: ['./filter.component.scss'],\n})\nexport class FilterComponent {\n  @Output() filter: EventEmitter<string> = new EventEmitter<string>();\n  @Output() nextMatched: EventEmitter<void> = new EventEmitter();\n  @Output() prevMatched: EventEmitter<void> = new EventEmitter();\n\n  @Input() hasMatched = false;\n\n  emitFilter(event: InputEvent): void {\n    this.filter.emit((event.target as HTMLInputElement).value);\n  }\n\n  emitNextMatched(): void {\n    this.nextMatched.emit();\n  }\n\n  emitPrevMatched(): void {\n    this.prevMatched.emit();\n  }\n}\n","<ng-filter\n  [hasMatched]=\"hasMatched\"\n  (filter)=\"handleFilter($event)\"\n  (nextMatched)=\"nextMatched()\"\n  (prevMatched)=\"prevMatched()\"\n>\n</ng-filter>\n<cdk-virtual-scroll-viewport class=\"tree-wrapper\" [itemSize]=\"itemHeight\">\n  <ng-container *cdkVirtualFor=\"let node of dataSource; let idx = index\">\n    <div\n      [ngClass]=\"{\n        matched: isMatched(node),\n        selected: isSelected(node),\n        highlighted: isHighlighted(node),\n        'new-node': node.newItem\n      }\"\n      class=\"tree-node\"\n      (click)=\"selectAndEnsureVisible(node)\"\n      (dblclick)=\"handleSelectDomElement(node)\"\n      (mouseenter)=\"highlightNode(node.position)\"\n      (mouseleave)=\"removeHighlight()\"\n      [style.padding-left]=\"15 + 15 * node.level + 'px'\"\n    >\n      <button\n        [style.left]=\"15 * node.level + 'px'\"\n        *ngIf=\"node.expandable\"\n        (click)=\"treeControl.toggle(node)\"\n        [attr.aria-label]=\"'toggle ' + node.name\"\n      >\n        <mat-icon class=\"mat-icon-rtl-mirror\">\n          {{ treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right' }}\n        </mat-icon>\n      </button>\n      <span class=\"element-name\" [class.angular-element]=\"isElement(node)\">{{ node.name }}</span>\n      <span *ngIf=\"node.directives\" class=\"dir-names\">[{{ node.directives }}]</span>\n      <span class=\"console-reference\" *ngIf=\"isSelected(node)\"> == $ng0 </span>\n    </div>\n  </ng-container>\n</cdk-virtual-scroll-viewport>\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnInit,\n  Output,\n  ViewChild,\n  OnDestroy,\n} from '@angular/core';\nimport { DevToolsNode, ElementPosition, Events, MessageBus } from 'protocol';\nimport { FlatTreeControl } from '@angular/cdk/tree';\nimport { ComponentDataSource, FlatNode } from './component-data-source';\nimport { isChildOf, parentCollapsed } from './directive-forest-utils';\nimport { IndexedNode } from './index-forest';\nimport { CdkVirtualScrollViewport } from '@angular/cdk/scrolling';\nimport { TabUpdate } from '../../tab-update';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'ng-directive-forest',\n  templateUrl: './directive-forest.component.html',\n  styleUrls: ['./directive-forest.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DirectiveForestComponent implements OnInit, OnDestroy {\n  @Input() set forest(forest: DevToolsNode[]) {\n    const result = this._updateForest(forest);\n    const changed = result.movedItems.length || result.newItems.length || result.removedItems.length;\n    if (this.currentSelectedElement && changed) {\n      this._reselectNodeOnUpdate();\n    }\n  }\n  @Input() currentSelectedElement: IndexedNode;\n\n  @Output() selectNode = new EventEmitter<IndexedNode | null>();\n  @Output() selectDomElement = new EventEmitter<IndexedNode>();\n  @Output() setParents = new EventEmitter<FlatNode[] | null>();\n  @Output() highlightComponent = new EventEmitter<ElementPosition>();\n  @Output() removeComponentHighlight = new EventEmitter<void>();\n  @Output() toggleInspector = new EventEmitter<void>();\n\n  @ViewChild(CdkVirtualScrollViewport) viewport: CdkVirtualScrollViewport;\n\n  filterRegex = new RegExp('.^');\n  currentlyMatchedIndex = -1;\n\n  selectedNode: FlatNode | null = null;\n  parents: FlatNode[];\n\n  private _highlightIDinTreeFromElement: number | null = null;\n  private _tabUpdateSubscription: Subscription;\n\n  set highlightIDinTreeFromElement(id: number | null) {\n    this._highlightIDinTreeFromElement = id;\n    this._cdr.markForCheck();\n  }\n\n  readonly treeControl = new FlatTreeControl<FlatNode>(\n    (node) => node.level,\n    (node) => node.expandable\n  );\n  readonly dataSource = new ComponentDataSource(this.treeControl);\n  readonly itemHeight = 18;\n\n  private _initialized = false;\n\n  constructor(\n    private _tabUpdate: TabUpdate,\n    private _messageBus: MessageBus<Events>,\n    private _cdr: ChangeDetectorRef\n  ) {}\n\n  ngOnInit(): void {\n    this.subscribeToInspectorEvents();\n    this._tabUpdateSubscription = this._tabUpdate.tabUpdate$.subscribe(() => {\n      if (this.viewport) {\n        setTimeout(() => {\n          this.viewport.scrollToIndex(0);\n          this.viewport.checkViewportSize();\n        });\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    if (this._tabUpdateSubscription) {\n      this._tabUpdateSubscription.unsubscribe();\n    }\n  }\n\n  subscribeToInspectorEvents(): void {\n    this._messageBus.on('selectComponent', (id: number) => {\n      this.selectNodeByComponentId(id);\n      this.toggleInspector.emit();\n    });\n\n    this._messageBus.on('highlightComponent', (id: number) => {\n      this.highlightIDinTreeFromElement = id;\n    });\n\n    this._messageBus.on('removeComponentHighlight', () => {\n      this.highlightIDinTreeFromElement = null;\n    });\n  }\n\n  selectNodeByComponentId(id: number): void {\n    const foundNode = this.dataSource.data.find((node) => node.original.component?.id === id);\n    if (foundNode) {\n      this.handleSelect(foundNode);\n    }\n  }\n\n  handleSelect(node: FlatNode): void {\n    this.currentlyMatchedIndex = this.dataSource.data.findIndex((matchedNode) => matchedNode.id === node.id);\n    this.selectAndEnsureVisible(node);\n  }\n\n  handleSelectDomElement(node: FlatNode): void {\n    this.selectDomElement.emit(node.original);\n  }\n\n  selectAndEnsureVisible(node: FlatNode): void {\n    this.select(node);\n\n    const scrollParent = this.viewport.elementRef.nativeElement;\n    // The top most point we see an element\n    const top = scrollParent.scrollTop;\n    // That's the bottom most point we currently see an element.\n    const parentHeight = scrollParent.offsetHeight;\n    const bottom = top + parentHeight;\n    const idx = this.dataSource.expandedDataValues.findIndex((el) => el.id === node.id);\n    // The node might be hidden.\n    if (idx < 0) {\n      return;\n    }\n    const itemTop = idx * this.itemHeight;\n    if (itemTop < top) {\n      scrollParent.scrollTo({ top: itemTop });\n    } else if (bottom < itemTop + this.itemHeight) {\n      scrollParent.scrollTo({ top: itemTop - parentHeight + this.itemHeight });\n    }\n  }\n\n  select(node: FlatNode): void {\n    this.populateParents(node.position);\n    this.selectNode.emit(node.original);\n    this.selectedNode = node;\n  }\n\n  clearSelectedNode(): void {\n    this.selectNode.emit(null);\n    this.selectedNode = null;\n    this.parents = [];\n    this.setParents.emit(null);\n  }\n\n  private _reselectNodeOnUpdate(): void {\n    const nodeThatStillExists = this.dataSource.getFlatNodeFromIndexedNode(this.currentSelectedElement);\n    if (nodeThatStillExists) {\n      this.select(nodeThatStillExists);\n    } else {\n      this.clearSelectedNode();\n    }\n  }\n\n  private _updateForest(\n    forest: DevToolsNode[]\n  ): { newItems: FlatNode[]; movedItems: FlatNode[]; removedItems: FlatNode[] } {\n    const result = this.dataSource.update(forest);\n    if (!this._initialized && forest && forest.length) {\n      this.treeControl.expandAll();\n      this._initialized = true;\n      result.newItems.forEach((item) => (item.newItem = false));\n    }\n    // We want to expand them once they are rendered.\n    result.newItems.forEach((item) => {\n      this.treeControl.expand(item);\n    });\n    return result;\n  }\n\n  populateParents(position: ElementPosition): void {\n    this.parents = position.reduce((nodes: FlatNode[], index: number) => {\n      let nodePosition = [index];\n      if (nodes.length > 0) {\n        nodePosition = nodes[nodes.length - 1].position.concat(index);\n      }\n      // It's possible selectedNode to be undefined\n      // In this case, we don't want to push it to the list\n      // of parent nodes. Instead, we want to report a warning.\n      const selectedNode = this.dataSource.data.find((item) => item.position.toString() === nodePosition.toString());\n      if (selectedNode) {\n        nodes.push(selectedNode);\n      } else {\n        console.warn('Cant find node for position', nodePosition);\n      }\n      return nodes;\n    }, []);\n    this.setParents.emit(this.parents);\n  }\n\n  @HostListener('document:keydown.ArrowUp', ['$event'])\n  navigateUp(event: KeyboardEvent): void {\n    if (this.isEditingDirectiveState(event)) {\n      return;\n    }\n    event.preventDefault();\n\n    const data = this.dataSource.expandedDataValues;\n    let prevIdx = data.findIndex((e) => this.selectedNode && e.id === this.selectedNode.id) - 1;\n    if (prevIdx < 0) {\n      return;\n    }\n    let prevNode = data[prevIdx];\n    const currentNode = data[prevIdx + 1];\n    if (prevNode.position.length <= currentNode.position.length) {\n      return this.selectAndEnsureVisible(data[prevIdx]);\n    }\n    while (prevIdx >= 0 && parentCollapsed(prevIdx, data, this.treeControl)) {\n      prevIdx--;\n      prevNode = data[prevIdx];\n    }\n    this.selectAndEnsureVisible(data[prevIdx]);\n  }\n\n  @HostListener('document:keydown.ArrowDown', ['$event'])\n  navigateDown(event: KeyboardEvent): void {\n    if (this.isEditingDirectiveState(event)) {\n      return;\n    }\n    event.preventDefault();\n\n    const data = this.dataSource.expandedDataValues;\n    let idx = data.findIndex((e) => this.selectedNode && e.id === this.selectedNode.id);\n    const currentNode = data[idx];\n    if (!this.treeControl.isExpanded(currentNode) && currentNode.expandable) {\n      for (let i = idx + 1; i < data.length; i++) {\n        const node = data[i];\n        if (!isChildOf(node.position, currentNode.position)) {\n          idx = i;\n          break;\n        }\n      }\n    } else {\n      idx++;\n    }\n    if (idx >= data.length) {\n      return;\n    }\n    this.selectAndEnsureVisible(data[idx]);\n  }\n\n  @HostListener('document:keydown.ArrowLeft', ['$event'])\n  collapseCurrent(event: KeyboardEvent): void {\n    if (this.isEditingDirectiveState(event)) {\n      return;\n    }\n    if (!this.selectedNode) {\n      return;\n    }\n    this.treeControl.collapse(this.selectedNode);\n    event.preventDefault();\n  }\n\n  @HostListener('document:keydown.ArrowRight', ['$event'])\n  expandCurrent(event: KeyboardEvent): void {\n    if (this.isEditingDirectiveState(event)) {\n      return;\n    }\n    if (!this.selectedNode) {\n      return;\n    }\n    this.treeControl.expand(this.selectedNode);\n    event.preventDefault();\n  }\n\n  isEditingDirectiveState(event: KeyboardEvent): boolean {\n    return (event.target as Element).tagName === 'INPUT' || !this.selectedNode;\n  }\n\n  isSelected(node: FlatNode): boolean {\n    return !!this.selectedNode && this.selectedNode.id === node.id;\n  }\n\n  isMatched(node: FlatNode): boolean {\n    return this.filterRegex.test(node.name.toLowerCase()) || this.filterRegex.test(node.directives.toLowerCase());\n  }\n\n  handleFilter(filterText: string): void {\n    this.currentlyMatchedIndex = -1;\n\n    try {\n      this.filterRegex = new RegExp(filterText.toLowerCase() || '.^');\n    } catch {\n      this.filterRegex = new RegExp('.^');\n    }\n  }\n\n  private _findMatchedNodes(): number[] {\n    const indexesOfMatchedNodes: number[] = [];\n    for (let i = 0; i < this.dataSource.data.length; i++) {\n      if (this.isMatched(this.dataSource.data[i])) {\n        indexesOfMatchedNodes.push(i);\n      }\n    }\n    return indexesOfMatchedNodes;\n  }\n\n  get hasMatched(): boolean {\n    return this._findMatchedNodes().length > 0;\n  }\n\n  nextMatched(): void {\n    const indexesOfMatchedNodes = this._findMatchedNodes();\n    this.currentlyMatchedIndex = (this.currentlyMatchedIndex + 1) % indexesOfMatchedNodes.length;\n    const indexToSelect = indexesOfMatchedNodes[this.currentlyMatchedIndex];\n    const nodeToSelect = this.dataSource.data[indexToSelect];\n    if (indexToSelect !== undefined) {\n      this.treeControl.expand(nodeToSelect);\n      this.selectAndEnsureVisible(nodeToSelect);\n    }\n    const nodeIsVisible = this.dataSource.expandedDataValues.find((node) => node === nodeToSelect);\n    if (!nodeIsVisible) {\n      this.parents.forEach((parent) => this.treeControl.expand(parent));\n    }\n  }\n\n  prevMatched(): void {\n    const indexesOfMatchedNodes = this._findMatchedNodes();\n    this.currentlyMatchedIndex =\n      (this.currentlyMatchedIndex - 1 + indexesOfMatchedNodes.length) % indexesOfMatchedNodes.length;\n    const indexToSelect = indexesOfMatchedNodes[this.currentlyMatchedIndex];\n    const nodeToSelect = this.dataSource.data[indexToSelect];\n    if (indexToSelect !== undefined) {\n      this.treeControl.expand(nodeToSelect);\n      this.selectAndEnsureVisible(nodeToSelect);\n    }\n    const nodeIsVisible = this.dataSource.expandedDataValues.find((node) => node === nodeToSelect);\n    if (!nodeIsVisible) {\n      this.parents.forEach((parent) => this.treeControl.expand(parent));\n    }\n  }\n\n  highlightNode(position: ElementPosition): void {\n    this._highlightIDinTreeFromElement = null;\n    this.highlightComponent.emit(position);\n  }\n\n  removeHighlight(): void {\n    this.removeComponentHighlight.emit();\n  }\n\n  isHighlighted(node: FlatNode): boolean {\n    return !!this._highlightIDinTreeFromElement && this._highlightIDinTreeFromElement === node.original.component?.id;\n  }\n\n  isElement(node: FlatNode): boolean | null {\n    return node.original.component && node.original.component.isElement;\n  }\n}\n","<mat-card class=\"breadcrumb-card\">\n  <button class=\"scroll-button\" [class.hidden]=\"!showScrollLeftButton\" (click)=\"scroll(-100)\">\n    <mat-icon>\n      more_horiz\n    </mat-icon>\n  </button>\n\n  <div class=\"breadcrumbs\" #breadcrumbs (scroll)=\"updateScrollButtonVisibility$.next()\">\n    <button\n      *ngFor=\"let node of parents; let last = last\"\n      (mouseover)=\"mouseOverNode.emit(node)\"\n      (mouseleave)=\"mouseLeaveNode.emit(node)\"\n      mat-button\n      color=\"primary\"\n      (click)=\"handleSelect.emit(node)\"\n      [class.selected]=\"last\"\n    >\n      {{ node.original.component?.name || node.original.element }}\n    </button>\n  </div>\n\n  <button class=\"scroll-button\" [class.hidden]=\"!showScrollRightButton\" (click)=\"scroll(100)\">\n    <mat-icon>\n      more_horiz\n    </mat-icon>\n  </button>\n</mat-card>\n","import {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  ViewChild,\n} from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport { FlatNode } from '../directive-forest/component-data-source';\n\n@Component({\n  selector: 'ng-breadcrumbs',\n  templateUrl: './breadcrumbs.component.html',\n  styleUrls: ['./breadcrumbs.component.scss'],\n})\nexport class BreadcrumbsComponent implements OnInit, AfterViewInit, OnChanges {\n  @Input() parents: FlatNode[];\n  @Output() handleSelect = new EventEmitter();\n  @Output() mouseOverNode = new EventEmitter();\n  @Output() mouseLeaveNode = new EventEmitter();\n\n  @ViewChild('breadcrumbs') breadcrumbsScrollContent: ElementRef;\n\n  showScrollLeftButton = false;\n  showScrollRightButton = false;\n\n  updateScrollButtonVisibility$ = new Subject<void>();\n\n  ngOnInit(): void {\n    this.updateScrollButtonVisibility$.pipe(debounceTime(100)).subscribe(() => this.updateScrollButtonVisibility());\n  }\n\n  ngAfterViewInit(): void {\n    this.updateScrollButtonVisibility$.next();\n  }\n\n  ngOnChanges(): void {\n    this.updateScrollButtonVisibility$.next();\n  }\n\n  @HostListener('window:resize', ['$event'])\n  onResize(): void {\n    this.updateScrollButtonVisibility$.next();\n  }\n\n  scroll(pixels: number): void {\n    this.breadcrumbsScrollContent.nativeElement.scrollLeft += pixels;\n    this.updateScrollButtonVisibility$.next();\n  }\n\n  updateScrollButtonVisibility(): void {\n    const { clientWidth, scrollWidth, scrollLeft } = this.breadcrumbsScrollContent.nativeElement;\n    this.showScrollLeftButton = scrollLeft > 0;\n    this.showScrollRightButton = scrollLeft + clientWidth < scrollWidth;\n  }\n}\n","// tslint:disable\nimport { ElementRef } from '@angular/core';\n\nimport { IArea, IPoint, IAreaSnapshot, ISplitSideAbsorptionCapacity, IAreaAbsorptionCapacity } from './interface';\n\nexport function getPointFromEvent(event: MouseEvent | TouchEvent): IPoint | null {\n  // TouchEvent\n  if ((<TouchEvent>event).changedTouches !== undefined && (<TouchEvent>event).changedTouches.length > 0) {\n    return {\n      x: (<TouchEvent>event).changedTouches[0].clientX,\n      y: (<TouchEvent>event).changedTouches[0].clientY,\n    };\n  }\n  // MouseEvent\n  else if ((<MouseEvent>event).clientX !== undefined && (<MouseEvent>event).clientY !== undefined) {\n    return {\n      x: (<MouseEvent>event).clientX,\n      y: (<MouseEvent>event).clientY,\n    };\n  }\n  return null;\n}\n\nexport function getElementPixelSize(elRef: ElementRef, direction: 'horizontal' | 'vertical'): number {\n  const rect = (<HTMLElement>elRef.nativeElement).getBoundingClientRect();\n\n  return direction === 'horizontal' ? rect.width : rect.height;\n}\n\nexport function getInputBoolean(v: any): boolean {\n  return typeof v === 'boolean' ? v : v === 'false' ? false : true;\n}\n\nexport function getInputPositiveNumber<T>(v: any, defaultValue: T): number | T {\n  if (v === null || v === undefined) return defaultValue;\n\n  v = Number(v);\n  return !isNaN(v) && v >= 0 ? v : defaultValue;\n}\n\nexport function isUserSizesValid(unit: 'percent' | 'pixel', sizes: Array<number | null>): boolean | undefined {\n  // All sizes have to be not null and total should be 100\n  if (unit === 'percent') {\n    const total = sizes.reduce((total, s) => (s !== null ? total! + s : total), 0);\n    return sizes.every((s) => s !== null) && total! > 99.9 && total! < 100.1;\n  }\n\n  // A size at null is mandatory but only one.\n  if (unit === 'pixel') {\n    return sizes.filter((s) => s === null).length === 1;\n  }\n}\n\nexport function getAreaMinSize(a: IArea): null | number {\n  if (a.size === null) {\n    return null;\n  }\n\n  if (a.component.lockSize === true) {\n    return a.size;\n  }\n\n  if (a.component.minSize === null) {\n    return null;\n  }\n\n  if (a.component.minSize > a.size) {\n    return a.size;\n  }\n\n  return a.component.minSize;\n}\n\nexport function getAreaMaxSize(a: IArea): null | number {\n  if (a.size === null) {\n    return null;\n  }\n\n  if (a.component.lockSize === true) {\n    return a.size;\n  }\n\n  if (a.component.maxSize === null) {\n    return null;\n  }\n\n  if (a.component.maxSize < a.size) {\n    return a.size;\n  }\n\n  return a.component.maxSize;\n}\n\nexport function getGutterSideAbsorptionCapacity(\n  unit: 'percent' | 'pixel',\n  sideAreas: Array<IAreaSnapshot>,\n  pixels: number,\n  allAreasSizePixel: number\n): ISplitSideAbsorptionCapacity {\n  return sideAreas.reduce(\n    (acc, area) => {\n      const res = getAreaAbsorptionCapacity(unit, area, acc.remain, allAreasSizePixel);\n      (acc.list as any).push(res);\n      acc.remain = res!.pixelRemain;\n      return acc;\n    },\n    { remain: pixels, list: [] }\n  );\n}\n\nfunction getAreaAbsorptionCapacity(\n  unit: 'percent' | 'pixel',\n  areaSnapshot: IAreaSnapshot,\n  pixels: number,\n  allAreasSizePixel: number\n): IAreaAbsorptionCapacity | undefined {\n  // No pain no gain\n  if (pixels === 0) {\n    return {\n      areaSnapshot,\n      pixelAbsorb: 0,\n      percentAfterAbsorption: areaSnapshot.sizePercentAtStart,\n      pixelRemain: 0,\n    };\n  }\n\n  // Area start at zero and need to be reduced, not possible\n  if (areaSnapshot.sizePixelAtStart === 0 && pixels < 0) {\n    return {\n      areaSnapshot,\n      pixelAbsorb: 0,\n      percentAfterAbsorption: 0,\n      pixelRemain: pixels,\n    };\n  }\n\n  if (unit === 'percent') {\n    return getAreaAbsorptionCapacityPercent(areaSnapshot, pixels, allAreasSizePixel);\n  }\n\n  if (unit === 'pixel') {\n    return getAreaAbsorptionCapacityPixel(areaSnapshot, pixels, allAreasSizePixel);\n  }\n}\n\nfunction getAreaAbsorptionCapacityPercent(\n  areaSnapshot: IAreaSnapshot,\n  pixels: number,\n  allAreasSizePixel: number\n): IAreaAbsorptionCapacity | undefined {\n  const tempPixelSize = areaSnapshot.sizePixelAtStart + pixels;\n  const tempPercentSize = (tempPixelSize / allAreasSizePixel) * 100;\n\n  // ENLARGE AREA\n\n  if (pixels > 0) {\n    // If maxSize & newSize bigger than it > absorb to max and return remaining pixels\n    if (areaSnapshot.area.maxSize !== null && tempPercentSize > areaSnapshot.area.maxSize) {\n      // Use area.area.maxSize as newPercentSize and return calculate pixels remaining\n      const maxSizePixel = (areaSnapshot.area.maxSize / 100) * allAreasSizePixel;\n      return {\n        areaSnapshot,\n        pixelAbsorb: maxSizePixel,\n        percentAfterAbsorption: areaSnapshot.area.maxSize,\n        pixelRemain: areaSnapshot.sizePixelAtStart + pixels - maxSizePixel,\n      };\n    }\n    return {\n      areaSnapshot,\n      pixelAbsorb: pixels,\n      percentAfterAbsorption: tempPercentSize > 100 ? 100 : tempPercentSize,\n      pixelRemain: 0,\n    };\n  }\n\n  // REDUCE AREA\n  else if (pixels < 0) {\n    // If minSize & newSize smaller than it > absorb to min and return remaining pixels\n    if (areaSnapshot.area.minSize !== null && tempPercentSize < areaSnapshot.area.minSize) {\n      // Use area.area.minSize as newPercentSize and return calculate pixels remaining\n      const minSizePixel = (areaSnapshot.area.minSize / 100) * allAreasSizePixel;\n      return {\n        areaSnapshot,\n        pixelAbsorb: minSizePixel,\n        percentAfterAbsorption: areaSnapshot.area.minSize,\n        pixelRemain: areaSnapshot.sizePixelAtStart + pixels - minSizePixel,\n      };\n    }\n    // If reduced under zero > return remaining pixels\n    else if (tempPercentSize < 0) {\n      // Use 0 as newPercentSize and return calculate pixels remaining\n      return {\n        areaSnapshot,\n        pixelAbsorb: -areaSnapshot.sizePixelAtStart,\n        percentAfterAbsorption: 0,\n        pixelRemain: pixels + areaSnapshot.sizePixelAtStart,\n      };\n    }\n    return {\n      areaSnapshot,\n      pixelAbsorb: pixels,\n      percentAfterAbsorption: tempPercentSize,\n      pixelRemain: 0,\n    };\n  }\n}\n\nfunction getAreaAbsorptionCapacityPixel(\n  areaSnapshot: IAreaSnapshot,\n  pixels: number,\n  containerSizePixel: number\n): IAreaAbsorptionCapacity | undefined {\n  const tempPixelSize = areaSnapshot.sizePixelAtStart + pixels;\n\n  // ENLARGE AREA\n\n  if (pixels > 0) {\n    // If maxSize & newSize bigger than it > absorb to max and return remaining pixels\n    if (areaSnapshot.area.maxSize !== null && tempPixelSize > areaSnapshot.area.maxSize) {\n      return {\n        areaSnapshot,\n        pixelAbsorb: areaSnapshot.area.maxSize - areaSnapshot.sizePixelAtStart,\n        percentAfterAbsorption: -1,\n        pixelRemain: tempPixelSize - areaSnapshot.area.maxSize,\n      };\n    }\n    return {\n      areaSnapshot,\n      pixelAbsorb: pixels,\n      percentAfterAbsorption: -1,\n      pixelRemain: 0,\n    };\n  }\n\n  // REDUCE AREA\n  else if (pixels < 0) {\n    // If minSize & newSize smaller than it > absorb to min and return remaining pixels\n    if (areaSnapshot.area.minSize !== null && tempPixelSize < areaSnapshot.area.minSize) {\n      return {\n        areaSnapshot,\n        pixelAbsorb: areaSnapshot.area.minSize + pixels - tempPixelSize,\n        percentAfterAbsorption: -1,\n        pixelRemain: tempPixelSize - areaSnapshot.area.minSize,\n      };\n    }\n    // If reduced under zero > return remaining pixels\n    else if (tempPixelSize < 0) {\n      return {\n        areaSnapshot,\n        pixelAbsorb: -areaSnapshot.sizePixelAtStart,\n        percentAfterAbsorption: -1,\n        pixelRemain: pixels + areaSnapshot.sizePixelAtStart,\n      };\n    }\n    return {\n      areaSnapshot,\n      pixelAbsorb: pixels,\n      percentAfterAbsorption: -1,\n      pixelRemain: 0,\n    };\n  }\n}\n\nexport function updateAreaSize(unit: 'percent' | 'pixel', item: IAreaAbsorptionCapacity) {\n  if (unit === 'percent') {\n    item.areaSnapshot.area.size = item.percentAfterAbsorption;\n  } else if (unit === 'pixel') {\n    // Update size except for the wildcard size area\n    if (item.areaSnapshot.area.size !== null) {\n      item.areaSnapshot.area.size = item.areaSnapshot.sizePixelAtStart + item.pixelAbsorb;\n    }\n  }\n}\n","// tslint:disable\nimport {\n  Component,\n  Input,\n  Output,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Renderer2,\n  AfterViewInit,\n  OnDestroy,\n  ElementRef,\n  NgZone,\n  ViewChildren,\n  QueryList,\n  EventEmitter,\n} from '@angular/core';\nimport { Observable, Subscriber, Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nimport { IArea, IPoint, ISplitSnapshot, IAreaSnapshot, IOutputData, IOutputAreaSizes } from '../interface';\nimport { SplitAreaDirective } from '../directive/splitArea.directive';\nimport {\n  getInputPositiveNumber,\n  getInputBoolean,\n  isUserSizesValid,\n  getAreaMinSize,\n  getAreaMaxSize,\n  getPointFromEvent,\n  getElementPixelSize,\n  getGutterSideAbsorptionCapacity,\n  updateAreaSize,\n} from '../utils';\n\n/**\n * angular-split\n *\n *\n *  PERCENT MODE ([unit]=\"'percent'\")\n *  ___________________________________________________________________________________________\n * |       A       [g1]       B       [g2]       C       [g3]       D       [g4]       E       |\n * |-------------------------------------------------------------------------------------------|\n * |       20                 30                 20                 15                 15      | <-- [size]=\"x\"\n * |               10px               10px               10px               10px               | <-- [gutterSize]=\"10\"\n * |calc(20% - 8px)    calc(30% - 12px)   calc(20% - 8px)    calc(15% - 6px)    calc(15% - 6px)| <-- CSS flex-basis property (with flex-grow&shrink at 0)\n * |     152px              228px              152px              114px              114px     | <-- el.getBoundingClientRect().width\n * |___________________________________________________________________________________________|\n *                                                                                 800px         <-- el.getBoundingClientRect().width\n *  flex-basis = calc( { area.size }% - { area.size/100 * nbGutter*gutterSize }px );\n *\n *\n *  PIXEL MODE ([unit]=\"'pixel'\")\n *  ___________________________________________________________________________________________\n * |       A       [g1]       B       [g2]       C       [g3]       D       [g4]       E       |\n * |-------------------------------------------------------------------------------------------|\n * |      100                250                 *                 150                100      | <-- [size]=\"y\"\n * |               10px               10px               10px               10px               | <-- [gutterSize]=\"10\"\n * |   0 0 100px          0 0 250px           1 1 auto          0 0 150px          0 0 100px   | <-- CSS flex property (flex-grow/flex-shrink/flex-basis)\n * |     100px              250px              200px              150px              100px     | <-- el.getBoundingClientRect().width\n * |___________________________________________________________________________________________|\n *                                                                                 800px         <-- el.getBoundingClientRect().width\n *\n */\n\n@Component({\n  selector: 'as-split',\n  exportAs: 'asSplit',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: [`./split.component.scss`],\n  template: ` <ng-content></ng-content>\n    <ng-template ngFor [ngForOf]=\"displayedAreas\" let-index=\"index\" let-last=\"last\">\n      <div\n        *ngIf=\"last === false\"\n        #gutterEls\n        class=\"as-split-gutter\"\n        [style.flex-basis.px]=\"gutterSize\"\n        [style.order]=\"index * 2 + 1\"\n        (mousedown)=\"startDragging($event, index * 2 + 1, index + 1)\"\n        (touchstart)=\"startDragging($event, index * 2 + 1, index + 1)\"\n        (mouseup)=\"clickGutter($event, index + 1)\"\n        (touchend)=\"clickGutter($event, index + 1)\"\n      >\n        <div class=\"as-split-gutter-icon\"></div>\n      </div>\n    </ng-template>`,\n})\nexport class SplitComponent implements AfterViewInit, OnDestroy {\n  private _direction: 'horizontal' | 'vertical' = 'horizontal';\n\n  @Input() set direction(v: 'horizontal' | 'vertical') {\n    this._direction = v === 'vertical' ? 'vertical' : 'horizontal';\n\n    this.renderer.addClass(this.elRef.nativeElement, `as-${this._direction}`);\n    this.renderer.removeClass(\n      this.elRef.nativeElement,\n      `as-${this._direction === 'vertical' ? 'horizontal' : 'vertical'}`\n    );\n\n    this.build(false, false);\n  }\n\n  get direction(): 'horizontal' | 'vertical' {\n    return this._direction;\n  }\n\n  ////\n\n  private _unit: 'percent' | 'pixel' = 'percent';\n\n  @Input() set unit(v: 'percent' | 'pixel') {\n    this._unit = v === 'pixel' ? 'pixel' : 'percent';\n\n    this.renderer.addClass(this.elRef.nativeElement, `as-${this._unit}`);\n    this.renderer.removeClass(this.elRef.nativeElement, `as-${this._unit === 'pixel' ? 'percent' : 'pixel'}`);\n\n    this.build(false, true);\n  }\n\n  get unit(): 'percent' | 'pixel' {\n    return this._unit;\n  }\n\n  ////\n\n  private _gutterSize: number = 11;\n\n  @Input() set gutterSize(v: number | null) {\n    this._gutterSize = getInputPositiveNumber(v, 11);\n\n    this.build(false, false);\n  }\n\n  get gutterSize(): number | null {\n    return this._gutterSize;\n  }\n\n  ////\n\n  private _gutterStep: number = 1;\n\n  @Input() set gutterStep(v: number) {\n    this._gutterStep = getInputPositiveNumber(v, 1);\n  }\n\n  get gutterStep(): number {\n    return this._gutterStep;\n  }\n\n  ////\n\n  private _restrictMove: boolean = false;\n\n  @Input() set restrictMove(v: boolean) {\n    this._restrictMove = getInputBoolean(v);\n  }\n\n  get restrictMove(): boolean {\n    return this._restrictMove;\n  }\n\n  ////\n\n  private _useTransition: boolean = false;\n\n  @Input() set useTransition(v: boolean) {\n    this._useTransition = getInputBoolean(v);\n\n    if (this._useTransition) this.renderer.addClass(this.elRef.nativeElement, 'as-transition');\n    else this.renderer.removeClass(this.elRef.nativeElement, 'as-transition');\n  }\n\n  get useTransition(): boolean {\n    return this._useTransition;\n  }\n\n  ////\n\n  private _disabled: boolean = false;\n\n  @Input() set disabled(v: boolean) {\n    this._disabled = getInputBoolean(v);\n\n    if (this._disabled) this.renderer.addClass(this.elRef.nativeElement, 'as-disabled');\n    else this.renderer.removeClass(this.elRef.nativeElement, 'as-disabled');\n  }\n\n  get disabled(): boolean {\n    return this._disabled;\n  }\n\n  ////\n\n  private _dir: 'ltr' | 'rtl' = 'ltr';\n\n  @Input() set dir(v: 'ltr' | 'rtl') {\n    this._dir = v === 'rtl' ? 'rtl' : 'ltr';\n\n    this.renderer.setAttribute(this.elRef.nativeElement, 'dir', this._dir);\n  }\n\n  get dir(): 'ltr' | 'rtl' {\n    return this._dir;\n  }\n\n  ////\n\n  private _gutterDblClickDuration: number = 0;\n\n  @Input() set gutterDblClickDuration(v: number) {\n    this._gutterDblClickDuration = getInputPositiveNumber(v, 0);\n  }\n\n  get gutterDblClickDuration(): number {\n    return this._gutterDblClickDuration;\n  }\n\n  ////\n\n  @Output() dragStart = new EventEmitter<IOutputData>(false);\n  @Output() dragEnd = new EventEmitter<IOutputData>(false);\n  @Output() gutterClick = new EventEmitter<IOutputData>(false);\n  @Output() gutterDblClick = new EventEmitter<IOutputData>(false);\n\n  private transitionEndSubscriber: Subscriber<IOutputAreaSizes>;\n  @Output() get transitionEnd(): Observable<IOutputAreaSizes> {\n    return new Observable((subscriber) => (this.transitionEndSubscriber = subscriber)).pipe(\n      debounceTime<IOutputAreaSizes>(20)\n    );\n  }\n\n  private dragProgressSubject: Subject<IOutputData> = new Subject();\n  dragProgress$: Observable<IOutputData> = this.dragProgressSubject.asObservable();\n\n  ////\n\n  private isDragging: boolean = false;\n  private dragListeners: Array<Function> = [];\n  private snapshot: ISplitSnapshot | null = null;\n  private startPoint: IPoint | null = null;\n  private endPoint: IPoint | null = null;\n\n  public readonly displayedAreas: Array<IArea> = [];\n  private readonly hidedAreas: Array<IArea> = [];\n\n  @ViewChildren('gutterEls') private gutterEls: QueryList<ElementRef>;\n\n  constructor(\n    private ngZone: NgZone,\n    private elRef: ElementRef,\n    private cdRef: ChangeDetectorRef,\n    private renderer: Renderer2\n  ) {\n    // To force adding default class, could be override by user @Input() or not\n    this.direction = this._direction;\n  }\n\n  public ngAfterViewInit() {\n    this.ngZone.runOutsideAngular(() => {\n      // To avoid transition at first rendering\n      setTimeout(() => this.renderer.addClass(this.elRef.nativeElement, 'as-init'));\n    });\n  }\n\n  private getNbGutters(): number {\n    return this.displayedAreas.length === 0 ? 0 : this.displayedAreas.length - 1;\n  }\n\n  public addArea(component: SplitAreaDirective): void {\n    const newArea: IArea = {\n      component,\n      order: 0,\n      size: 0,\n      minSize: null,\n      maxSize: null,\n    };\n\n    if (component.visible === true) {\n      this.displayedAreas.push(newArea);\n\n      this.build(true, true);\n    } else {\n      this.hidedAreas.push(newArea);\n    }\n  }\n\n  public removeArea(component: SplitAreaDirective): void {\n    if (this.displayedAreas.some((a) => a.component === component)) {\n      const area = this.displayedAreas.find((a) => a.component === component);\n      this.displayedAreas.splice(this.displayedAreas.indexOf(area!), 1);\n\n      this.build(true, true);\n    } else if (this.hidedAreas.some((a) => a.component === component)) {\n      const area = this.hidedAreas.find((a) => a.component === component);\n      this.hidedAreas.splice(this.hidedAreas.indexOf(area!), 1);\n    }\n  }\n\n  public updateArea(component: SplitAreaDirective, resetOrders: boolean, resetSizes: boolean): void {\n    if (component.visible === true) {\n      this.build(resetOrders, resetSizes);\n    }\n  }\n\n  public showArea(component: SplitAreaDirective): void {\n    const area = this.hidedAreas.find((a) => a.component === component);\n    if (area === undefined) {\n      return;\n    }\n\n    const areas = this.hidedAreas.splice(this.hidedAreas.indexOf(area), 1);\n    this.displayedAreas.push(...areas);\n\n    this.build(true, true);\n  }\n\n  public hideArea(comp: SplitAreaDirective): void {\n    const area = this.displayedAreas.find((a) => a.component === comp);\n    if (area === undefined) {\n      return;\n    }\n\n    const areas = this.displayedAreas.splice(this.displayedAreas.indexOf(area), 1);\n    areas.forEach((area) => {\n      area.order = 0;\n      area.size = 0;\n    });\n    this.hidedAreas.push(...areas);\n\n    this.build(true, true);\n  }\n\n  public getVisibleAreaSizes(): IOutputAreaSizes {\n    return this.displayedAreas.map((a) => (a.size === null ? '*' : a.size));\n  }\n\n  public setVisibleAreaSizes(sizes: IOutputAreaSizes): boolean {\n    if (sizes.length !== this.displayedAreas.length) {\n      return false;\n    }\n\n    const formatedSizes = sizes.map((s) => getInputPositiveNumber(s, null));\n    const isValid = isUserSizesValid(this.unit, formatedSizes);\n\n    if (isValid === false) {\n      return false;\n    }\n\n    // @ts-ignore\n    this.displayedAreas.forEach((area, i) => (area.component._size = formatedSizes[i]));\n\n    this.build(false, true);\n    return true;\n  }\n\n  private build(resetOrders: boolean, resetSizes: boolean): void {\n    this.stopDragging();\n\n    // ¤ AREAS ORDER\n\n    if (resetOrders === true) {\n      // If user provided 'order' for each area, use it to sort them.\n      if (this.displayedAreas.every((a) => a.component.order !== null)) {\n        this.displayedAreas.sort((a, b) => <number>a.component.order - <number>b.component.order);\n      }\n\n      // Then set real order with multiples of 2, numbers between will be used by gutters.\n      this.displayedAreas.forEach((area, i) => {\n        area.order = i * 2;\n        area.component.setStyleOrder(area.order);\n      });\n    }\n\n    // ¤ AREAS SIZE\n\n    if (resetSizes === true) {\n      const useUserSizes = isUserSizesValid(\n        this.unit,\n        this.displayedAreas.map((a) => a.component.size)\n      );\n\n      switch (this.unit) {\n        case 'percent': {\n          const defaultSize = 100 / this.displayedAreas.length;\n\n          this.displayedAreas.forEach((area) => {\n            area.size = useUserSizes ? <number>area.component.size : defaultSize;\n            area.minSize = getAreaMinSize(area);\n            area.maxSize = getAreaMaxSize(area);\n          });\n          break;\n        }\n        case 'pixel': {\n          if (useUserSizes) {\n            this.displayedAreas.forEach((area) => {\n              area.size = area.component.size;\n              area.minSize = getAreaMinSize(area);\n              area.maxSize = getAreaMaxSize(area);\n            });\n          } else {\n            const wildcardSizeAreas = this.displayedAreas.filter((a) => a.component.size === null);\n\n            // No wildcard area > Need to select one arbitrarily > first\n            if (wildcardSizeAreas.length === 0 && this.displayedAreas.length > 0) {\n              this.displayedAreas.forEach((area, i) => {\n                area.size = i === 0 ? null : area.component.size;\n                area.minSize = i === 0 ? null : getAreaMinSize(area);\n                area.maxSize = i === 0 ? null : getAreaMaxSize(area);\n              });\n            }\n            // More than one wildcard area > Need to keep only one arbitrarly > first\n            else if (wildcardSizeAreas.length > 1) {\n              let alreadyGotOne = false;\n              this.displayedAreas.forEach((area) => {\n                if (area.component.size === null) {\n                  if (alreadyGotOne === false) {\n                    area.size = null;\n                    area.minSize = null;\n                    area.maxSize = null;\n                    alreadyGotOne = true;\n                  } else {\n                    area.size = 100;\n                    area.minSize = null;\n                    area.maxSize = null;\n                  }\n                } else {\n                  area.size = area.component.size;\n                  area.minSize = getAreaMinSize(area);\n                  area.maxSize = getAreaMaxSize(area);\n                }\n              });\n            }\n          }\n          break;\n        }\n      }\n    }\n\n    this.refreshStyleSizes();\n    this.cdRef.markForCheck();\n  }\n\n  private refreshStyleSizes(): void {\n    ///////////////////////////////////////////\n    // PERCENT MODE\n    if (this.unit === 'percent') {\n      // Only one area > flex-basis 100%\n      if (this.displayedAreas.length === 1) {\n        this.displayedAreas[0].component.setStyleFlex(0, 0, `100%`, false, false);\n      }\n      // Multiple areas > use each percent basis\n      else {\n        const sumGutterSize = this.getNbGutters() * this.gutterSize!;\n\n        this.displayedAreas.forEach((area) => {\n          area.component.setStyleFlex(\n            0,\n            0,\n            `calc( ${area.size}% - ${(<number>area.size / 100) * sumGutterSize}px )`,\n            area.minSize !== null && area.minSize === area.size ? true : false,\n            area.maxSize !== null && area.maxSize === area.size ? true : false\n          );\n        });\n      }\n    }\n    ///////////////////////////////////////////\n    // PIXEL MODE\n    else if (this.unit === 'pixel') {\n      this.displayedAreas.forEach((area) => {\n        // Area with wildcard size\n        if (area.size === null) {\n          if (this.displayedAreas.length === 1) {\n            area.component.setStyleFlex(1, 1, `100%`, false, false);\n          } else {\n            area.component.setStyleFlex(1, 1, `auto`, false, false);\n          }\n        }\n        // Area with pixel size\n        else {\n          // Only one area > flex-basis 100%\n          if (this.displayedAreas.length === 1) {\n            area.component.setStyleFlex(0, 0, `100%`, false, false);\n          }\n          // Multiple areas > use each pixel basis\n          else {\n            area.component.setStyleFlex(\n              0,\n              0,\n              `${area.size}px`,\n              area.minSize !== null && area.minSize === area.size ? true : false,\n              area.maxSize !== null && area.maxSize === area.size ? true : false\n            );\n          }\n        }\n      });\n    }\n  }\n\n  _clickTimeout: number | null = null;\n\n  public clickGutter(event: MouseEvent | TouchEvent, gutterNum: number): void {\n    const tempPoint = getPointFromEvent(event);\n\n    // Be sure mouseup/touchend happened at same point as mousedown/touchstart to trigger click/dblclick\n    if (this.startPoint && this.startPoint.x === tempPoint!.x && this.startPoint.y === tempPoint!.y) {\n      // If timeout in progress and new click > clearTimeout & dblClickEvent\n      if (this._clickTimeout !== null) {\n        window.clearTimeout(this._clickTimeout);\n        this._clickTimeout = null;\n        this.notify('dblclick', gutterNum);\n        this.stopDragging();\n      }\n      // Else start timeout to call clickEvent at end\n      else {\n        this._clickTimeout = window.setTimeout(() => {\n          this._clickTimeout = null;\n          this.notify('click', gutterNum);\n          this.stopDragging();\n        }, this.gutterDblClickDuration);\n      }\n    }\n  }\n\n  public startDragging(event: MouseEvent | TouchEvent, gutterOrder: number, gutterNum: number): void {\n    event.preventDefault();\n    event.stopPropagation();\n\n    this.startPoint = getPointFromEvent(event);\n    if (this.startPoint === null || this.disabled === true) {\n      return;\n    }\n\n    this.snapshot = {\n      gutterNum,\n      lastSteppedOffset: 0,\n      allAreasSizePixel: getElementPixelSize(this.elRef, this.direction) - this.getNbGutters() * this.gutterSize!,\n      allInvolvedAreasSizePercent: 100,\n      areasBeforeGutter: [],\n      areasAfterGutter: [],\n    };\n\n    this.displayedAreas.forEach((area) => {\n      const areaSnapshot: IAreaSnapshot = {\n        area,\n        sizePixelAtStart: getElementPixelSize(area.component.elRef, this.direction),\n        sizePercentAtStart: (this.unit === 'percent' ? area.size : -1) as number, // If pixel mode, anyway, will not be used.\n      };\n\n      if (area.order < gutterOrder) {\n        if (this.restrictMove === true) {\n          this.snapshot!.areasBeforeGutter = [areaSnapshot];\n        } else {\n          this.snapshot!.areasBeforeGutter.unshift(areaSnapshot);\n        }\n      } else if (area.order > gutterOrder) {\n        if (this.restrictMove === true) {\n          if (this.snapshot!.areasAfterGutter.length === 0) this.snapshot!.areasAfterGutter = [areaSnapshot];\n        } else {\n          this.snapshot!.areasAfterGutter.push(areaSnapshot);\n        }\n      }\n    });\n\n    this.snapshot.allInvolvedAreasSizePercent = [\n      ...this.snapshot.areasBeforeGutter,\n      ...this.snapshot.areasAfterGutter,\n    ].reduce((t, a) => t + a.sizePercentAtStart, 0);\n\n    if (this.snapshot.areasBeforeGutter.length === 0 || this.snapshot.areasAfterGutter.length === 0) {\n      return;\n    }\n\n    this.dragListeners.push(this.renderer.listen('document', 'mouseup', this.stopDragging.bind(this)));\n    this.dragListeners.push(this.renderer.listen('document', 'touchend', this.stopDragging.bind(this)));\n    this.dragListeners.push(this.renderer.listen('document', 'touchcancel', this.stopDragging.bind(this)));\n\n    this.ngZone.runOutsideAngular(() => {\n      this.dragListeners.push(this.renderer.listen('document', 'mousemove', this.dragEvent.bind(this)));\n      this.dragListeners.push(this.renderer.listen('document', 'touchmove', this.dragEvent.bind(this)));\n    });\n\n    this.displayedAreas.forEach((area) => area.component.lockEvents());\n\n    this.isDragging = true;\n    this.renderer.addClass(this.elRef.nativeElement, 'as-dragging');\n    this.renderer.addClass(this.gutterEls.toArray()[this.snapshot.gutterNum - 1].nativeElement, 'as-dragged');\n\n    this.notify('start', this.snapshot.gutterNum);\n  }\n\n  private dragEvent(event: MouseEvent | TouchEvent): void {\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (this._clickTimeout !== null) {\n      window.clearTimeout(this._clickTimeout);\n      this._clickTimeout = null;\n    }\n\n    if (this.isDragging === false) {\n      return;\n    }\n\n    this.endPoint = getPointFromEvent(event);\n    if (this.endPoint === null) {\n      return;\n    }\n\n    // Calculate steppedOffset\n\n    let offset =\n      this.direction === 'horizontal' ? this.startPoint!.x - this.endPoint.x : this.startPoint!.y - this.endPoint.y;\n    if (this.dir === 'rtl') {\n      offset = -offset;\n    }\n    const steppedOffset = Math.round(offset / this.gutterStep) * this.gutterStep;\n\n    if (steppedOffset === this.snapshot!.lastSteppedOffset) {\n      return;\n    }\n\n    this.snapshot!.lastSteppedOffset = steppedOffset;\n\n    // Need to know if each gutter side areas could reacts to steppedOffset\n\n    let areasBefore = getGutterSideAbsorptionCapacity(\n      this.unit,\n      this.snapshot!.areasBeforeGutter,\n      -steppedOffset,\n      this.snapshot!.allAreasSizePixel\n    );\n    let areasAfter = getGutterSideAbsorptionCapacity(\n      this.unit,\n      this.snapshot!.areasAfterGutter,\n      steppedOffset,\n      this.snapshot!.allAreasSizePixel\n    );\n\n    // Each gutter side areas can't absorb all offset\n    if (areasBefore.remain !== 0 && areasAfter.remain !== 0) {\n      if (Math.abs(areasBefore.remain) === Math.abs(areasAfter.remain)) {\n      } else if (Math.abs(areasBefore.remain) > Math.abs(areasAfter.remain)) {\n        areasAfter = getGutterSideAbsorptionCapacity(\n          this.unit,\n          this.snapshot!.areasAfterGutter,\n          steppedOffset + areasBefore.remain,\n          this.snapshot!.allAreasSizePixel\n        );\n      } else {\n        areasBefore = getGutterSideAbsorptionCapacity(\n          this.unit,\n          this.snapshot!.areasBeforeGutter,\n          -(steppedOffset - areasAfter.remain),\n          this.snapshot!.allAreasSizePixel\n        );\n      }\n    }\n    // Areas before gutter can't absorbs all offset > need to recalculate sizes for areas after gutter.\n    else if (areasBefore.remain !== 0) {\n      areasAfter = getGutterSideAbsorptionCapacity(\n        this.unit,\n        this.snapshot!.areasAfterGutter,\n        steppedOffset + areasBefore.remain,\n        this.snapshot!.allAreasSizePixel\n      );\n    }\n    // Areas after gutter can't absorbs all offset > need to recalculate sizes for areas before gutter.\n    else if (areasAfter.remain !== 0) {\n      areasBefore = getGutterSideAbsorptionCapacity(\n        this.unit,\n        this.snapshot!.areasBeforeGutter,\n        -(steppedOffset - areasAfter.remain),\n        this.snapshot!.allAreasSizePixel\n      );\n    }\n\n    if (this.unit === 'percent') {\n      // Hack because of browser messing up with sizes using calc(X% - Ypx) -> el.getBoundingClientRect()\n      // If not there, playing with gutters makes total going down to 99.99875% then 99.99286%, 99.98986%,..\n      const all = [...areasBefore.list, ...areasAfter.list];\n      const areaToReset = all.find(\n        (a) =>\n          a.percentAfterAbsorption !== 0 &&\n          a.percentAfterAbsorption !== a.areaSnapshot.area.minSize &&\n          a.percentAfterAbsorption !== a.areaSnapshot.area.maxSize\n      );\n\n      if (areaToReset) {\n        areaToReset.percentAfterAbsorption =\n          this.snapshot!.allInvolvedAreasSizePercent -\n          all.filter((a) => a !== areaToReset).reduce((total, a) => total + a.percentAfterAbsorption, 0);\n      }\n    }\n\n    // Now we know areas could absorb steppedOffset, time to really update sizes\n\n    areasBefore.list.forEach((item) => updateAreaSize(this.unit, item));\n    areasAfter.list.forEach((item) => updateAreaSize(this.unit, item));\n\n    this.refreshStyleSizes();\n    this.notify('progress', this.snapshot!.gutterNum);\n  }\n\n  private stopDragging(event?: Event): void {\n    if (event) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    if (this.isDragging === false) {\n      return;\n    }\n\n    this.displayedAreas.forEach((area) => area.component.unlockEvents());\n\n    while (this.dragListeners.length > 0) {\n      const fct = this.dragListeners.pop();\n      if (fct) fct();\n    }\n\n    // Warning: Have to be before \"notify('end')\"\n    // because \"notify('end')\"\" can be linked to \"[size]='x'\" > \"build()\" > \"stopDragging()\"\n    this.isDragging = false;\n\n    // If moved from starting point, notify end\n    if (this.endPoint && (this.startPoint!.x !== this.endPoint.x || this.startPoint!.y !== this.endPoint.y)) {\n      this.notify('end', this.snapshot!.gutterNum);\n    }\n\n    this.renderer.removeClass(this.elRef.nativeElement, 'as-dragging');\n    this.renderer.removeClass(this.gutterEls.toArray()[this.snapshot!.gutterNum - 1].nativeElement, 'as-dragged');\n    this.snapshot = null;\n\n    // Needed to let (click)=\"clickGutter(...)\" event run and verify if mouse moved or not\n    this.ngZone.runOutsideAngular(() => {\n      setTimeout(() => {\n        this.startPoint = null;\n        this.endPoint = null;\n      });\n    });\n  }\n\n  public notify(type: 'start' | 'progress' | 'end' | 'click' | 'dblclick' | 'transitionEnd', gutterNum: number): void {\n    const sizes = this.getVisibleAreaSizes();\n\n    if (type === 'start') {\n      this.dragStart.emit({ gutterNum, sizes });\n    } else if (type === 'end') {\n      this.dragEnd.emit({ gutterNum, sizes });\n    } else if (type === 'click') {\n      this.gutterClick.emit({ gutterNum, sizes });\n    } else if (type === 'dblclick') {\n      this.gutterDblClick.emit({ gutterNum, sizes });\n    } else if (type === 'transitionEnd') {\n      if (this.transitionEndSubscriber) {\n        this.ngZone.run(() => this.transitionEndSubscriber.next(sizes));\n      }\n    } else if (type === 'progress') {\n      // Stay outside zone to allow users do what they want about change detection mechanism.\n      this.dragProgressSubject.next({ gutterNum, sizes });\n    }\n  }\n\n  public ngOnDestroy(): void {\n    this.stopDragging();\n  }\n}\n","// tslint:disable\n\nimport { Directive, Input, ElementRef, Renderer2, OnInit, OnDestroy, NgZone } from '@angular/core';\n\nimport { SplitComponent } from '../component/split.component';\nimport { getInputPositiveNumber, getInputBoolean } from '../utils';\n\n@Directive({\n  selector: 'as-split-area, [as-split-area]',\n  exportAs: 'asSplitArea',\n})\nexport class SplitAreaDirective implements OnInit, OnDestroy {\n  private _order: number | null = null;\n\n  @Input() set order(v: number | null) {\n    this._order = getInputPositiveNumber(v, null);\n\n    this.split.updateArea(this, true, false);\n  }\n\n  get order(): number | null {\n    return this._order;\n  }\n\n  ////\n\n  private _size: number | null = null;\n\n  @Input() set size(v: number | null) {\n    this._size = getInputPositiveNumber(v, null);\n\n    this.split.updateArea(this, false, true);\n  }\n\n  get size(): number | null {\n    return this._size;\n  }\n\n  ////\n\n  private _minSize: number | null = null;\n\n  @Input() set minSize(v: number | null) {\n    this._minSize = getInputPositiveNumber(v, null);\n\n    this.split.updateArea(this, false, true);\n  }\n\n  get minSize(): number | null {\n    return this._minSize;\n  }\n\n  ////\n\n  private _maxSize: number | null = null;\n\n  @Input() set maxSize(v: number | null) {\n    this._maxSize = getInputPositiveNumber(v, null);\n\n    this.split.updateArea(this, false, true);\n  }\n\n  get maxSize(): number | null {\n    return this._maxSize;\n  }\n\n  ////\n\n  private _lockSize: boolean = false;\n\n  @Input() set lockSize(v: boolean) {\n    this._lockSize = getInputBoolean(v);\n\n    this.split.updateArea(this, false, true);\n  }\n\n  get lockSize(): boolean {\n    return this._lockSize;\n  }\n\n  ////\n\n  private _visible: boolean = true;\n\n  @Input() set visible(v: boolean) {\n    this._visible = getInputBoolean(v);\n\n    if (this._visible) {\n      this.split.showArea(this);\n      this.renderer.removeClass(this.elRef.nativeElement, 'as-hidden');\n    } else {\n      this.split.hideArea(this);\n      this.renderer.addClass(this.elRef.nativeElement, 'as-hidden');\n    }\n  }\n\n  get visible(): boolean {\n    return this._visible;\n  }\n\n  ////\n\n  private transitionListener: Function;\n  private readonly lockListeners: Array<Function> = [];\n\n  constructor(\n    private ngZone: NgZone,\n    public elRef: ElementRef,\n    private renderer: Renderer2,\n    private split: SplitComponent\n  ) {\n    this.renderer.addClass(this.elRef.nativeElement, 'as-split-area');\n  }\n\n  public ngOnInit(): void {\n    this.split.addArea(this);\n\n    this.ngZone.runOutsideAngular(() => {\n      this.transitionListener = this.renderer.listen(\n        this.elRef.nativeElement,\n        'transitionend',\n        (event: TransitionEvent) => {\n          // Limit only flex-basis transition to trigger the event\n          if (event.propertyName === 'flex-basis') {\n            this.split.notify('transitionEnd', -1);\n          }\n        }\n      );\n    });\n  }\n\n  public setStyleOrder(value: number): void {\n    this.renderer.setStyle(this.elRef.nativeElement, 'order', value);\n  }\n\n  public setStyleFlex(grow: number, shrink: number, basis: string, isMin: boolean, isMax: boolean): void {\n    // Need 3 separated properties to work on IE11 (https://github.com/angular/flex-layout/issues/323)\n    this.renderer.setStyle(this.elRef.nativeElement, 'flex-grow', grow);\n    this.renderer.setStyle(this.elRef.nativeElement, 'flex-shrink', shrink);\n    this.renderer.setStyle(this.elRef.nativeElement, 'flex-basis', basis);\n\n    if (isMin === true) this.renderer.addClass(this.elRef.nativeElement, 'as-min');\n    else this.renderer.removeClass(this.elRef.nativeElement, 'as-min');\n\n    if (isMax === true) this.renderer.addClass(this.elRef.nativeElement, 'as-max');\n    else this.renderer.removeClass(this.elRef.nativeElement, 'as-max');\n  }\n\n  public lockEvents(): void {\n    this.ngZone.runOutsideAngular(() => {\n      this.lockListeners.push(this.renderer.listen(this.elRef.nativeElement, 'selectstart', (e: Event) => false));\n      this.lockListeners.push(this.renderer.listen(this.elRef.nativeElement, 'dragstart', (e: Event) => false));\n    });\n  }\n\n  public unlockEvents(): void {\n    while (this.lockListeners.length > 0) {\n      const fct = this.lockListeners.pop();\n      if (fct) fct();\n    }\n  }\n\n  public ngOnDestroy(): void {\n    this.unlockEvents();\n\n    if (this.transitionListener) {\n      this.transitionListener();\n    }\n\n    this.split.removeArea(this);\n  }\n}\n","// tslint:disable\nimport { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SplitComponent } from './component/split.component';\nimport { SplitAreaDirective } from './directive/splitArea.directive';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [SplitComponent, SplitAreaDirective],\n  exports: [SplitComponent, SplitAreaDirective],\n})\nexport class AngularSplitModule {\n  public static forRoot(): ModuleWithProviders<AngularSplitModule> {\n    return {\n      ngModule: AngularSplitModule,\n      providers: [],\n    };\n  }\n\n  public static forChild(): ModuleWithProviders<AngularSplitModule> {\n    return {\n      ngModule: AngularSplitModule,\n      providers: [],\n    };\n  }\n}\n","import { DirectivePosition, ElementPosition } from 'protocol';\n\nexport abstract class ApplicationOperations {\n  abstract viewSource(position: ElementPosition): void;\n  abstract selectDomElement(position: ElementPosition): void;\n  abstract inspect(directivePosition: DirectivePosition, objectPath: string[]): void;\n}\n","<div class=\"meta-data-container\">\n  <a\n    mat-button\n    color=\"primary\"\n    *ngIf=\"viewEncapsulation; let viewEncapsulation\"\n    href=\"https://angular.io/api/core/ViewEncapsulation\"\n    target=\"_blank\"\n  >\n    View Encapsulation: <span class=\"meta-data\">{{ viewEncapsulation }}</span>\n  </a>\n  <a\n    mat-button\n    color=\"primary\"\n    *ngIf=\"changeDetectionStrategy; let changeDetectionStrategy\"\n    href=\"https://angular.io/api/core/ChangeDetectionStrategy\"\n    target=\"_blank\"\n  >\n    Change Detection Strategy: <span class=\"meta-data\">{{ changeDetectionStrategy }}</span>\n  </a>\n</div>\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { DirectivePropertyResolver } from '../../../property-resolver/directive-property-resolver';\nimport { ElementPropertyResolver } from '../../../property-resolver/element-property-resolver';\nimport { ComponentType } from 'protocol';\n\n@Component({\n  selector: 'ng-component-metadata',\n  templateUrl: './component-metadata.component.html',\n  styleUrls: ['./component-metadata.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ComponentMetadataComponent {\n  @Input() currentSelectedComponent: ComponentType;\n\n  constructor(private _nestedProps: ElementPropertyResolver) {}\n\n  viewEncapsulationModes = ['Emulated', 'Native', 'None', 'ShadowDom'];\n\n  get controller(): DirectivePropertyResolver | undefined {\n    if (!this.currentSelectedComponent) {\n      return;\n    }\n    return this._nestedProps.getDirectiveController(this.currentSelectedComponent.name);\n  }\n\n  get viewEncapsulation(): string | undefined {\n    const encapsulationIndex = this?.controller?.directiveViewEncapsulation;\n    if (encapsulationIndex !== undefined) {\n      return this.viewEncapsulationModes[encapsulationIndex];\n    }\n  }\n\n  get changeDetectionStrategy(): string | undefined {\n    const onPush = this?.controller?.directiveHasOnPushStrategy;\n    return onPush ? 'On Push' : onPush !== undefined ? 'Default' : undefined;\n  }\n}\n","<ng-container *ngIf=\"currentSelectedElement; else emptyState\">\n  <ng-container *ngIf=\"currentSelectedElement.component; else currentElementIsDOMElement\">\n    <mat-accordion class=\"property-tab-header\">\n      <div>\n        <mat-expansion-panel [hideToggle]=\"true\">\n          <mat-expansion-panel-header collapsedHeight=\"32px\" expandedHeight=\"32px\">\n            <mat-panel-title>\n              <div class=\"element-header\">\n                <div class=\"component-name\">{{ currentSelectedElement.component.name }}</div>\n                <button mat-icon-button (click)=\"handleViewSource($event)\">\n                  <mat-icon>\n                    code\n                  </mat-icon>\n                </button>\n              </div>\n            </mat-panel-title>\n          </mat-expansion-panel-header>\n          <ng-component-metadata [currentSelectedComponent]=\"currentSelectedElement.component\"></ng-component-metadata>\n        </mat-expansion-panel>\n      </div>\n    </mat-accordion>\n  </ng-container>\n  <ng-template #currentElementIsDOMElement>\n    <div class=\"element-header\">\n      <div class=\"element-name\">{{ currentSelectedElement.element }}</div>\n    </div>\n  </ng-template>\n</ng-container>\n\n<ng-template #emptyState>\n  <div class=\"element-header\">\n    <div class=\"element-name\">No selected Element</div>\n  </div>\n</ng-template>\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { IndexedNode } from '../../directive-forest/index-forest';\n\n@Component({\n  templateUrl: './property-tab-header.component.html',\n  selector: 'ng-property-tab-header',\n  styleUrls: ['./property-tab-header.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PropertyTabHeaderComponent {\n  @Input() currentSelectedElement: IndexedNode;\n  @Input() currentDirectives: string[] | undefined;\n  @Output() viewSource = new EventEmitter<void>();\n\n  handleViewSource(event: MouseEvent): void {\n    event.stopPropagation();\n    this.viewSource.emit();\n  }\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'ng-property-view-header',\n  templateUrl: './property-view-header.component.html',\n  styleUrls: ['./property-view-header.component.scss'],\n})\nexport class PropertyViewHeaderComponent {\n  @Input() directive: string;\n}\n","<mat-toolbar>{{ directive }}</mat-toolbar>\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { PropType } from 'protocol';\nimport { FlatNode } from '../../../../../../property-resolver/element-property-resolver';\n\n@Component({\n  selector: 'ng-property-preview',\n  templateUrl: './property-preview.component.html',\n  styleUrls: ['./property-preview.component.scss'],\n})\nexport class PropertyPreviewComponent {\n  @Input() node: FlatNode;\n  @Output() inspect = new EventEmitter<void>();\n\n  get isClickableProp(): boolean {\n    return this.node.prop.descriptor.type === PropType.Function || this.node.prop.descriptor.type === PropType.HTMLNode;\n  }\n}\n","import {\n  AfterViewChecked,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n} from '@angular/core';\n\ntype EditorType = string | number | boolean;\ntype EditorResult = EditorType | Array<EditorType>;\n\nenum PropertyEditorState {\n  Read,\n  Write,\n}\n\nconst parseValue = (value: EditorResult): EditorResult => {\n  try {\n    return JSON.parse(value as any);\n  } catch {\n    return value.toString();\n  }\n};\n\n@Component({\n  templateUrl: './property-editor.component.html',\n  selector: 'ng-property-editor',\n  styleUrls: ['./property-editor.component.scss'],\n})\nexport class PropertyEditorComponent implements AfterViewChecked, OnInit {\n  @Input() key: string;\n  @Input() initialValue: EditorResult;\n  @Output() updateValue = new EventEmitter<EditorResult>();\n\n  readState = PropertyEditorState.Read;\n  writeState = PropertyEditorState.Write;\n\n  valueToSubmit: EditorResult;\n  currentPropertyState = this.readState;\n\n  constructor(private _cd: ChangeDetectorRef, private _elementRef: ElementRef) {}\n\n  ngOnInit(): void {\n    this.valueToSubmit = this.initialValue;\n  }\n\n  ngAfterViewChecked(): void {\n    if (this.currentPropertyState === this.writeState) {\n      this.editor.focus();\n    }\n  }\n\n  accept(): void {\n    const parsed = parseValue(this.valueToSubmit);\n    this.updateValue.emit(parsed);\n    this._transition(this.readState);\n  }\n\n  reject(): void {\n    this.valueToSubmit = this.initialValue;\n    this._transition(this.readState);\n  }\n\n  onClick(): void {\n    if (this.currentPropertyState === this.readState) {\n      this._transition(this.writeState);\n    }\n  }\n\n  onBlur(): void {\n    if (this.currentPropertyState === this.writeState) {\n      this.accept();\n    }\n  }\n\n  get editor(): HTMLInputElement {\n    return this._elementRef.nativeElement.querySelector('input');\n  }\n\n  private _transition(state: PropertyEditorState): void {\n    this.currentPropertyState = state;\n    if (this.currentPropertyState === this.writeState) {\n      this._cd.detectChanges();\n      this.editor.focus();\n      this.editor.select();\n    }\n  }\n}\n","<div class=\"editor\" (click)=\"onClick()\">\n  <span [ngSwitch]=\"currentPropertyState\" class=\"state-container\">\n    <span *ngSwitchCase=\"readState\">\n      <span class=\"editable\">\n        {{ valueToSubmit }}\n      </span>\n    </span>\n    <span *ngSwitchCase=\"writeState\">\n      <input\n        matInput\n        type=\"text\"\n        class=\"editor-input editable\"\n        (mousedown)=\"$event.stopPropagation()\"\n        [(ngModel)]=\"valueToSubmit\"\n        (keydown.enter)=\"accept()\"\n        (keydown.escape)=\"reject()\"\n        (blur)=\"onBlur()\"\n      />\n    </span>\n  </span>\n</div>\n","<span class=\"value\" [class.function]=\"isClickableProp\" (click)=\"isClickableProp && inspect.emit()\">\n  {{ node.prop.descriptor.preview }}\n</span>\n","<mat-tree *ngIf=\"treeControl\" class=\"property-list\" [dataSource]=\"dataSource\" [treeControl]=\"treeControl\">\n  <mat-tree-node matTreeNodePaddingIndent=\"14\" *matTreeNodeDef=\"let node\" matTreeNodePadding>\n    <span class=\"name non-expandable\"> {{ node.prop.name }} </span>:&nbsp;\n    <ng-container *ngIf=\"!node.prop.descriptor.editable; else editable\">\n      <ng-property-preview (inspect)=\"inspect.emit(node)\" [node]=\"node\"></ng-property-preview>\n    </ng-container>\n    <ng-template #editable>\n      <ng-property-editor\n        [key]=\"node.prop.name\"\n        [initialValue]=\"node.prop.descriptor.value || node.prop.descriptor.preview\"\n        (updateValue)=\"handleUpdate(node, $event)\"\n      >\n      </ng-property-editor>\n    </ng-template>\n  </mat-tree-node>\n\n  <mat-tree-node matTreeNodePaddingIndent=\"14\" *matTreeNodeDef=\"let node; when: hasChild\" matTreeNodePadding>\n    <div (click)=\"toggle(node)\">\n      <mat-icon class=\"mat-icon-rtl-mirror\">\n        {{ treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right' }}\n      </mat-icon>\n      &nbsp;\n      <span class=\"name\"> {{ node.prop.name }} </span>:&nbsp;\n      <span class=\"value\">\n        {{ treeControl.isExpanded(node) ? '' : node.prop.descriptor.preview }}\n      </span>\n    </div>\n  </mat-tree-node>\n</mat-tree>\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { PropertyDataSource } from '../../../../../property-resolver/property-data-source';\nimport { FlatNode } from '../../../../../property-resolver/element-property-resolver';\nimport { FlatTreeControl } from '@angular/cdk/tree';\n\n@Component({\n  selector: 'ng-property-view-tree',\n  templateUrl: './property-view-tree.component.html',\n  styleUrls: ['./property-view-tree.component.scss'],\n})\nexport class PropertyViewTreeComponent {\n  @Input() dataSource: PropertyDataSource;\n  @Input() treeControl: FlatTreeControl<FlatNode>;\n  @Output() updateValue = new EventEmitter<any>();\n  @Output() inspect = new EventEmitter<any>();\n\n  hasChild = (_: number, node: FlatNode): boolean => node.expandable;\n\n  toggle(node: FlatNode): void {\n    if (this.treeControl.isExpanded(node)) {\n      this.treeControl.collapse(node);\n      return;\n    }\n    this.expand(node);\n  }\n\n  expand(node: FlatNode): void {\n    const { prop } = node;\n    if (!prop.descriptor.expandable) {\n      return;\n    }\n    this.treeControl.expand(node);\n  }\n\n  handleUpdate(node: FlatNode, newValue: any): void {\n    this.updateValue.emit({\n      node,\n      newValue,\n    });\n  }\n}\n","<mat-accordion cdkDropList (cdkDropListDropped)=\"drop($event)\" *ngIf=\"controlsLoaded\" [multi]=\"true\">\n  <div class=\"mat-accordion-content\" *ngFor=\"let index of categoryOrder\" cdkDrag>\n    <mat-expansion-panel *ngIf=\"!panels[index].hidden\" [expanded]=\"true\">\n      <mat-expansion-panel-header collapsedHeight=\"25px\" expandedHeight=\"25px\">\n        <mat-panel-title>\n          {{ panels[index].title }}\n        </mat-panel-title>\n      </mat-expansion-panel-header>\n      <ng-property-view-tree\n        [dataSource]=\"panels[index].controls.dataSource\"\n        [treeControl]=\"panels[index].controls.treeControl\"\n        (updateValue)=\"updateValue($event)\"\n        (inspect)=\"handleInspect($event)\"\n      ></ng-property-view-tree>\n    </mat-expansion-panel>\n  </div>\n</mat-accordion>\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport {\n  DirectivePropertyResolver,\n  DirectiveTreeData,\n} from '../../../../property-resolver/directive-property-resolver';\nimport { FlatNode } from '../../../../property-resolver/element-property-resolver';\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\nimport { DirectivePosition } from 'protocol';\n\n@Component({\n  selector: 'ng-property-view-body',\n  templateUrl: './property-view-body.component.html',\n  styleUrls: ['./property-view-body.component.scss'],\n})\nexport class PropertyViewBodyComponent {\n  @Input() controller: DirectivePropertyResolver;\n  @Input() directiveInputControls: DirectiveTreeData;\n  @Input() directiveOutputControls: DirectiveTreeData;\n  @Input() directiveStateControls: DirectiveTreeData;\n\n  @Output() inspect = new EventEmitter<{ node: FlatNode; directivePosition: DirectivePosition }>();\n\n  categoryOrder = [0, 1, 2];\n\n  get panels(): { title: string; hidden: boolean; controls: DirectiveTreeData }[] {\n    return [\n      {\n        title: '@Inputs',\n        hidden: this.directiveInputControls.dataSource.data.length === 0,\n        controls: this.directiveInputControls,\n      },\n      {\n        title: '@Outputs',\n        hidden: this.directiveOutputControls.dataSource.data.length === 0,\n        controls: this.directiveOutputControls,\n      },\n      {\n        title: 'Properties',\n        hidden: this.directiveStateControls.dataSource.data.length === 0,\n        controls: this.directiveStateControls,\n      },\n    ];\n  }\n\n  get controlsLoaded(): boolean {\n    return !!this.directiveStateControls && !!this.directiveOutputControls && !!this.directiveInputControls;\n  }\n\n  updateValue({ node, newValue }: { node: FlatNode; newValue: any }): void {\n    this.controller.updateValue(node, newValue);\n  }\n\n  drop(event: CdkDragDrop<any, any>): void {\n    moveItemInArray(this.categoryOrder, event.previousIndex, event.currentIndex);\n  }\n\n  handleInspect(node: FlatNode): void {\n    this.inspect.emit({\n      node,\n      directivePosition: this.controller.directivePosition,\n    });\n  }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { DirectivePropertyResolver, DirectiveTreeData } from '../../../property-resolver/directive-property-resolver';\nimport { ElementPropertyResolver, FlatNode } from '../../../property-resolver/element-property-resolver';\nimport { DirectivePosition } from 'protocol';\n\n@Component({\n  selector: 'ng-property-view',\n  templateUrl: './property-view.component.html',\n  styleUrls: ['./property-view.component.scss'],\n})\nexport class PropertyViewComponent {\n  @Input() directive: string;\n  @Output() inspect = new EventEmitter<{ node: FlatNode; directivePosition: DirectivePosition }>();\n\n  constructor(private _nestedProps: ElementPropertyResolver) {}\n\n  get controller(): DirectivePropertyResolver | undefined {\n    return this._nestedProps.getDirectiveController(this.directive);\n  }\n\n  get directiveInputControls(): DirectiveTreeData | void {\n    return this.controller?.directiveInputControls;\n  }\n\n  get directiveOutputControls(): DirectiveTreeData | void {\n    return this.controller?.directiveOutputControls;\n  }\n\n  get directiveStateControls(): DirectiveTreeData | void {\n    return this.controller?.directiveStateControls;\n  }\n}\n","<ng-container *ngIf=\"currentSelectedElement\">\n  <div *ngFor=\"let directive of getCurrentDirectives()\" class=\"explorer-panel\">\n    <ng-property-view (inspect)=\"inspect.emit($event)\" [directive]=\"directive\"></ng-property-view>\n  </div>\n</ng-container>\n","<ng-property-view-header [directive]=\"directive\"></ng-property-view-header>\n<ng-property-view-body\n  [controller]=\"controller\"\n  [directiveInputControls]=\"directiveInputControls\"\n  [directiveOutputControls]=\"directiveOutputControls\"\n  [directiveStateControls]=\"directiveStateControls\"\n  (inspect)=\"inspect.emit($event)\"\n></ng-property-view-body>\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { IndexedNode } from '../../directive-forest/index-forest';\nimport { FlatNode } from '../../property-resolver/element-property-resolver';\nimport { DirectivePosition } from 'protocol';\n\n@Component({\n  templateUrl: './property-tab-body.component.html',\n  selector: 'ng-property-tab-body',\n  styleUrls: ['./property-tab-body.component.scss'],\n})\nexport class PropertyTabBodyComponent {\n  @Input() currentSelectedElement: IndexedNode | null;\n  @Output() inspect = new EventEmitter<{ node: FlatNode; directivePosition: DirectivePosition }>();\n\n  getCurrentDirectives(): string[] | undefined {\n    if (!this.currentSelectedElement) {\n      return;\n    }\n    const directives = this.currentSelectedElement.directives.map((d) => d.name);\n    if (this.currentSelectedElement.component) {\n      directives.push(this.currentSelectedElement.component.name);\n    }\n    return directives;\n  }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { IndexedNode } from '../directive-forest/index-forest';\nimport { FlatNode } from '../property-resolver/element-property-resolver';\nimport { DirectivePosition } from 'protocol';\n\n@Component({\n  templateUrl: './property-tab.component.html',\n  selector: 'ng-property-tab',\n})\nexport class PropertyTabComponent {\n  @Input() currentSelectedElement: IndexedNode;\n  @Output() viewSource = new EventEmitter<void>();\n  @Output() inspect = new EventEmitter<{ node: FlatNode; directivePosition: DirectivePosition }>();\n}\n","<ng-property-tab-header [currentSelectedElement]=\"currentSelectedElement\" (viewSource)=\"viewSource.emit()\">\n</ng-property-tab-header>\n<ng-property-tab-body (inspect)=\"inspect.emit($event)\" [currentSelectedElement]=\"currentSelectedElement\">\n</ng-property-tab-body>\n","<as-split unit=\"percent\" [direction]=\"splitDirection\" [gutterSize]=\"9\">\n  <as-split-area #directiveForestSplitArea size=\"60\">\n    <as-split direction=\"vertical\" [gutterSize]=\"9\" unit=\"pixel\" [disabled]=\"true\">\n      <as-split-area size=\"*\">\n        <ng-directive-forest\n          (selectNode)=\"handleNodeSelection($event)\"\n          (selectDomElement)=\"handleSelectDomElement($event)\"\n          (setParents)=\"handleSetParents($event)\"\n          (highlightComponent)=\"highlightComponent($event)\"\n          (removeComponentHighlight)=\"removeComponentHighlight()\"\n          (toggleInspector)=\"toggleInspector.emit()\"\n          [forest]=\"forest\"\n          [currentSelectedElement]=\"currentSelectedElement\"\n        ></ng-directive-forest>\n      </as-split-area>\n      <as-split-area size=\"22\">\n        <ng-breadcrumbs\n          (mouseLeaveNode)=\"unhighlight()\"\n          (mouseOverNode)=\"highlight($event)\"\n          *ngIf=\"parents\"\n          (handleSelect)=\"handleSelect($event)\"\n          [parents]=\"parents\"\n        >\n        </ng-breadcrumbs>\n      </as-split-area>\n    </as-split>\n  </as-split-area>\n  <as-split-area size=\"40\" minSize=\"25\">\n    <div class=\"property-tab-wrapper\">\n      <ng-property-tab\n        [currentSelectedElement]=\"currentSelectedElement\"\n        (inspect)=\"inspect($event)\"\n        (viewSource)=\"viewSource()\"\n      ></ng-property-tab>\n    </div>\n  </as-split-area>\n</as-split>\n","import {\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewChild,\n} from '@angular/core';\nimport {\n  MessageBus,\n  Events,\n  DevToolsNode,\n  ComponentExplorerViewQuery,\n  ComponentExplorerView,\n  ElementPosition,\n  PropertyQuery,\n  PropertyQueryTypes,\n  DirectivePosition,\n} from 'protocol';\nimport { IndexedNode } from './directive-forest/index-forest';\nimport { ApplicationOperations } from '../../application-operations';\nimport { ElementPropertyResolver } from './property-resolver/element-property-resolver';\nimport { FlatNode } from './directive-forest/component-data-source';\nimport { FlatNode as PropertyFlatNode } from './property-resolver/element-property-resolver';\nimport { DirectiveForestComponent } from './directive-forest/directive-forest.component';\nimport { constructPathOfKeysToPropertyValue } from './property-resolver/directive-property-resolver';\nimport { BreadcrumbsComponent } from './breadcrumbs/breadcrumbs.component';\nimport { SplitComponent } from '../../vendor/angular-split/public_api';\n\nconst sameDirectives = (a: IndexedNode, b: IndexedNode) => {\n  if ((a.component && !b.component) || (!a.component && b.component)) {\n    return false;\n  }\n  if (a.component && b.component && a.component.id !== b.component.id) {\n    return false;\n  }\n  const aDirectives = new Set(a.directives.map((d) => d.id));\n  for (const dir of b.directives) {\n    if (!aDirectives.has(dir.id)) {\n      return false;\n    }\n  }\n  return true;\n};\n\n@Component({\n  selector: 'ng-directive-explorer',\n  templateUrl: './directive-explorer.component.html',\n  styleUrls: ['./directive-explorer.component.scss'],\n  providers: [\n    {\n      provide: ElementPropertyResolver,\n      useClass: ElementPropertyResolver,\n    },\n  ],\n})\nexport class DirectiveExplorerComponent implements OnInit, OnDestroy {\n  @Output() toggleInspector = new EventEmitter<void>();\n\n  currentSelectedElement: IndexedNode | null = null;\n  forest: DevToolsNode[];\n  splitDirection: 'horizontal' | 'vertical' = 'horizontal';\n\n  @ViewChild(SplitComponent, { static: true, read: ElementRef }) splitElementRef: ElementRef;\n  @ViewChild('directiveForestSplitArea', { static: true, read: ElementRef }) directiveForestSplitArea: ElementRef;\n\n  private _resizeObserver = new ResizeObserver((entries) =>\n    this._ngZone.run(() => {\n      const resizedEntry = entries[0];\n\n      if (resizedEntry.target === this.splitElementRef.nativeElement) {\n        this.splitDirection = resizedEntry.contentRect.width <= 500 ? 'vertical' : 'horizontal';\n      }\n\n      if (!this.breadcrumbs) {\n        return;\n      }\n\n      this.breadcrumbs.updateScrollButtonVisibility();\n    })\n  );\n\n  private _clickedElement: IndexedNode | null = null;\n  private _refreshRetryTimeout: any = null;\n\n  parents: FlatNode[] | null = null;\n\n  @ViewChild(DirectiveForestComponent) directiveForest: DirectiveForestComponent;\n  @ViewChild(BreadcrumbsComponent) breadcrumbs: BreadcrumbsComponent;\n\n  constructor(\n    private _appOperations: ApplicationOperations,\n    private _messageBus: MessageBus<Events>,\n    private _propResolver: ElementPropertyResolver,\n    private _cdr: ChangeDetectorRef,\n    private _ngZone: NgZone\n  ) {}\n\n  ngOnInit(): void {\n    this.subscribeToBackendEvents();\n    this.refresh();\n    this._resizeObserver.observe(this.splitElementRef.nativeElement);\n    this._resizeObserver.observe(this.directiveForestSplitArea.nativeElement);\n  }\n\n  ngOnDestroy(): void {\n    this._resizeObserver.unobserve(this.splitElementRef.nativeElement);\n    this._resizeObserver.unobserve(this.directiveForestSplitArea.nativeElement);\n  }\n\n  handleNodeSelection(node: IndexedNode | null): void {\n    if (node) {\n      // We want to guarantee that we're not reusing any of the previous properties.\n      // That's possible if the user has selected an NgForOf and after that\n      // they select another NgForOf instance. In this case, we don't want to diff the props\n      // we want to render from scratch.\n      if (this._clickedElement && !sameDirectives(this._clickedElement, node)) {\n        this._propResolver.clearProperties();\n      }\n      this._clickedElement = node;\n      this._messageBus.emit('setSelectedComponent', [node.position]);\n      this.refresh();\n    } else {\n      this._clickedElement = this.currentSelectedElement = null;\n    }\n  }\n\n  subscribeToBackendEvents(): void {\n    this._messageBus.on('latestComponentExplorerView', (view: ComponentExplorerView) => {\n      this.forest = view.forest;\n      this.currentSelectedElement = this._clickedElement;\n      if (view.properties && this.currentSelectedElement) {\n        this._propResolver.setProperties(this.currentSelectedElement, view.properties);\n      }\n    });\n\n    this._messageBus.on('componentTreeDirty', () => this.refresh());\n  }\n\n  refresh(): void {\n    const success = this._messageBus.emit('getLatestComponentExplorerView', [this._constructViewQuery()]);\n    // If the event was not throttled, we no longer need to retry.\n    if (success) {\n      clearTimeout(this._refreshRetryTimeout);\n      this._refreshRetryTimeout = null;\n      return;\n    }\n    // If the event was throttled and we haven't scheduled a retry yet.\n    if (!this._refreshRetryTimeout) {\n      this._refreshRetryTimeout = setTimeout(() => this.refresh(), 500);\n    }\n  }\n\n  viewSource(): void {\n    if (!this.currentSelectedElement) {\n      return;\n    }\n    this._appOperations.viewSource(this.currentSelectedElement.position);\n  }\n\n  handleSelectDomElement(node: IndexedNode): void {\n    this._appOperations.selectDomElement(node.position);\n  }\n\n  highlight(node: FlatNode): void {\n    if (!node.original.component) {\n      return;\n    }\n    this._messageBus.emit('createHighlightOverlay', [node.position]);\n  }\n\n  unhighlight(): void {\n    this._messageBus.emit('removeHighlightOverlay');\n  }\n\n  private _constructViewQuery(): ComponentExplorerViewQuery | undefined {\n    if (!this._clickedElement) {\n      return;\n    }\n    return {\n      selectedElement: this._clickedElement.position,\n      propertyQuery: this._getPropertyQuery(),\n    };\n  }\n\n  private _getPropertyQuery(): PropertyQuery {\n    // Here we handle the case when a given element has already been selected.\n    // We check if we're dealing with the same instance (i.e., if we have the same\n    // set of directives and component on it), if we do, we want to get the same\n    // set of properties which are already expanded.\n    if (\n      !this._clickedElement ||\n      !this.currentSelectedElement ||\n      !sameDirectives(this._clickedElement, this.currentSelectedElement)\n    ) {\n      return {\n        type: PropertyQueryTypes.All,\n      };\n    }\n    return {\n      type: PropertyQueryTypes.Specified,\n      properties: this._propResolver.getExpandedProperties() || {},\n    };\n  }\n\n  highlightComponent(position: ElementPosition): void {\n    this._messageBus.emit('createHighlightOverlay', [position]);\n  }\n\n  removeComponentHighlight(): void {\n    this._messageBus.emit('removeHighlightOverlay');\n  }\n\n  handleSelect(node: FlatNode): void {\n    this.directiveForest.handleSelect(node);\n  }\n\n  handleSetParents(parents: FlatNode[] | null): void {\n    this.parents = parents;\n    this._cdr.detectChanges();\n  }\n\n  inspect({ node, directivePosition }: { node: PropertyFlatNode; directivePosition: DirectivePosition }): void {\n    const objectPath = constructPathOfKeysToPropertyValue(node.prop);\n    this._appOperations.inspect(directivePosition, objectPath);\n  }\n}\n","export interface Process {\n  env: Env;\n}\n\ninterface Env {\n  LATEST_SHA: string;\n}\n\nexport interface Environment {\n  production: boolean;\n  process: Process;\n}\n\nexport abstract class ApplicationEnvironment {\n  abstract get environment(): Environment;\n}\n","<ng-container [ngSwitch]=\"data.status\">\n  <ng-container *ngSwitchCase=\"'ERROR'\">\n    <h1 mat-dialog-title>\n      Error\n    </h1>\n    <div mat-dialog-content>\n      <p>\n        Could not process uploaded file.\n      </p>\n      <p class=\"error\">\n        {{ data.errorMessage }}\n      </p>\n    </div>\n    <div mat-dialog-actions>\n      <button mat-flat-button [mat-dialog-close]=\"false\">\n        Close\n      </button>\n    </div>\n  </ng-container>\n  <ng-container *ngSwitchCase=\"'INVALID_VERSION'\">\n    <h1 mat-dialog-title>\n      Warning\n    </h1>\n    <div mat-dialog-content>\n      <p>\n        The file you are attempting to upload was recorded in a different format than the one supported by your current\n        Angular DevTools version\n      </p>\n      <p>\n        Current format version: <span class=\"version profiler-version\">{{ data.profilerVersion }}</span>\n      </p>\n\n      <p>\n        Format version of uploaded file: <span class=\"version imported-version\">{{ data.importedVersion }}</span>\n      </p>\n      <p>\n        Files recorded in older versions may no longer be compatible. Do you wish to continue?\n      </p>\n    </div>\n    <div mat-dialog-actions>\n      <button mat-flat-button [mat-dialog-close]=\"false\">\n        No Thanks\n      </button>\n      <button mat-flat-button [mat-dialog-close]=\"true\">\n        Yes\n      </button>\n    </div>\n  </ng-container>\n</ng-container>\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\ninterface DialogData {\n  profilerVersion?: number;\n  importedVersion?: number;\n  errorMessage?: string;\n  status: 'ERROR' | 'INVALID_VERSION';\n}\n\n@Component({\n  selector: 'ng-profiler-import-dialog',\n  templateUrl: './profiler-import-dialog.component.html',\n  styleUrls: ['./profiler-import-dialog.component.scss'],\n})\nexport class ProfilerImportDialogComponent {\n  constructor(\n    public dialogRef: MatDialogRef<ProfilerImportDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData\n  ) {}\n}\n","// Copyright (c) 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/*\n * @param date to convert to a compact ISO8601 format\n * @return date in a compact ISO8601 format\n */\nexport const toISO8601Compact = (date: Date): string => {\n  /*\n   * @param x an integer to append a leading 0 to if less than 9\n   * @return x with a leading 0 appended if less than 9\n   */\n  function leadZero(x: number): string {\n    return (x > 9 ? '' : '0') + x;\n  }\n\n  return (\n    date.getFullYear() +\n    leadZero(date.getMonth() + 1) +\n    leadZero(date.getDate()) +\n    'T' +\n    leadZero(date.getHours()) +\n    leadZero(date.getMinutes()) +\n    leadZero(date.getSeconds())\n  );\n};\n","import { Subject } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { toISO8601Compact } from './vendor/chromium/date-utilities';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FileApiService {\n  uploadedData: Subject<any> = new Subject();\n\n  publishFileUpload(parentEvent: InputEvent): void {\n    const reader = new FileReader();\n    reader.onload = (event) => {\n      try {\n        this.uploadedData.next(JSON.parse((event.target as any).result));\n      } catch (e) {\n        this.uploadedData.next({ error: e });\n      }\n      (parentEvent.target as any).value = '';\n    };\n    reader.readAsText((parentEvent.target as any).files[0]);\n  }\n\n  saveObjectAsJSON(object: object): void {\n    const downloadLink = document.createElement('a');\n    downloadLink.download = `NgDevTools-Profile-${toISO8601Compact(new Date())}.json`;\n    downloadLink.href = URL.createObjectURL(new Blob([JSON.stringify(object)], { type: 'application/json' }));\n    downloadLink.click();\n    setTimeout(() => URL.revokeObjectURL(downloadLink.href));\n  }\n}\n","import { ProfilerFrame, DirectiveProfile, ElementProfile } from 'protocol';\n\nconst mergeProperty = (mergeInProp: number | undefined, value: number | undefined) => {\n  if (mergeInProp === undefined) {\n    return value;\n  }\n  if (value === undefined) {\n    return mergeInProp;\n  }\n  return mergeInProp + value;\n};\n\nconst mergeDirective = (mergeIn: DirectiveProfile, second: DirectiveProfile) => {\n  mergeIn.changeDetection = mergeProperty(mergeIn.changeDetection, second.changeDetection);\n  Object.keys(mergeIn.lifecycle).forEach((hook) => {\n    mergeIn.lifecycle[hook] = mergeProperty(mergeIn.lifecycle[hook], second.lifecycle[hook]);\n  });\n};\n\nconst mergeDirectives = (mergeIn: ElementProfile[], second: ElementProfile[]) => {\n  for (let i = 0; i < second.length; i++) {\n    if (!mergeIn[i]) {\n      mergeIn[i] = {\n        children: [],\n        directives: [],\n      };\n    }\n    second[i].directives.forEach((d, idx) => {\n      const mergeInDirective = mergeIn[i].directives[idx];\n      if (mergeInDirective && mergeInDirective.name === d.name) {\n        mergeDirective(mergeInDirective, d);\n      } else {\n        mergeIn[i].directives.push(d);\n      }\n    });\n    mergeDirectives(mergeIn[i].children, second[i].children);\n  }\n};\n\nconst mergeFrame = (mergeIn: ProfilerFrame, second: ProfilerFrame) => {\n  mergeIn.duration += second.duration;\n  mergeIn.source = '';\n  mergeDirectives(mergeIn.directives, second.directives);\n};\n\nexport const mergeFrames = (frames: ProfilerFrame[]): ProfilerFrame | null => {\n  if (!frames || !frames.length) {\n    return null;\n  }\n  const first = JSON.parse(JSON.stringify(frames[0]));\n  for (let i = 1; i < frames.length; i++) {\n    mergeFrame(first, frames[i]);\n  }\n  return first;\n};\n","import { Component, EventEmitter, Input, Output, OnDestroy } from '@angular/core';\nimport { ProfilerFrame } from 'protocol';\nimport { GraphNode } from './record-formatter/record-formatter';\nimport { Observable, Subscription, BehaviorSubject } from 'rxjs';\nimport { share } from 'rxjs/operators';\nimport { mergeFrames } from './record-formatter/frame-merger';\n\nexport enum VisualizationMode {\n  FlameGraph,\n  TreeMap,\n  BarGraph,\n}\n\nconst MAX_HEIGHT = 50;\n\n@Component({\n  selector: 'ng-recording-timeline',\n  templateUrl: './timeline.component.html',\n  styleUrls: ['./timeline.component.scss'],\n})\nexport class TimelineComponent implements OnDestroy {\n  @Input() set stream(data: Observable<ProfilerFrame[]>) {\n    if (this._subscription) {\n      this._subscription.unsubscribe();\n    }\n    this._allRecords = [];\n    this._maxDuration = -Infinity;\n    this._subscription = data.subscribe({\n      next: (frames: ProfilerFrame[]): void => {\n        this._processFrames(frames);\n      },\n      complete: (): void => {\n        this.visualizing = true;\n      },\n    });\n  }\n  @Output() exportProfile = new EventEmitter<void>();\n  visualizationMode = VisualizationMode.BarGraph;\n  changeDetection = false;\n  frame: ProfilerFrame | null = null;\n\n  private _maxDuration = -Infinity;\n  private _subscription: Subscription;\n  private _allRecords: ProfilerFrame[] = [];\n  private _graphDataSubject = new BehaviorSubject<GraphNode[]>([]);\n  visualizing = false;\n  graphData$ = this._graphDataSubject.asObservable().pipe(share());\n\n  selectFrames({ indexes }: { indexes: number[] }): void {\n    this.frame = mergeFrames(indexes.map((index) => this._allRecords[index]));\n  }\n\n  get hasFrames(): boolean {\n    return this._allRecords.length > 0;\n  }\n\n  estimateFrameRate(timeSpent: number): number {\n    const multiplier = Math.max(Math.ceil(timeSpent / 16) - 1, 0);\n    return Math.floor(60 / 2 ** multiplier);\n  }\n\n  getColorByFrameRate(framerate: number): string {\n    if (framerate >= 60) {\n      return '#5cadd3';\n    } else if (framerate < 60 && framerate >= 30) {\n      return '#8a1882';\n    } else if (framerate < 30 && framerate >= 15) {\n      return '#9b4807';\n    }\n    return '#ce271e';\n  }\n\n  ngOnDestroy(): void {\n    if (this._subscription) {\n      this._subscription.unsubscribe();\n    }\n  }\n\n  private _processFrames(frames: ProfilerFrame[]): void {\n    let regenerate = false;\n    for (const frame of frames) {\n      if (frame.duration >= this._maxDuration) {\n        regenerate = true;\n      }\n      this._allRecords.push(frame);\n    }\n    if (regenerate) {\n      this._graphDataSubject.next(this._generateBars());\n      return;\n    }\n    const multiplicationFactor = parseFloat((MAX_HEIGHT / this._maxDuration).toFixed(2));\n    frames.forEach((frame) => this._graphDataSubject.value.push(this._getBarStyles(frame, multiplicationFactor)));\n\n    // We need to pass a new reference, because the CDK virtual scroll\n    // has OnPush strategy, so it doesn't update the UI otherwise.\n    // If this turns out ot be a bottleneck, we can easily create an immutable reference.\n    this._graphDataSubject.next(this._graphDataSubject.value.slice());\n  }\n\n  private _generateBars(): GraphNode[] {\n    const maxValue = this._allRecords.reduce((acc: number, frame: ProfilerFrame) => Math.max(acc, frame.duration), 0);\n    const multiplicationFactor = parseFloat((MAX_HEIGHT / maxValue).toFixed(2));\n    this._maxDuration = Math.max(this._maxDuration, maxValue);\n    return this._allRecords.map((r) => this._getBarStyles(r, multiplicationFactor));\n  }\n\n  private _getBarStyles(\n    record: ProfilerFrame,\n    multiplicationFactor: number\n  ): { style: { [key: string]: string }; toolTip: string } {\n    const height = record.duration * multiplicationFactor;\n    const colorPercentage = Math.max(10, Math.round((height / MAX_HEIGHT) * 100));\n    const backgroundColor = this.getColorByFrameRate(this.estimateFrameRate(record.duration));\n\n    const style = {\n      'background-image': `-webkit-linear-gradient(bottom, ${backgroundColor} ${colorPercentage}%, transparent ${colorPercentage}%)`,\n      cursor: 'pointer',\n      'min-width': '25px',\n      width: '25px',\n      height: '50px',\n    };\n    const toolTip = `${record.source} TimeSpent: ${record.duration.toFixed(3)}ms`;\n    return { style, toolTip };\n  }\n}\n","<ng-recording-modal *ngIf=\"!hasFrames && !visualizing\"></ng-recording-modal>\n\n<p class=\"info\" *ngIf=\"!hasFrames && visualizing\">There's no information to show.</p>\n\n<div style=\"margin: 10px; height: 100%\">\n  <ng-timeline-controls\n    [class.hidden]=\"!hasFrames\"\n    [record]=\"frame\"\n    [empty]=\"!hasFrames\"\n    [frameColor]=\"getColorByFrameRate(estimateFrameRate(frame?.duration))\"\n    [estimatedFrameRate]=\"estimateFrameRate(frame?.duration)\"\n    [visualizationMode]=\"visualizationMode\"\n    [changeDetection]=\"changeDetection\"\n    (changeVisualizationMode)=\"visualizationMode = $event\"\n    (exportProfile)=\"exportProfile.emit($event)\"\n    (toggleChangeDetection)=\"changeDetection = $event\"\n  ></ng-timeline-controls>\n\n  <ng-frame-selector\n    [class.hidden]=\"!hasFrames\"\n    [graphData$]=\"graphData$\"\n    (selectFrames)=\"selectFrames($event)\"\n  ></ng-frame-selector>\n\n  <p class=\"info\" *ngIf=\"hasFrames && !frame\">Select a bar to preview a particular change detection cycle.</p>\n\n  <ng-timeline-visualizer\n    *ngIf=\"hasFrames && frame\"\n    [visualizationMode]=\"visualizationMode\"\n    [frame]=\"frame\"\n    [changeDetection]=\"changeDetection\"\n  ></ng-timeline-visualizer>\n</div>\n","<div class=\"profiler-wrapper\">\n  <mat-card>\n    <button\n      mat-icon-button\n      color=\"primary\"\n      *ngIf=\"state === 'idle'\"\n      (click)=\"startRecording()\"\n      class=\"profiler-control start-recording-button\"\n    >\n      <mat-icon> circle </mat-icon>\n    </button>\n    <button\n      mat-icon-button\n      *ngIf=\"state === 'recording'\"\n      (click)=\"stopRecording()\"\n      class=\"profiler-control recording-button\"\n    >\n      <mat-icon> circle </mat-icon>\n    </button>\n    <button\n      mat-icon-button\n      color=\"primary\"\n      *ngIf=\"state === 'visualizing'\"\n      (click)=\"discardRecording()\"\n      class=\"profiler-control discard-button\"\n    >\n      <mat-icon> not_interested </mat-icon>\n    </button>\n    <p class=\"instructions\" [class.hidden]=\"state !== 'idle'\">\n      <span> Click the play button to start a new recording, or upload a json file containing profiler data. </span>\n      <br />\n      <span>\n        <input type=\"file\" (change)=\"importProfilerResults($event)\" placeholder=\"Upload file\" accept=\".json\" />\n      </span>\n    </p>\n    <p class=\"instructions\" [class.hidden]=\"state !== 'recording'\">\n      Interact to preview change detection. Clicking stop ends this Profiler recording.\n    </p>\n    <p class=\"instructions\" [class.hidden]=\"state !== 'visualizing'\">\n      Click Save Profile to save your recording or click refresh to clear the current recording.\n    </p>\n  </mat-card>\n  <div id=\"profiler-content-wrapper\">\n    <div class=\"visualization\" *ngIf=\"state !== 'idle'\">\n      <ng-recording-timeline [stream]=\"stream\" (exportProfile)=\"exportProfilerResults()\"> </ng-recording-timeline>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { MessageBus, Events, ProfilerFrame } from 'protocol';\nimport { FileApiService } from '../../file-api-service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ProfilerImportDialogComponent } from './profiler-import-dialog/profiler-import-dialog.component';\nimport { Subject, Subscription } from 'rxjs';\n\ntype State = 'idle' | 'recording' | 'visualizing';\n\nconst SUPPORTED_VERSIONS = [1];\nconst PROFILER_VERSION = 1;\n\n@Component({\n  selector: 'ng-profiler',\n  templateUrl: './profiler.component.html',\n  styleUrls: ['./profiler.component.scss'],\n})\nexport class ProfilerComponent implements OnInit, OnDestroy {\n  state: State = 'idle';\n  stream = new Subject<ProfilerFrame[]>();\n\n  private _fileUploadSubscription: Subscription;\n\n  // We collect this buffer so we can have it available for export.\n  private _buffer: ProfilerFrame[] = [];\n\n  constructor(\n    private _fileApiService: FileApiService,\n    private _messageBus: MessageBus<Events>,\n    public dialog: MatDialog\n  ) {}\n\n  startRecording(): void {\n    this.state = 'recording';\n    this._messageBus.emit('startProfiling');\n  }\n\n  stopRecording(): void {\n    this.state = 'visualizing';\n    this._messageBus.emit('stopProfiling');\n    this.stream.complete();\n  }\n\n  ngOnInit(): void {\n    this._messageBus.on('profilerResults', (remainingRecords) => {\n      if (remainingRecords.duration > 0 && remainingRecords.source) {\n        this.stream.next([remainingRecords]);\n        this._buffer.push(remainingRecords);\n      }\n    });\n\n    this._messageBus.on('sendProfilerChunk', (chunkOfRecords: ProfilerFrame) => {\n      this.stream.next([chunkOfRecords]);\n      this._buffer.push(chunkOfRecords);\n    });\n\n    this._fileUploadSubscription = this._fileApiService.uploadedData.subscribe((importedFile) => {\n      if (importedFile.error) {\n        console.error('Could not process uploaded file');\n        console.error(importedFile.error);\n        this.dialog.open(ProfilerImportDialogComponent, {\n          width: '600px',\n          data: { status: 'ERROR', errorMessage: importedFile.error },\n        });\n\n        return;\n      }\n\n      if (!SUPPORTED_VERSIONS.includes(importedFile.version)) {\n        const processDataDialog = this.dialog.open(ProfilerImportDialogComponent, {\n          width: '600px',\n          data: { importedVersion: importedFile.version, profilerVersion: PROFILER_VERSION, status: 'INVALID_VERSION' },\n        });\n\n        processDataDialog.afterClosed().subscribe((result) => {\n          if (result) {\n            this.state = 'visualizing';\n            this._buffer = importedFile.buffer;\n            setTimeout(() => this.stream.next(importedFile.buffer));\n          }\n        });\n      } else {\n        this.state = 'visualizing';\n        this._buffer = importedFile.buffer;\n        setTimeout(() => this.stream.next(importedFile.buffer));\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    this._fileUploadSubscription.unsubscribe();\n  }\n\n  exportProfilerResults(): void {\n    const fileToExport = {\n      version: PROFILER_VERSION,\n      buffer: this._buffer,\n    };\n    this._fileApiService.saveObjectAsJSON(fileToExport);\n  }\n\n  importProfilerResults(event: InputEvent): void {\n    this._fileApiService.publishFileUpload(event);\n  }\n\n  discardRecording(): void {\n    this.stream = new Subject<ProfilerFrame[]>();\n    this.state = 'idle';\n    this._buffer = [];\n  }\n}\n","import { Component, ViewChild, ElementRef, AfterViewInit, Input } from '@angular/core';\nimport { MessageBus, Events, Route } from 'protocol';\nimport * as d3 from 'd3';\n\n@Component({\n  selector: 'ng-router-tree',\n  templateUrl: './router-tree.component.html',\n  styleUrls: ['./router-tree.component.scss'],\n})\nexport class RouterTreeComponent implements AfterViewInit {\n  @ViewChild('svgContainer', { static: true }) private svgContainer: ElementRef;\n  @ViewChild('mainGroup', { static: true }) private g: ElementRef;\n\n  @Input() set routes(routes: Route[]) {\n    this._routes = routes;\n    this.render();\n  }\n\n  private _routes: Route[] = [];\n  private tree: d3.TreeLayout<{}>;\n  private tooltip: any;\n\n  constructor(private _messageBus: MessageBus<Events>) {}\n\n  ngAfterViewInit(): void {\n    this._messageBus.emit('getRoutes');\n  }\n\n  render(): void {\n    if (this._routes.length === 0 || !this.g) {\n      return;\n    }\n\n    // cleanup old render\n    this.tooltip?.remove?.();\n    d3.select(this.g.nativeElement).selectAll('*').remove();\n\n    this.tree = d3.tree();\n    const svg = d3.select(this.svgContainer.nativeElement);\n    svg.attr('height', 500).attr('width', 500);\n\n    const g = d3.select(this.g.nativeElement);\n\n    const svgPadding = 20;\n\n    // Compute the new tree layout.\n    this.tree.nodeSize([75, 200]);\n\n    const root: any = this._routes[0];\n\n    const nodes = this.tree(\n      d3.hierarchy(root.children.length === 0 || root.children.length > 1 ? root : root.children[0], (d) => d.children)\n    );\n\n    // Define the div for the tooltip\n    this.tooltip = d3.select('body').append('div').attr('class', 'tooltip').style('opacity', 0).style('padding', '0');\n\n    g.selectAll('.link')\n      .data(nodes.descendants().slice(1))\n      .enter()\n      .append('path')\n      .attr('class', 'link')\n      .attr(\n        'd',\n        (d) => `\n            M${d.y},${d.x}\n            C${(d.y + d.parent.y) / 2},\n              ${d.x} ${(d.y + d.parent.y) / 2},\n              ${d.parent.x} ${d.parent.y},\n              ${d.parent.x}`\n      );\n\n    // Declare the nodes\n    const node = g\n      .selectAll('g.node')\n      .data(nodes.descendants())\n      .enter()\n      .append('g')\n      .attr('class', 'node')\n      .on('mouseover', (n) => {\n        const content = `\n          <b>Name:</b> ${n.data.name}<br/>\n          <b>Path:</b> ${n.data.path}<br/>\n          <b>Auxiliary Route:</b> ${n.data.isAux}<br/>\n          <b>Specificity:</b> ${n.data.specificity}<br/>\n          <b>Handler:</b> ${n.data.handler}<br/>\n        `;\n        this.tooltip.style('padding', '4px 8px').transition().style('opacity', 0.9);\n        this.tooltip\n          .html(content)\n          .style('left', d3.event.pageX + 8 + 'px')\n          .style('top', d3.event.pageY + 8 + 'px');\n      })\n      .on('mouseout', () => this.tooltip.transition().style('opacity', 0))\n      .attr('transform', (d) => `translate(${d.y},${d.x})`);\n\n    node\n      .append('circle')\n      .attr('class', (d) => ((d.data as any).isAux ? 'node-aux-route' : 'node-route'))\n      .attr('r', 6);\n\n    node\n      .append('text')\n      .attr('dy', (d) => (d.depth === 0 || !d.children ? '0.35em' : '-1.50em'))\n      .attr('dx', (d) => {\n        if (d.parent && d.children) {\n          return 6;\n        } else if (!d.parent && d.children) {\n          return -13;\n        } else if (d.parent && !d.children) {\n          return 13;\n        }\n      })\n      .attr('text-anchor', (d) => (d.children ? 'end' : 'start'))\n      .text((d) => {\n        const label = (d.data as any).name;\n        return label.length > 20 ? label.slice(0, 17) + '...' : label;\n      });\n\n    // reset transform\n    g.attr('transform', 'translate(0, 0)');\n\n    const svgRect = this.svgContainer.nativeElement.getBoundingClientRect();\n    const gElRect = this.g.nativeElement.getBoundingClientRect();\n\n    g.attr(\n      'transform',\n      `translate(\n        ${svgRect.left - gElRect.left + svgPadding},\n        ${svgRect.top - gElRect.top + svgPadding}\n      )`\n    );\n    const height = gElRect.height + svgPadding * 2;\n    const width = gElRect.width + svgPadding * 2;\n    svg.attr('height', height).attr('width', width);\n  }\n}\n","<div class=\"router-tree-wrapper\">\n  <div class=\"no-routes\" [hidden]=\"routes?.length !== 0\">\n    <h1>\n      There are no routes to display.\n    </h1>\n  </div>\n  <svg #svgContainer class=\"svg-container\" [hidden]=\"routes?.length === 0\">\n    <g #mainGroup></g>\n  </svg>\n</div>\n","<nav #navBar mat-tab-nav-bar [color]=\"'accent'\">\n  <div id=\"nav-buttons\">\n    <button mat-icon-button color=\"primary\" (click)=\"toggleInspector()\">\n      <mat-icon [ngClass]=\"{ 'inspector-active': inspectorRunning }\">\n        pin_end\n      </mat-icon>\n    </button>\n    <button mat-icon-button color=\"primary\" (click)=\"refresh()\">\n      <mat-icon>\n        refresh\n      </mat-icon>\n    </button>\n    <button mat-icon-button color=\"primary\" [matMenuTriggerFor]=\"menu\">\n      <mat-icon>\n        settings\n      </mat-icon>\n    </button>\n  </div>\n  <a class=\"mat-tab-link\" mat-tab-link *ngFor=\"let tab of tabs\" (click)=\"changeTab(tab)\" [active]=\"activeTab === tab\">\n    {{ tab }}\n  </a>\n  <section *ngIf=\"angularVersion\" id=\"app-angular-version\">\n    Angular version:\n    <span id=\"version-number\">\n      {{ angularVersion }}\n    </span>\n    <ng-container *ngIf=\"latestSHA; let sha\"> | DevTools SHA: {{ sha }} </ng-container>\n  </section>\n</nav>\n\n<div class=\"tab-content\">\n  <ng-directive-explorer\n    [ngClass]=\"{ hidden: activeTab !== 'Components' }\"\n    (toggleInspector)=\"toggleInspector()\"\n  ></ng-directive-explorer>\n  <ng-profiler [ngClass]=\"{ hidden: activeTab !== 'Profiler' }\"></ng-profiler>\n  <ng-router-tree [routes]=\"routes\" [ngClass]=\"{ hidden: activeTab !== 'Router Tree' }\"></ng-router-tree>\n</div>\n\n<mat-menu #menu=\"matMenu\" class=\"options-menu\">\n  <mat-slide-toggle (change)=\"toggleTimingAPI($event)\" class=\"menu-toggle-button\" (click)=\"$event.stopPropagation()\">\n    Enable timing API\n  </mat-slide-toggle>\n  <br />\n  <br />\n  <mat-slide-toggle\n    [checked]=\"currentTheme === 'dark-theme'\"\n    (change)=\"themeService.toggleDarkMode($event.checked)\"\n    class=\"menu-toggle-button\"\n    (click)=\"$event.stopPropagation()\"\n  >\n    Dark Mode\n  </mat-slide-toggle>\n</mat-menu>\n","/// <reference types=\"resize-observer-browser\" />\nimport { AfterViewInit, Component, Input, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { Events, MessageBus, Route } from 'protocol';\nimport { DirectiveExplorerComponent } from './directive-explorer/directive-explorer.component';\nimport { ApplicationEnvironment } from '../application-environment';\nimport { MatSlideToggleChange } from '@angular/material/slide-toggle';\nimport { TabUpdate } from './tab-update';\nimport { Theme, ThemeService } from '../theme-service';\nimport { Subscription } from 'rxjs';\nimport { MatTabNav } from '@angular/material/tabs';\n\n@Component({\n  selector: 'ng-devtools-tabs',\n  templateUrl: './devtools-tabs.component.html',\n  styleUrls: ['./devtools-tabs.component.scss'],\n})\nexport class DevToolsTabsComponent implements OnInit, OnDestroy, AfterViewInit {\n  @Input() angularVersion: string | undefined = undefined;\n  @ViewChild(DirectiveExplorerComponent) directiveExplorer: DirectiveExplorerComponent;\n  @ViewChild('navBar', { static: true }) navbar: MatTabNav;\n\n  activeTab: 'Components' | 'Profiler' | 'Router Tree' = 'Components';\n\n  inspectorRunning = false;\n  routerTreeEnabled = false;\n\n  private _currentThemeSubscription: Subscription;\n  currentTheme: Theme;\n\n  routes: Route[] = [];\n\n  constructor(\n    public tabUpdate: TabUpdate,\n    public themeService: ThemeService,\n    private _messageBus: MessageBus<Events>,\n    private _applicationEnvironment: ApplicationEnvironment\n  ) {}\n\n  ngOnInit(): void {\n    this._currentThemeSubscription = this.themeService.currentTheme.subscribe((theme) => (this.currentTheme = theme));\n\n    this._messageBus.on('updateRouterTree', (routes) => {\n      this.routes = routes || [];\n    });\n  }\n\n  get tabs(): string[] {\n    const alwaysShown = ['Components', 'Profiler'];\n    return this.routes.length === 0 ? alwaysShown : [...alwaysShown, 'Router Tree'];\n  }\n\n  ngAfterViewInit(): void {\n    this.navbar.disablePagination = true;\n  }\n\n  ngOnDestroy(): void {\n    this._currentThemeSubscription.unsubscribe();\n  }\n\n  get latestSHA(): string {\n    return this._applicationEnvironment.environment.process.env.LATEST_SHA;\n  }\n\n  changeTab(tab: 'Profiler' | 'Components' | 'Router Tree'): void {\n    this.activeTab = tab;\n    this.tabUpdate.notify();\n    if (tab === 'Router Tree') {\n      this._messageBus.emit('getRoutes');\n    }\n  }\n\n  toggleInspector(): void {\n    this.toggleInspectorState();\n    this.emitInspectorEvent();\n  }\n\n  emitInspectorEvent(): void {\n    if (this.inspectorRunning) {\n      this._messageBus.emit('inspectorStart');\n      this.changeTab('Components');\n    } else {\n      this._messageBus.emit('inspectorEnd');\n      this._messageBus.emit('removeHighlightOverlay');\n    }\n  }\n\n  toggleInspectorState(): void {\n    this.inspectorRunning = !this.inspectorRunning;\n  }\n\n  refresh(): void {\n    this.directiveExplorer.refresh();\n  }\n\n  toggleTimingAPI(change: MatSlideToggleChange): void {\n    change.checked ? this._messageBus.emit('enableTimingAPI') : this._messageBus.emit('disableTimingAPI');\n  }\n}\n","<div class=\"mat-typography mat-app-background\" style=\"height: 100%;\">\n  <ng-container *ngIf=\"angularExists === true; else errorOrLoading\">\n    <ng-container *ngIf=\"angularIsInDevMode; else angularIsInProdMode\">\n      <div *ngIf=\"supportedVersion; else notSupported\" class=\"devtools-wrapper noselect\" [@enterAnimation]>\n        <ng-devtools-tabs [angularVersion]=\"angularVersion\"></ng-devtools-tabs>\n      </div>\n      <ng-template #notSupported>\n        <p class=\"text-message\">\n          Angular Devtools only supports Angular versions 9 and above with\n          <a href=\"https://angular.io/guide/ivy\" target=\"_blank\">ivy</a> enabled.\n        </p>\n      </ng-template>\n    </ng-container>\n    <ng-template #angularIsInProdMode>\n      <p class=\"text-message\">\n        We detected an application built with production configuration. Angular DevTools only supports development\n        builds.\n      </p>\n    </ng-template>\n  </ng-container>\n  <ng-template #errorOrLoading>\n    <ng-container *ngIf=\"angularExists === false; else loading\">\n      <p class=\"text-message\">\n        Angular application not detected.\n        <span\n          class=\"info-icon\"\n          matTooltip=\"You see this message because the app is still loading, or this is not an Angular application\"\n          >i</span\n        >\n      </p>\n    </ng-container>\n    <ng-template #loading>\n      <div class=\"initializing\" *ngIf=\"angularExists === null\">\n        <div class=\"loading\"></div>\n      </div>\n    </ng-template>\n  </ng-template>\n</div>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { MessageBus, Events } from 'protocol';\nimport { interval } from 'rxjs';\nimport { animate, style, transition, trigger } from '@angular/animations';\nimport { ThemeService } from './theme-service';\n\n@Component({\n  selector: 'ng-devtools',\n  templateUrl: './devtools.component.html',\n  styleUrls: ['./devtools.component.scss'],\n  animations: [\n    trigger('enterAnimation', [\n      transition(':enter', [style({ opacity: 0 }), animate('200ms', style({ opacity: 1 }))]),\n      transition(':leave', [style({ opacity: 1 }), animate('200ms', style({ opacity: 0 }))]),\n    ]),\n  ],\n})\nexport class DevToolsComponent implements OnInit, OnDestroy {\n  angularExists: boolean | null = null;\n  angularVersion: string | boolean | undefined = undefined;\n  angularIsInDevMode = true;\n  ivy: boolean;\n\n  constructor(private _messageBus: MessageBus<Events>, private _themeService: ThemeService) {}\n\n  private _interval$ = interval(500).subscribe((attempt) => {\n    if (attempt === 10) {\n      this.angularExists = false;\n    }\n    this._messageBus.emit('queryNgAvailability');\n  });\n\n  ngOnInit(): void {\n    this._themeService.initializeThemeWatcher();\n\n    this._messageBus.once('ngAvailability', ({ version, devMode, ivy }) => {\n      this.angularExists = !!version;\n      this.angularVersion = version;\n      this.angularIsInDevMode = devMode;\n      this.ivy = ivy;\n      this._interval$.unsubscribe();\n    });\n  }\n\n  get majorAngularVersion(): number {\n    if (!this.angularVersion) {\n      return -1;\n    }\n    return parseInt(this.angularVersion.toString().split('.')[0], 10);\n  }\n\n  get supportedVersion(): boolean {\n    return (this.majorAngularVersion >= 9 || this.majorAngularVersion === 0) && this.ivy;\n  }\n\n  ngOnDestroy(): void {\n    this._interval$.unsubscribe();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { PropertyViewBodyComponent } from './property-view-body/property-view-body.component';\nimport { CommonModule } from '@angular/common';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { PropertyViewHeaderComponent } from './property-view-header/property-view-header.component';\nimport { PropertyViewComponent } from './property-view.component';\nimport { PropertyViewTreeComponent } from './property-view-body/property-view-tree/property-view-tree.component';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatIconModule } from '@angular/material/icon';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { PropertyEditorComponent } from './property-view-body/property-view-tree/property-editor/property-editor.component';\nimport { FormsModule } from '@angular/forms';\nimport { PropertyPreviewComponent } from './property-view-body/property-view-tree/property-preview/property-preview.component';\n\n@NgModule({\n  declarations: [\n    PropertyViewBodyComponent,\n    PropertyViewHeaderComponent,\n    PropertyViewComponent,\n    PropertyViewTreeComponent,\n    PropertyEditorComponent,\n    PropertyPreviewComponent,\n  ],\n  imports: [\n    MatToolbarModule,\n    MatIconModule,\n    MatTreeModule,\n    CommonModule,\n    MatExpansionModule,\n    DragDropModule,\n    FormsModule\n  ],\n  exports: [PropertyViewBodyComponent, PropertyViewHeaderComponent, PropertyViewComponent],\n})\nexport class PropertyViewModule {}\n","import { NgModule } from '@angular/core';\nimport { PropertyViewModule } from './property-tab-body/property-view/property-view.module';\nimport { PropertyTabComponent } from './property-tab.component';\nimport { PropertyTabHeaderComponent } from './property-tab-header/property-tab-header.component';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport { PropertyTabBodyComponent } from './property-tab-body/property-tab-body.component';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { ComponentMetadataComponent } from './property-tab-header/component-metadata/component-metadata.component';\nimport { MatIconModule } from '@angular/material/icon';\n\n@NgModule({\n  declarations: [\n    PropertyTabComponent,\n    PropertyTabHeaderComponent,\n    PropertyTabBodyComponent,\n    ComponentMetadataComponent,\n  ],\n  imports: [PropertyViewModule, CommonModule, MatButtonModule, MatExpansionModule, MatIconModule],\n  exports: [PropertyTabComponent],\n})\nexport class PropertyTabModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BreadcrumbsComponent } from '../breadcrumbs/breadcrumbs.component';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatIconModule } from '@angular/material/icon';\n\n@NgModule({\n  declarations: [BreadcrumbsComponent],\n  imports: [CommonModule, MatCardModule, MatButtonModule, MatIconModule],\n  exports: [BreadcrumbsComponent],\n})\nexport class DirectiveForestModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { DirectiveExplorerComponent } from './directive-explorer.component';\nimport { DirectiveForestComponent } from './directive-forest/directive-forest.component';\nimport { FilterComponent } from './directive-forest/filter/filter.component';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { PropertyTabModule } from './property-tab/property-tab.module';\nimport { DirectiveForestModule } from './directive-forest/directive-forest.module';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { AngularSplitModule } from '../../vendor/angular-split/lib/module';\n\n@NgModule({\n  declarations: [DirectiveExplorerComponent, DirectiveForestComponent, FilterComponent],\n  exports: [DirectiveExplorerComponent],\n  imports: [\n    MatTreeModule,\n    MatCardModule,\n    ScrollingModule,\n    MatIconModule,\n    CommonModule,\n    PropertyTabModule,\n    MatButtonModule,\n    MatSnackBarModule,\n    AngularSplitModule,\n    DirectiveForestModule,\n  ],\n})\nexport class DirectiveExplorerModule {}\n","import { ElementProfile, DirectiveProfile, ProfilerFrame } from 'protocol';\n\nexport interface TimelineView<T> {\n  timeline: AppEntry<T>[];\n}\n\nexport interface AppEntry<T> {\n  app: T[];\n  timeSpent: number;\n  source: string;\n}\n\nexport interface GraphNode {\n  toolTip: string;\n  style: any;\n}\n\nexport abstract class RecordFormatter<T> {\n  abstract formatFrame(frame: ProfilerFrame): T;\n  abstract addFrame(nodes: T | T[], elements: ElementProfile[]): number | void;\n\n  getLabel(element: ElementProfile): string {\n    const name = element.directives\n      .filter((d) => d.isComponent)\n      .map((c) => c.name)\n      .join(', ');\n    const attributes = [...new Set(element.directives.filter((d) => !d.isComponent).map((d) => d.name))].join(', ');\n    return attributes === '' ? name : `${name}[${attributes}]`;\n  }\n\n  getValue(element: ElementProfile): number {\n    let result = 0;\n    element.directives.forEach((dir) => {\n      result += this.getDirectiveValue(dir);\n    });\n    return result;\n  }\n\n  getDirectiveValue(directive: DirectiveProfile): number {\n    let result = 0;\n    let current = directive.changeDetection;\n    if (current === undefined) {\n      current = 0;\n    }\n    result += current;\n    Object.keys(directive.lifecycle).forEach((key) => {\n      const value = parseFloat(directive.lifecycle[key]);\n      if (!isNaN(value)) {\n        result += value;\n      }\n    });\n    return result;\n  }\n}\n","import { RecordFormatter } from '../record-formatter';\nimport { ElementProfile, ProfilerFrame } from 'protocol';\nimport { Theme } from '../../../../../../theme-service';\n\nexport interface FlamegraphNode {\n  value: number;\n  color?: string;\n  children: FlamegraphNode[];\n  label: string;\n  instances: number;\n  original: ElementProfile;\n  changeDetected: boolean;\n}\n\nexport const ROOT_LEVEL_ELEMENT_LABEL = 'Entire application';\n\nexport class FlamegraphFormatter extends RecordFormatter<FlamegraphNode> {\n  formatFrame(frame: ProfilerFrame, showChangeDetection?: boolean, theme?: Theme): FlamegraphNode {\n    const result: FlamegraphNode = {\n      value: 0,\n      label: ROOT_LEVEL_ELEMENT_LABEL,\n      children: [],\n      instances: 1,\n      changeDetected: false,\n      original: {\n        children: [],\n        directives: [],\n      },\n    };\n\n    if (showChangeDetection) {\n      result.color = theme === 'dark-theme' ? CHANGE_DETECTION_COLOR_DARK : CHANGE_DETECTION_COLOR_LIGHT;\n    }\n\n    this.addFrame(result.children, frame.directives, showChangeDetection, theme);\n    return result;\n  }\n\n  addFrame(nodes: FlamegraphNode[], elements: ElementProfile[], showChangeDetection?: boolean, theme?: Theme): number {\n    let timeSpent = 0;\n    elements.forEach((element) => {\n      // Possibly undefined because of\n      // the insertion on the backend.\n      if (!element) {\n        console.error('Unable to insert undefined element');\n        return;\n      }\n      const changeDetected = didRunChangeDetection(element);\n      const node: FlamegraphNode = {\n        value: super.getValue(element),\n        label: super.getLabel(element),\n        children: [],\n        instances: 1,\n        original: element,\n        changeDetected,\n      };\n      if (showChangeDetection) {\n        const CHANGE_DETECTION_COLOR =\n          theme === 'dark-theme' ? CHANGE_DETECTION_COLOR_DARK : CHANGE_DETECTION_COLOR_LIGHT;\n        node.color = changeDetected ? CHANGE_DETECTION_COLOR : NO_CHANGE_DETECTION_COLOR;\n      }\n      timeSpent += this.addFrame(node.children, element.children, showChangeDetection, theme);\n      timeSpent += node.value;\n      nodes.push(node);\n    });\n    return timeSpent;\n  }\n}\n\nconst CHANGE_DETECTION_COLOR_LIGHT = '#5cadd3';\nconst CHANGE_DETECTION_COLOR_DARK = '#073d69';\nconst NO_CHANGE_DETECTION_COLOR = 'transparent';\n\nconst didRunChangeDetection = (profile: ElementProfile) => {\n  const components = profile.directives.filter((d) => d.isComponent);\n  if (!components.length) {\n    return false;\n  }\n  return components.some((c) => c.changeDetection !== undefined);\n};\n","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\n\nimport {\n  FlamegraphNode,\n  ROOT_LEVEL_ELEMENT_LABEL,\n  FlamegraphFormatter,\n} from '../../record-formatter/flamegraph-formatter/flamegraph-formatter';\nimport { Color, RawData } from 'ngx-flamegraph/lib/utils';\nimport { ProfilerFrame } from 'protocol';\nimport { SelectedDirective, SelectedEntry } from '../timeline-visualizer.component';\nimport { Theme, ThemeService } from '../../../../../../theme-service';\nimport { Subscription } from 'rxjs';\n\nexport interface GraphNode {\n  directive: string;\n  method: string;\n  value: number;\n}\n\n@Component({\n  selector: 'ng-flamegraph-visualizer',\n  templateUrl: './flamegraph-visualizer.component.html',\n  styleUrls: ['./flamegraph-visualizer.component.scss'],\n})\nexport class FlamegraphVisualizerComponent implements OnInit, OnDestroy {\n  profilerBars: FlamegraphNode[] = [];\n  view: [number, number] = [235, 200];\n  colors: Color;\n\n  private _formatter = new FlamegraphFormatter();\n  private _showChangeDetection = false;\n  private _frame: ProfilerFrame;\n  private _currentThemeSubscription: Subscription;\n  currentTheme: Theme;\n\n  @Output() nodeSelect = new EventEmitter<SelectedEntry>();\n\n  @Input() set frame(frame: ProfilerFrame) {\n    this._frame = frame;\n    this._selectFrame();\n  }\n\n  @Input() set changeDetection(changeDetection: boolean) {\n    this._showChangeDetection = changeDetection;\n    this._selectFrame();\n  }\n\n  constructor(public themeService: ThemeService) {}\n\n  ngOnInit(): void {\n    this._currentThemeSubscription = this.themeService.currentTheme.subscribe((theme) => {\n      this.currentTheme = theme;\n      this.colors =\n        theme === 'dark-theme'\n          ? {\n              hue: [210, 90],\n              saturation: [90, 90],\n              lightness: [25, 25],\n            }\n          : {\n              hue: [50, 15],\n              saturation: [100, 100],\n              lightness: [75, 75],\n            };\n      this._selectFrame();\n    });\n  }\n\n  ngOnDestroy(): void {\n    this._currentThemeSubscription.unsubscribe();\n  }\n\n  selectFrame(frame: RawData): void {\n    if (frame.label === ROOT_LEVEL_ELEMENT_LABEL) {\n      return;\n    }\n\n    const flameGraphNode = frame as FlamegraphNode;\n    const directiveData = this.formatEntryData(flameGraphNode);\n\n    this.nodeSelect.emit({\n      entry: flameGraphNode,\n      selectedDirectives: directiveData,\n    });\n  }\n\n  formatEntryData(flameGraphNode: FlamegraphNode): SelectedDirective[] {\n    const graphData: SelectedDirective[] = [];\n    flameGraphNode.original.directives.forEach((node) => {\n      const changeDetection = node.changeDetection;\n      if (changeDetection !== undefined) {\n        graphData.push({\n          directive: node.name,\n          method: 'changes',\n          value: parseFloat(changeDetection.toFixed(2)),\n        });\n      }\n      Object.keys(node.lifecycle).forEach((key) => {\n        graphData.push({\n          directive: node.name,\n          method: key,\n          value: +node.lifecycle[key].toFixed(2),\n        });\n      });\n    });\n    return graphData;\n  }\n\n  private _selectFrame(): void {\n    this.profilerBars = [this._formatter.formatFrame(this._frame, this._showChangeDetection, this.currentTheme)];\n  }\n}\n","<div class=\"level-profile-wrapper\">\n  <ngx-flamegraph\n    (frameClick)=\"selectFrame($event)\"\n    [config]=\"{ data: profilerBars, color: colors }\"\n    siblingLayout=\"equal\"\n  >\n  </ngx-flamegraph>\n</div>\n","import { RecordFormatter } from '../record-formatter';\nimport { ElementProfile, ProfilerFrame } from 'protocol';\nimport memo from 'memo-decorator';\n\nexport interface BargraphNode {\n  parents: ElementProfile[];\n  value: number;\n  label: string;\n  original: ElementProfile;\n}\n\nexport class BarGraphFormatter extends RecordFormatter<BargraphNode[]> {\n  @memo({ cache: new WeakMap() })\n  formatFrame(frame: ProfilerFrame): BargraphNode[] {\n    const result: BargraphNode[] = [];\n    this.addFrame(result, frame.directives);\n    return result.filter((element) => element.value > 0).sort((a, b) => b.value - a.value);\n  }\n\n  addFrame(nodes: BargraphNode[], elements: ElementProfile[], parents: ElementProfile[] = []): number {\n    let timeSpent = 0;\n    elements.forEach((element) => {\n      // Possibly undefined because of\n      // the insertion on the backend.\n      if (!element) {\n        console.error('Unable to insert undefined element');\n        return;\n      }\n\n      timeSpent += this.addFrame(nodes, element.children, parents.concat(element));\n      timeSpent += super.getValue(element);\n\n      element.directives.forEach((dir) => {\n        const innerNode: BargraphNode = {\n          parents,\n          value: super.getDirectiveValue(dir),\n          label: dir.name,\n          original: element,\n        };\n        nodes.push(innerNode);\n      });\n    });\n    return timeSpent;\n  }\n}\n","<div class=\"wrapper\" @stagger>\n  <div\n    @appear\n    *ngFor=\"let bar of internalData; let i = index\"\n    (click)=\"barClick.emit(originalData[i])\"\n    class=\"bar\"\n    [style.backgroundColor]=\"color\"\n    [style.width.%]=\"bar.value\"\n  >\n    <span [matTooltip]=\"bar.label\">{{ bar.label }}</span>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { trigger, style, animate, transition, stagger, query, animateChild } from '@angular/animations';\n\ninterface Data {\n  label: string;\n  value: number;\n}\n\n@Component({\n  selector: 'ng-bar-chart',\n  templateUrl: './bar-chart.component.html',\n  styleUrls: ['./bar-chart.component.scss'],\n  animations: [\n    trigger('appear', [transition(':enter', [style({ width: 0 }), animate('.3s ease', style({ width: '*' }))])]),\n    trigger('stagger', [transition(':enter', [query(':enter', stagger('.1s', [animateChild()]))])]),\n  ],\n})\nexport class BarChartComponent {\n  @Input() set data(nodes: Data[]) {\n    this.originalData = nodes;\n    this.internalData = [];\n    const max = nodes.reduce((a: number, c) => Math.max(a, c.value), -Infinity);\n    for (const node of nodes) {\n      this.internalData.push({\n        label: node.label,\n        value: (node.value / max) * 100,\n      });\n    }\n  }\n  @Input() color: string;\n  @Output() barClick = new EventEmitter<Data>();\n\n  originalData: Data[];\n  internalData: Data[] = [];\n}\n","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\nimport { BargraphNode, BarGraphFormatter } from '../../record-formatter/bargraph-formatter';\nimport { ProfilerFrame } from 'protocol';\nimport { SelectedDirective, SelectedEntry } from '../timeline-visualizer.component';\nimport { Theme, ThemeService } from '../../../../../../theme-service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'ng-bargraph-visualizer',\n  templateUrl: './bargraph-visualizer.component.html',\n  styleUrls: ['./bargraph-visualizer.component.scss'],\n})\nexport class BargraphVisualizerComponent implements OnInit, OnDestroy {\n  barColor: string;\n  profileRecords: BargraphNode[];\n\n  @Output() nodeSelect = new EventEmitter<SelectedEntry>();\n\n  private _formatter = new BarGraphFormatter();\n  private _currentThemeSubscription: Subscription;\n  currentTheme: Theme;\n\n  @Input() set frame(data: ProfilerFrame) {\n    this.profileRecords = this._formatter.formatFrame(data);\n  }\n\n  constructor(public themeService: ThemeService) {}\n\n  ngOnInit(): void {\n    this._currentThemeSubscription = this.themeService.currentTheme.subscribe((theme) => {\n      this.currentTheme = theme;\n      this.barColor = theme === 'dark-theme' ? '#073d69' : '#cfe8fc';\n    });\n  }\n\n  ngOnDestroy(): void {\n    this._currentThemeSubscription.unsubscribe();\n  }\n\n  formatEntryData(bargraphNode: BargraphNode): SelectedDirective[] {\n    const graphData: SelectedDirective[] = [];\n    bargraphNode.original.directives.forEach((node) => {\n      const { changeDetection } = node;\n      if (changeDetection) {\n        graphData.push({\n          directive: node.name,\n          method: 'changes',\n          value: parseFloat(changeDetection.toFixed(2)),\n        });\n      }\n      Object.keys(node.lifecycle).forEach((key) => {\n        graphData.push({\n          directive: node.name,\n          method: key,\n          value: +node.lifecycle[key].toFixed(2),\n        });\n      });\n    });\n    return graphData;\n  }\n\n  selectNode(node: BargraphNode): void {\n    this.nodeSelect.emit({\n      entry: node,\n      parentHierarchy: node.parents.map((element) => {\n        return { name: element.directives[0].name };\n      }),\n      selectedDirectives: this.formatEntryData(node),\n    });\n  }\n}\n","<div class=\"level-profile-wrapper\">\n  <ng-bar-chart (barClick)=\"selectNode($event)\" [color]=\"barColor\" [data]=\"profileRecords\"> </ng-bar-chart>\n</div>\n","import { RecordFormatter } from '../record-formatter';\nimport { ElementProfile, ProfilerFrame } from 'protocol';\nimport memo from 'memo-decorator';\n\nexport interface TreeMapNode {\n  id: string;\n  value: number;\n  size: number;\n  children: TreeMapNode[];\n  original: ElementProfile | null;\n}\n\nexport class TreeMapFormatter extends RecordFormatter<TreeMapNode> {\n  @memo({ cache: new WeakMap() })\n  formatFrame(record: ProfilerFrame): TreeMapNode {\n    const children: TreeMapNode[] = [];\n    this.addFrame(children, record.directives);\n    const size = children.reduce((accum, curr) => {\n      return accum + curr.size;\n    }, 0);\n    return {\n      id: 'Application',\n      size,\n      value: size,\n      children,\n      original: null,\n    };\n  }\n\n  addFrame(nodes: TreeMapNode[], elements: ElementProfile[], prev: TreeMapNode | null = null): void {\n    elements.forEach((element) => {\n      if (!element) {\n        console.error('Unable to insert undefined element');\n        return;\n      }\n      const nodeVal = super.getValue(element);\n      const node: TreeMapNode = {\n        id: super.getLabel(element),\n        size: nodeVal,\n        value: nodeVal,\n        children: [],\n        original: element,\n      };\n      this.addFrame(node.children, element.children, node);\n      if (prev) {\n        prev.size += node.size;\n      }\n      nodes.push(node);\n    });\n  }\n}\n","import { Component, ElementRef, Input, NgZone, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport * as treemap from 'webtreemap/build/webtreemap';\nimport { TreeMapNode, TreeMapFormatter } from '../../record-formatter/tree-map-formatter';\nimport { ProfilerFrame } from 'protocol';\nimport { Subject, Subscription } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\n@Component({\n  selector: 'ng-tree-map-visualizer',\n  templateUrl: './tree-map-visualizer.component.html',\n  styleUrls: ['./tree-map-visualizer.component.scss'],\n})\nexport class TreeMapVisualizerComponent implements OnInit, OnDestroy {\n  private _formatter = new TreeMapFormatter();\n\n  @Input() set frame(frame: ProfilerFrame) {\n    // first element in data is the Application node\n    this.treeMapRecords = this._formatter.formatFrame(frame);\n    if (this.tree) {\n      this._renderTree();\n    }\n  }\n\n  constructor(private _ngZone: NgZone) {}\n\n  private resize$ = new Subject<void>();\n  private _throttledResizeSubscription: Subscription;\n\n  private _resizeObserver: ResizeObserver = new ResizeObserver(() => this._ngZone.run(() => this.resize$.next()));\n  treeMapRecords: TreeMapNode;\n\n  @ViewChild('webTree', { static: true }) tree: ElementRef;\n\n  ngOnInit(): void {\n    this._throttledResizeSubscription = this.resize$.pipe(debounceTime(100)).subscribe(() => this._renderTree());\n    this._resizeObserver.observe(this.tree.nativeElement);\n  }\n\n  ngOnDestroy(): void {\n    this._throttledResizeSubscription.unsubscribe();\n    this._resizeObserver.unobserve(this.tree.nativeElement);\n  }\n\n  private _renderTree(): void {\n    this._removeTree();\n    this._createTree();\n  }\n\n  private _removeTree(): void {\n    Array.from(this.tree.nativeElement.children).forEach((child: HTMLElement) => child.remove());\n  }\n\n  private _createTree(): void {\n    treemap.render(this.tree.nativeElement, this.treeMapRecords, {\n      padding: [20, 5, 5, 5],\n      caption: (node) => `${node.id}: ${node.size.toFixed(3)} ms`,\n      showNode: () => true,\n    });\n  }\n}\n","<as-split unit=\"percent\" [gutterSize]=\"9\">\n  <as-split-area size=\"75\">\n    <ng-container [ngSwitch]=\"_visualizationMode\">\n      <ng-container *ngSwitchCase=\"cmpVisualizationModes.FlameGraph\">\n        <ng-flamegraph-visualizer\n          [frame]=\"frame\"\n          [changeDetection]=\"changeDetection\"\n          (nodeSelect)=\"handleNodeSelect($event)\"\n        ></ng-flamegraph-visualizer>\n      </ng-container>\n      <ng-container *ngSwitchCase=\"cmpVisualizationModes.TreeMap\">\n        <ng-tree-map-visualizer [frame]=\"frame\"></ng-tree-map-visualizer>\n      </ng-container>\n      <ng-container *ngSwitchCase=\"cmpVisualizationModes.BarGraph\">\n        <ng-bargraph-visualizer [frame]=\"frame\" (nodeSelect)=\"handleNodeSelect($event)\"></ng-bargraph-visualizer>\n      </ng-container>\n    </ng-container>\n  </as-split-area>\n  <as-split-area size=\"25\" minSize=\"15\" *ngIf=\"selectedEntry\">\n    <mat-card class=\"selected-entry\">\n      <mat-toolbar>{{ selectedEntry.label }} details</mat-toolbar>\n      <section class=\"entry-statistics\">\n        <div class=\"txt-total-time\">\n          <label>Total time spent:</label><span> {{ selectedEntry.value | number }} ms</span>\n        </div>\n        <div *ngIf=\"selectedEntry.value > 0\">\n          <ng-execution-details [data]=\"selectedDirectives\"> </ng-execution-details>\n        </div>\n        <div *ngIf=\"parentHierarchy.length > 0\">\n          <div class=\"txt-total-time\"><label>Parent Hierarchy</label></div>\n          <ul>\n            <li *ngFor=\"let parent of parentHierarchy\">\n              {{ parent.name }}\n            </li>\n          </ul>\n        </div>\n      </section>\n    </mat-card>\n  </as-split-area>\n</as-split>\n","<div #webTree class=\"web-tree\"></div>\n","import { Component, Input } from '@angular/core';\nimport { VisualizationMode } from '../timeline.component';\nimport { ProfilerFrame } from 'protocol';\nimport { BargraphNode } from '../record-formatter/bargraph-formatter';\nimport { FlamegraphNode } from '../record-formatter/flamegraph-formatter';\n\nexport interface SelectedEntry {\n  entry: BargraphNode | FlamegraphNode;\n  selectedDirectives: SelectedDirective[];\n  parentHierarchy?: { name: string }[];\n}\n\nexport interface SelectedDirective {\n  directive: string;\n  method: string;\n  value: number;\n}\n\n@Component({\n  selector: 'ng-timeline-visualizer',\n  templateUrl: './timeline-visualizer.component.html',\n  styleUrls: ['./timeline-visualizer.component.scss'],\n})\nexport class TimelineVisualizerComponent {\n  @Input() set visualizationMode(mode: VisualizationMode) {\n    this._visualizationMode = mode;\n    this.selectedEntry = null;\n    this.selectedDirectives = [];\n    this.parentHierarchy = [];\n  }\n  @Input() frame: ProfilerFrame;\n  @Input() changeDetection: boolean;\n\n  cmpVisualizationModes = VisualizationMode;\n\n  selectedEntry: BargraphNode | FlamegraphNode | null = null;\n  selectedDirectives: SelectedDirective[] = [];\n  parentHierarchy: { name: string }[] = [];\n  _visualizationMode: VisualizationMode;\n\n  handleNodeSelect({ entry, parentHierarchy, selectedDirectives }: SelectedEntry): void {\n    this.selectedEntry = entry;\n    this.selectedDirectives = selectedDirectives;\n    this.parentHierarchy = parentHierarchy ?? [];\n  }\n}\n","<table>\n  <thead>\n    <th class=\"name\">Directive</th>\n    <th class=\"method\">Method</th>\n    <th class=\"value\">Time</th>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let entry of data\">\n      <td class=\"name\">\n        {{ entry.directive }}\n      </td>\n      <td class=\"method\">\n        {{ entry.method }}\n      </td>\n      <td class=\"value\">{{ entry.value }} ms</td>\n    </tr>\n  </tbody>\n</table>\n","import { Component, Input } from '@angular/core';\n\nexport interface GraphNode {\n  directive: string;\n  method: string;\n  value: number;\n}\n\n@Component({\n  selector: 'ng-execution-details',\n  templateUrl: './execution-details.component.html',\n  styleUrls: ['./execution-details.component.scss'],\n})\nexport class ExecutionDetailsComponent {\n  @Input() data: GraphNode[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatCardModule } from '@angular/material/card';\n\nimport { NgxFlamegraphModule } from 'ngx-flamegraph';\n\nimport { FlamegraphVisualizerComponent } from './flamegraph-visualizer/flamegraph-visualizer.component';\nimport { BargraphVisualizerComponent } from './bargraph-visualizer/bargraph-visualizer.component';\nimport { TreeMapVisualizerComponent } from './tree-map-visualizer/tree-map-visualizer.component';\nimport { TimelineVisualizerComponent } from './timeline-visualizer.component';\nimport { BarChartComponent } from './bar-chart/bar-chart.component';\nimport { ExecutionDetailsComponent } from './execution-details/execution-details.component';\nimport { AngularSplitModule } from '../../../../../vendor/angular-split/lib/module';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\n@NgModule({\n  declarations: [\n    ExecutionDetailsComponent,\n    BarChartComponent,\n    TimelineVisualizerComponent,\n    FlamegraphVisualizerComponent,\n    TreeMapVisualizerComponent,\n    BargraphVisualizerComponent,\n  ],\n  imports: [CommonModule, NgxFlamegraphModule, MatTooltipModule, MatToolbarModule, MatCardModule, AngularSplitModule],\n  exports: [TimelineVisualizerComponent],\n})\nexport class RecordingVisualizerModule {}\n","<mat-card class=\"bar-graph-container\">\n  <p class=\"txt-frames\" matTooltip=\"{{ selectionLabel }} / {{ (graphData$ | async)?.length }}\">\n    {{ selectionLabel }} / {{ (graphData$ | async)?.length }}\n  </p>\n  <button mat-icon-button (click)=\"move(-1)\" [disabled]=\"startFrameIndex <= 0 || selectedFrameIndexes.size > 1\">\n    <mat-icon>chevron_left</mat-icon>\n  </button>\n\n  <cdk-virtual-scroll-viewport #barContainer orientation=\"horizontal\" [itemSize]=\"itemWidth\" class=\"bar-container\">\n    <div\n      *cdkVirtualFor=\"let d of graphData$ | async; let i = index\"\n      [ngStyle]=\"d.style\"\n      class=\"frame-bar\"\n      [class.selected]=\"selectedFrameIndexes.has(i)\"\n      (click)=\"handleFrameSelection(i, $event)\"\n    ></div>\n  </cdk-virtual-scroll-viewport>\n\n  <button\n    mat-icon-button\n    (click)=\"move(1)\"\n    [disabled]=\"endFrameIndex >= (graphData$ | async)?.length - 1 || selectedFrameIndexes.size > 1\"\n  >\n    <mat-icon>chevron_right</mat-icon>\n  </button>\n</mat-card>\n","import { Component, ElementRef, EventEmitter, Input, Output, ViewChild, OnDestroy, OnInit } from '@angular/core';\nimport { GraphNode } from '../record-formatter/record-formatter';\nimport { Observable, Subscription } from 'rxjs';\nimport { CdkVirtualScrollViewport } from '@angular/cdk/scrolling';\nimport { TabUpdate } from '../../../../tab-update';\n\nconst ITEM_WIDTH = 30;\n\n@Component({\n  selector: 'ng-frame-selector',\n  templateUrl: './frame-selector.component.html',\n  styleUrls: ['./frame-selector.component.scss'],\n})\nexport class FrameSelectorComponent implements OnInit, OnDestroy {\n  @ViewChild('barContainer') barContainer: ElementRef;\n  @Input() set graphData$(graphData: Observable<GraphNode[]>) {\n    this._graphData$ = graphData;\n    this._graphDataSubscription = this._graphData$.subscribe((items) =>\n      setTimeout(() => {\n        this.frameCount = items.length;\n        this.viewport.scrollToIndex(items.length);\n      })\n    );\n  }\n\n  get graphData$(): Observable<GraphNode[]> {\n    return this._graphData$;\n  }\n\n  @Output() selectFrames = new EventEmitter<{ indexes: number[] }>();\n\n  @ViewChild(CdkVirtualScrollViewport) viewport: CdkVirtualScrollViewport;\n\n  startFrameIndex = -1;\n  endFrameIndex = -1;\n  selectedFrameIndexes = new Set<number>();\n  frameCount: number;\n\n  get itemWidth(): number {\n    return ITEM_WIDTH;\n  }\n\n  private _graphData$: Observable<GraphNode[]>;\n  private _graphDataSubscription: Subscription;\n  private _tabUpdateSubscription: Subscription;\n\n  constructor(private _tabUpdate: TabUpdate) {}\n\n  ngOnInit(): void {\n    this._tabUpdateSubscription = this._tabUpdate.tabUpdate$.subscribe(() => {\n      if (this.viewport) {\n        setTimeout(() => {\n          this.viewport.scrollToIndex(0);\n          this.viewport.checkViewportSize();\n        });\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    if (this._tabUpdateSubscription) {\n      this._tabUpdateSubscription.unsubscribe();\n    }\n    if (this._graphDataSubscription) {\n      this._graphDataSubscription.unsubscribe();\n    }\n  }\n\n  get selectionLabel(): string {\n    if (this.startFrameIndex === this.endFrameIndex) {\n      return `${this.startFrameIndex + 1}`;\n    }\n\n    return this._smartJoinIndexLabels([...this.selectedFrameIndexes]);\n  }\n\n  private _smartJoinIndexLabels(indexArray: number[]): string {\n    const sortedIndexes = indexArray.sort((a, b) => a - b);\n\n    const groups: number[][] = [];\n    let prev: number | null = null;\n\n    for (const index of sortedIndexes) {\n      // First iteration: create initial group and set prev variable to the first index\n      if (prev === null) {\n        groups.push([index]);\n        prev = index;\n        continue;\n      }\n\n      // If current index is consecutive with the previous, group them, otherwise start a new group\n      if (prev + 1 === index) {\n        groups[groups.length - 1].push(index);\n      } else {\n        groups.push([index]);\n      }\n\n      prev = index;\n    }\n\n    return groups\n      .filter((group) => group.length > 0)\n      .map((group) => (group.length === 1 ? group[0] + 1 : `${group[0] + 1}-${group[group.length - 1] + 1}`))\n      .join(', ');\n  }\n\n  move(value: number): void {\n    const newVal = this.startFrameIndex + value;\n    this.selectedFrameIndexes = new Set([newVal]);\n    if (newVal > -1 && newVal < this.frameCount) {\n      this._selectFrames({ indexes: this.selectedFrameIndexes });\n    }\n  }\n\n  private _selectFrames({ indexes }: { indexes: Set<number> }): void {\n    const sortedIndexes = [...indexes].sort((a, b) => a - b);\n    this.startFrameIndex = sortedIndexes[0];\n    this.endFrameIndex = sortedIndexes[sortedIndexes.length - 1];\n    this._ensureVisible(this.startFrameIndex);\n    this.selectFrames.emit({ indexes: sortedIndexes });\n  }\n\n  handleFrameSelection(idx: number, event: MouseEvent): void {\n    const { shiftKey, ctrlKey, metaKey } = event;\n\n    if (shiftKey) {\n      const [start, end] = [Math.min(this.startFrameIndex, idx), Math.max(this.endFrameIndex, idx)];\n      this.selectedFrameIndexes = new Set(Array.from(Array(end - start + 1), (_, index) => index + start));\n    } else if (ctrlKey || metaKey) {\n      if (this.selectedFrameIndexes.has(idx)) {\n        if (this.selectedFrameIndexes.size === 1) {\n          return; // prevent deselection when only one frame is selected\n        }\n\n        this.selectedFrameIndexes.delete(idx);\n      } else {\n        this.selectedFrameIndexes.add(idx);\n      }\n    } else {\n      this.selectedFrameIndexes = new Set([idx]);\n    }\n\n    this._selectFrames({ indexes: this.selectedFrameIndexes });\n  }\n\n  private _ensureVisible(index: number): void {\n    if (!this.viewport) {\n      return;\n    }\n    const scrollParent = this.viewport.elementRef.nativeElement;\n    // The left most point we see an element\n    const left = scrollParent.scrollLeft;\n    // That's the right most point we currently see an element.\n    const right = left + scrollParent.offsetWidth;\n    const itemLeft = index * this.itemWidth;\n    if (itemLeft < left) {\n      scrollParent.scrollTo({ left: itemLeft });\n    } else if (right < itemLeft + this.itemWidth) {\n      scrollParent.scrollTo({ left: itemLeft - scrollParent.offsetWidth + this.itemWidth });\n    }\n  }\n}\n","<div class=\"controls\">\n  <mat-form-field *ngIf=\"record\">\n    <mat-select [value]=\"visualizationMode\" (selectionChange)=\"this.changeVisualizationMode.emit($event.value)\">\n      <mat-option [value]=\"flameGraphMode\">\n        Flame graph\n      </mat-option>\n      <mat-option [value]=\"treeMapMode\">\n        Tree map\n      </mat-option>\n      <mat-option [value]=\"barGraphMode\">\n        Bar chart\n      </mat-option>\n    </mat-select>\n  </mat-form-field>\n\n  <div\n    class=\"details\"\n    [class.flame-details]=\"visualizationMode == flameGraphMode\"\n    [class.bar-details]=\"visualizationMode == barGraphMode\"\n  >\n    <label *ngIf=\"estimatedFrameRate >= 60 && record\">\n      Time spent: <span class=\"value\">{{ record?.duration | number }} ms</span>\n    </label>\n\n    <label [style.color]=\"frameColor\" *ngIf=\"estimatedFrameRate < 60 && record\">\n      Time spent: <span class=\"value\">{{ record?.duration | number }} ms</span>\n    </label>\n\n    <label [style.color]=\"frameColor\" *ngIf=\"estimatedFrameRate < 60 && record\">\n      Frame rate: <span class=\"value\">{{ estimatedFrameRate }} fps</span>\n    </label>\n\n    <label *ngIf=\"record?.source && record\">\n      Source: <span class=\"value\">{{ record?.source }}</span>\n    </label>\n\n    <mat-checkbox\n      *ngIf=\"visualizationMode == flameGraphMode\"\n      [checked]=\"changeDetection\"\n      (change)=\"this.toggleChangeDetection.emit(!changeDetection)\"\n    >\n      Show only change detection\n    </mat-checkbox>\n  </div>\n\n  <button *ngIf=\"!empty\" mat-stroked-button (click)=\"exportProfile.emit()\">Save Profile</button>\n</div>\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { VisualizationMode } from '../timeline.component';\nimport { ProfilerFrame } from 'protocol';\n\n@Component({\n  selector: 'ng-timeline-controls',\n  templateUrl: './timeline-controls.component.html',\n  styleUrls: ['./timeline-controls.component.scss'],\n})\nexport class TimelineControlsComponent {\n  @Input() record: ProfilerFrame | undefined;\n  @Input() estimatedFrameRate: number;\n  @Input() frameColor: string;\n  @Input() visualizationMode: VisualizationMode;\n  @Input() empty: boolean;\n  @Input() changeDetection: boolean;\n  @Output() changeVisualizationMode = new EventEmitter<VisualizationMode>();\n  @Output() exportProfile = new EventEmitter<void>();\n  @Output() toggleChangeDetection = new EventEmitter<boolean>();\n\n  flameGraphMode = VisualizationMode.FlameGraph;\n  treeMapMode = VisualizationMode.TreeMap;\n  barGraphMode = VisualizationMode.BarGraph;\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'ng-recording-dialog',\n  templateUrl: './recording-dialog.component.html',\n  styleUrls: ['./recording-dialog.component.scss'],\n})\nexport class RecordingDialogComponent {}\n","<section class=\"main-wrapper\">\n  <mat-progress-bar color=\"accent\" mode=\"indeterminate\"></mat-progress-bar>\n</section>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'ng-recording-modal',\n  templateUrl: './recording-modal.component.html',\n  styleUrls: ['./recording-modal.component.scss'],\n})\nexport class RecordingModalComponent {}\n","<section id=\"recorder-wrapper\">\n  <ng-recording-dialog></ng-recording-dialog>\n</section>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TimelineComponent } from './timeline.component';\nimport { RecordingVisualizerModule } from './recording-visualizer/recording-visualizer.module';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { FormsModule } from '@angular/forms';\nimport { NgxFlamegraphModule } from 'ngx-flamegraph';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatIconModule } from '@angular/material/icon';\nimport { FrameSelectorComponent } from './frame-selector/frame-selector.component';\nimport { TimelineControlsComponent } from './timeline-controls/timeline-controls.component';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { RecordingDialogComponent } from './recording-modal/recording-dialog/recording-dialog.component';\nimport { RecordingModalComponent } from './recording-modal/recording-modal.component';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatDialogModule } from '@angular/material/dialog';\n\n@NgModule({\n  declarations: [\n    TimelineComponent,\n    RecordingDialogComponent,\n    RecordingModalComponent,\n    FrameSelectorComponent,\n    TimelineControlsComponent,\n  ],\n  imports: [\n    ScrollingModule,\n    CommonModule,\n    FormsModule,\n    RecordingVisualizerModule,\n    MatCheckboxModule,\n    MatDialogModule,\n    MatProgressBarModule,\n    MatButtonModule,\n    MatTooltipModule,\n    MatIconModule,\n    MatCardModule,\n    NgxFlamegraphModule,\n    MatSelectModule,\n  ],\n  exports: [TimelineComponent],\n})\nexport class TimelineModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { FormsModule } from '@angular/forms';\n\nimport { ProfilerComponent } from './profiler.component';\nimport { TimelineModule } from './recording/timeline/timeline.module';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { ProfilerImportDialogComponent } from './profiler-import-dialog/profiler-import-dialog.component';\nimport { MatIconModule } from '@angular/material/icon';\n\n@NgModule({\n  declarations: [ProfilerComponent, ProfilerImportDialogComponent],\n  imports: [\n    CommonModule,\n    MatDialogModule,\n    MatIconModule,\n    MatSelectModule,\n    FormsModule,\n    TimelineModule,\n    MatButtonModule,\n    MatCardModule,\n  ],\n  exports: [ProfilerComponent],\n  entryComponents: [ProfilerImportDialogComponent],\n})\nexport class ProfilerModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatDialogModule } from '@angular/material/dialog';\n\nimport { RouterTreeComponent } from './router-tree.component';\n\n@NgModule({\n  declarations: [RouterTreeComponent],\n  imports: [CommonModule, MatDialogModule, MatSelectModule],\n  exports: [RouterTreeComponent],\n  entryComponents: [],\n})\nexport class RouterTreeModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DevToolsTabsComponent } from './devtools-tabs.component';\n\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { DirectiveExplorerModule } from './directive-explorer/directive-explorer.module';\nimport { ProfilerModule } from './profiler/profiler.module';\nimport { RouterTreeModule } from './router-tree/router-tree.module';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { TabUpdate } from './tab-update';\n\n@NgModule({\n  declarations: [DevToolsTabsComponent],\n  imports: [\n    MatTabsModule,\n    MatIconModule,\n    DirectiveExplorerModule,\n    ProfilerModule,\n    RouterTreeModule,\n    CommonModule,\n    MatMenuModule,\n    MatButtonModule,\n    MatSlideToggleModule,\n  ],\n  providers: [TabUpdate],\n  exports: [DevToolsTabsComponent],\n})\nexport class DevToolsTabModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DevToolsComponent } from './devtools.component';\nimport { DevToolsTabModule } from './devtools-tabs/devtools-tabs.module';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\n@NgModule({\n  declarations: [DevToolsComponent],\n  imports: [CommonModule, DevToolsTabModule, MatProgressSpinnerModule, MatTooltipModule],\n  exports: [DevToolsComponent],\n})\nexport class DevToolsModule {}\n"]}